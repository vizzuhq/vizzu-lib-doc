{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":"<p> <p>Vizzu - Library for animated data visualizations and data stories.</p> <p> Documentation     \u00b7 Examples     \u00b7 Code reference     \u00b7 Repository </p> </p> <p> </p>"},{"location":"#vizzu","title":"Vizzu","text":""},{"location":"#about-the-project","title":"About The Project","text":"<p>Vizzu is a free, open-source Javascript/C++ library utilizing a generic dataviz engine that generates many types of charts and seamlessly animates between them. It can be used to create static charts but more importantly, it is designed for building animated data stories and interactive explorers as Vizzu enables showing different perspectives of the data that the viewers can easily follow due to the animation.</p> <p>Main features:</p> <ul> <li>Designed with animation in focus;</li> <li>Defaults based on data visualization guidelines;</li> <li>Automatic data aggregation &amp; data filtering;</li> <li>HTML5 canvas rendering;</li> <li>Written in C++ compiled to WebAssembly;</li> <li>Dependency-free.</li> </ul>"},{"location":"#installation","title":"Installation","text":"<p>Install via npm:</p> <pre><code>npm install vizzu</code></pre> <p>Or use it from CDN:</p> <pre><code>&lt;html&gt;\n &lt;head&gt;\n  &lt;script type=\"module\"&gt;\n   import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js';\n  &lt;/script&gt;\n &lt;/head&gt;\n&lt;/html&gt;\n</code></pre>"},{"location":"#usage","title":"Usage","text":"<p>Create a placeholder element that will contain the rendered chart:</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\" style=\"width:800px; height:480px;\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>Create a simple bar chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js';\n\nlet data = {\n    series: [{\n        name: 'Foo',\n        values: ['Alice', 'Bob', 'Ted']\n    }, {\n        name: 'Bar',\n        values: [15, 32, 12]\n    }, {\n        name: 'Baz',\n        values: [5, 3, 2]\n    }]\n};\n\nlet chart = new Vizzu('myVizzu', {\n    data\n});</code></pre> <pre><code>chart.animate({\n    x: 'Foo',\n    y: 'Bar'\n});</code></pre> <p>Then turn it into a scatter plot:</p> <pre><code>chart.animate({\n    color: 'Foo',\n    x: 'Baz',\n    geometry: 'circle'\n});</code></pre> <p>Try it!</p> <p></p>"},{"location":"#faq","title":"FAQ","text":"<p>You can find answers to the most frequently asked questions about using the library in our FAQ.</p>"},{"location":"#projects","title":"Projects","text":"<p>List of external projects (extensions, bindings, templates, etc) for Vizzu: Projects.</p>"},{"location":"#roadmap","title":"Roadmap","text":"<p>We have a comprehensive list of features we plan to implement, on our Roadmap.</p>"},{"location":"#contributing","title":"Contributing","text":"<p>We welcome contributions to the project, visit our wiki page for further info.</p>"},{"location":"#contact","title":"Contact","text":"<ul> <li>Join our Slack:   vizzu-community.slack.com</li> <li>Drop us a line at hello@vizzuhq.com</li> <li>Follow us on Twitter:   https://twitter.com/VizzuHQ</li> </ul>"},{"location":"#license","title":"License","text":"<p>Copyright \u00a9 2021-2023 Vizzu Inc.</p> <p>Released under the Apache 2.0 License.</p>"},{"location":"CODE_OF_CONDUCT/","title":"Code of Conduct","text":"<p>Our community welcomes participants from around the world with different experiences, unique perspectives, and great ideas to share.</p> <p>Whenever we come together as a community, we are here to support each other, to learn from each other\u2019s successes, and to encourage our members to become the Vizzu users they visualize.</p> <p>As a member of the Vizzu community, you accept to follow the below Code of Conduct.</p>"},{"location":"CODE_OF_CONDUCT/#our-pledge","title":"Our Pledge","text":"<p>In the interest of fostering an open and welcoming environment, we as members, users, contributors, and leaders pledge to make participation in our community a harassment-free experience for everyone, regardless of age, body size, visible or invisible disability, ethnicity, sex characteristics, gender identity and expression, level of experience, education, socio-economic status, nationality, personal appearance, race, caste, color, religion, or sexual identity and orientation.</p>"},{"location":"CODE_OF_CONDUCT/#our-standards","title":"Our Standards","text":"<p>Examples of behavior that contributes to a positive environment for our community include:</p> <ul> <li>Using welcoming and inclusive language?</li> <li>Showing empathy and kindness toward other people</li> <li>Being respectful of differing opinions, viewpoints, and experiences</li> <li>Giving and gracefully accepting constructive feedback</li> <li>Accepting responsibility and apologizing to those affected by our mistakes,   and learning from the experience</li> <li>Attempting collaboration before conflict</li> <li>Sharing your knowledge and ask questions</li> <li>Giving credit when the credit is deserved</li> <li>Focusing on what is best for the community</li> </ul> <p>Examples of unacceptable behavior include:</p> <ul> <li>Violence, threats of violence, or inciting others to commit self-harm</li> <li>The use of sexualized language or imagery and unwelcome sexual attention or   advances</li> <li>Trolling, intentionally spreading misinformation, insulting/derogatory   comments, and personal or political attacks</li> <li>Public or private harassment</li> <li>Publishing others' private information, such as a physical or electronic   address, without explicit permission</li> <li>Represent someone else\u2019s work or words as your own</li> <li>Abuse of the reporting process to intentionally harass or exclude others</li> <li>Advocating for, or encouraging, any of the above behavior</li> <li>Other conduct which could reasonably be considered inappropriate in a   professional setting</li> </ul>"},{"location":"CODE_OF_CONDUCT/#enforcement-responsibilities","title":"Enforcement Responsibilities","text":"<p>Project maintainers are responsible for clarifying and enforcing our standards of acceptable behavior and will take appropriate and fair corrective action and will communicate reasons for moderation decisions when appropriate.</p> <p>Project maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently a user or contributor in response to any behavior that they deem inappropriate, threatening, offensive, or harmful.</p>"},{"location":"CODE_OF_CONDUCT/#scope","title":"Scope","text":"<p>This Code of Conduct applies both within community spaces and in public spaces when an individual is representing this community or the project.</p> <p>Examples of representing our community include using an official e-mail address, posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers.</p>"},{"location":"CODE_OF_CONDUCT/#enforcement","title":"Enforcement","text":"<p>Instances of abusive, harassing, or otherwise unacceptable behavior may be reported to us anonymously through this form. All complaints will be reviewed and investigated promptly and fairly. All project maintainers are obligated to respect the privacy and security of the reporter of any incident.</p> <p>Project maintainers will follow these Community Impact Guidelines in determining the consequences for any action they deem in violation of this Code of Conduct:</p> <ul> <li>Correction Community Impact: Use of inappropriate language or other behavior   deemed unprofessional or unwelcome in the community. Consequence: A private,   written warning from Project maintainers, providing clarity around the nature   of the violation and an explanation of why the behavior was inappropriate. A   public apology may be requested.</li> <li>Warning Community Impact: A violation through a single incident or series of   actions. Consequence: A warning with consequences for continued behavior. No   interaction with the people involved, including unsolicited interaction with   those enforcing the Code of Conduct, for a specified period of time. This   includes avoiding interactions in community spaces as well as external   channels like social media. Violating these terms may lead to a temporary or   permanent ban.</li> <li>Temporary Ban Community Impact: A serious violation of community standards,   including sustained inappropriate behavior. Consequence: A temporary ban from   any sort of interaction or public communication with the community for a   specified period of time. No public or private interaction with the people   involved, including unsolicited interaction with those enforcing the Code of   Conduct, is allowed during this period. Violating these terms may lead to a   permanent ban.</li> <li>Permanent Ban Community Impact: Demonstrating a pattern of violation of   community standards, including sustained inappropriate behavior, harassment of   an individual, or aggression toward or disparagement of classes of   individuals. Consequence: A permanent ban from any sort of public interaction   within the community.</li> </ul> <p>Project maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project's leadership.</p> <p>If you are unsure whether an incident is a violation, or whether the space where the incident took place is covered by our Code of Conduct, we encourage you to still report it. We would prefer to have a few extra reports where we decide to take no action than to leave an incident go unnoticed and unresolved that may result in an individual or group to feel like they can no longer participate in the community. Reports deemed as not a violation will also allow us to improve our Code of Conduct and processes surrounding it. If you witness a dangerous situation or someone in distress, we encourage you to report even if you are only an observer.</p>"},{"location":"CODE_OF_CONDUCT/#attribution","title":"Attribution","text":"<p>This Code of Conduct is adapted from the Contributor Covenant, version 2.1, available at https://www.contributor-covenant.org/version/2/1/code_of_conduct.html.</p>"},{"location":"CONTRIBUTING/","title":"Contributing","text":"<p>See the project's Wiki page.</p>"},{"location":"FAQ/","title":"FAQ","text":""},{"location":"FAQ/#how-to-use-vizzu-with-webpack-react-vite-and-other-bundlersframeworks","title":"How to use Vizzu with Webpack, React, Vite and other bundlers/frameworks?","text":"<p>Here's a tutorial and an example.</p>"},{"location":"FAQ/#why-on-off-feature-methods-fail-after-constructor-call","title":"Why on(), off(), feature() methods fail after constructor call?","text":"<p>The Vizzu constructor has to load Vizzu's WebAssembly module asynchronously to prevent blocking the whole page. Because of this, any method except <code>animate()</code> will throw an exception while the library is not initialized.</p> <p>There is an <code>initializing</code> promise in the Vizzu class, which will resolve when initialization is finished. You can call all methods after this promise is resolved.</p>"},{"location":"FAQ/#how-to-load-data-from-csv-into-vizzu","title":"How to load data from CSV into Vizzu?","text":"<p>This example reads the data from a CSV.</p> <p>You can find the source here; the CSV loading part is in the csv-input.js file.</p>"},{"location":"FAQ/#how-to-remove-fraction-digits-on-integer-labels-during-animation","title":"How to remove fraction digits on integer labels during animation?","text":"<p>The maximum number of fraction digits can be set for marker and axis labels with maxFractionDigits style parameter.</p>"},{"location":"LICENSE/","title":"License","text":"<pre>                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n</pre>"},{"location":"PROJECTS/","title":"Projects","text":"<p>This is the list of official and 3rd party projects (extensions, bindings, templates, etc) related to the Vizzu library.</p> <p>If you know any project not listed here please feel free to edit this file and send a pull request.</p> <p>Official:</p> <ul> <li>Bindings<ul> <li>[ipyvizzu] Jupyter Notebook   integration for Vizzu</li> </ul> </li> <li>Extensions<ul> <li>[vizzu-story-js]   Presentation control extension for Vizzu data stories</li> <li>[vizzu-ext-js-scrollytelling]   ScrollyTelling extension for articles with Vizzu</li> </ul> </li> <li>Templates<ul> <li>[vizzu-webpack-demo]   Howto and example for using Vizzu with Webpack</li> <li>[vizzu-react-example]   Howto and example for using Vizzu with React</li> <li>[vizzu-vite-demo] Howto and   example for using Vizzu with Vite</li> <li>[vizzu-pyscript-example]   Howto and example for using Vizzu in PyScript</li> </ul> </li> </ul> <p>Unofficial:</p> <ul> <li>[christopher-caldwell/vizzu-vite-demo]   Starter template on running Vizzu with Vite</li> <li>[triptych/hello-vizzu]   Observable Vizzu example</li> </ul>"},{"location":"installation/","title":"Installation","text":"<p>Install via npm:</p> <pre><code>npm install vizzu</code></pre> <p>Or use it from CDN:</p> <pre><code>&lt;html&gt;\n &lt;head&gt;\n  &lt;script type=\"module\"&gt;\n   import Vizzu from \n  'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js';\n  &lt;/script&gt;\n &lt;/head&gt;\n&lt;/html&gt;\n</code></pre>"},{"location":"examples/","title":"Examples","text":"<p>The <code>Vizzu</code> examples are grouped into four categories.</p> <ul> <li>Preset charts: Examples of the well-known chart types   <code>Vizzu</code> offers a shorthand for, as described in the   Chart presets chapter of the Tutorial.</li> <li>Analytical operations: A collection of   examples to help you apply animated transitions that show another facet of the   data under analysis. Also a great source of inspiration for finding the next   chart when you're building a story.</li> <li>Static charts: Examples of well-known chart types   configured with the original chart type-agnostic syntax of <code>Vizzu</code>.</li> </ul>"},{"location":"examples/analytical_operations/","title":"Analytical Operations","text":"<pre> src='./drilldown/Area_Area.mp4' type='video/mp4'&gt;Drill down\n src='./sum/Area_100percent_Stacked_Area.mp4' type='video/mp4'&gt;Sum\n src='./compare/Area_100percent_Stacked_Area.mp4' type='video/mp4'&gt;Compare\n src='./split/Area_Polar_Stacked_Area.mp4' type='video/mp4'&gt;Split\n src='./stretch_to_proportion/Area_Stacked_Area.mp4' type='video/mp4'&gt;Stretch to proportion\n src='./distribute/ExistingMeasureArea_Stacked_Area.mp4' type='video/mp4'&gt;Distribute\n src='./filter/Area_Polar_Stacked_Area.mp4' type='video/mp4'&gt;Filter\n src='./change_dimension/Area_Polar_Stacked_Area.mp4' type='video/mp4'&gt;Change dimension\n src='./misc/Donut_Donut_to_Coxcomb.mp4' type='video/mp4'&gt;Miscellaneous\n</pre>"},{"location":"examples/analytical_operations/change_dimension/","title":"Change dimension","text":"<p> src='./Area_Polar_Stacked_Area.mp4' type='video/mp4'&gt;  src='./Area_Stacked_Area.mp4' type='video/mp4'&gt;  src='./Column_Stacked_Column.mp4' type='video/mp4'&gt;  src='./DotPlot_Dot_plot_1.mp4' type='video/mp4'&gt;  src='./DotPlot_Dot_plot_2.mp4' type='video/mp4'&gt;  src='./DotPlot_Polar_Dot_plot.mp4' type='video/mp4'&gt;  src='./Line_Line.mp4' type='video/mp4'&gt;  src='./Line_Polar_Line.mp4' type='video/mp4'&gt;</p>"},{"location":"examples/analytical_operations/change_dimension/Area_Polar_Stacked_Area/","title":"Polar Stacked Area","text":"Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport {\n    data_6\n} from 'https://lib.vizzuhq.com/0.7/assets/data/chart_types_eu.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data_6\n})</code></pre> <ul> <li>replace the Dimension and the Measure on the Y-axis with new ones</li> <li>and the Dimension on the Color channel with a new one</li> <li>+ here is an example how you can add a color palette to the Style</li> </ul> <pre><code>chart.animate({\n    config: {\n        \"channels\": {\n            \"x\": \"Year\",\n            \"y\": {\n                \"set\": [\n                    \"Country\",\n                    \"Value 2 (+)\"\n                ],\n                \"range\": {\n                    \"min\": \"-20%\"\n                }\n            },\n            \"color\": \"Country\"\n        },\n        \"geometry\": \"area\",\n        \"coordSystem\": \"polar\"\n    }\n});\n\nchart.animate({\n    config: {\n        \"channels\": {\n            \"y\": [\n                \"Joy factors\",\n                \"Value 3 (+)\"\n            ],\n            \"color\": \"Joy factors\"\n        }\n    },\n    style: {\n        \"plot\": {\n            \"marker\": {\n                \"colorPalette\": \"#ef675aFF #6d8cccFF #e6cf99FF #9c50abFF\"\n            }\n        }\n    }\n});</code></pre>"},{"location":"examples/analytical_operations/change_dimension/Area_Stacked_Area/","title":"Stacked Area","text":"Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport {\n    data_6\n} from 'https://lib.vizzuhq.com/0.7/assets/data/chart_types_eu.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data_6\n})</code></pre> <ul> <li>replace the Dimension and the Measure on the Y-axis with new ones</li> <li>and the Dimension on the Color channel with a new one</li> <li>+ here is an example how you can add a color palette to the Style</li> </ul> <pre><code>chart.animate({\n    config: {\n        \"channels\": {\n            \"x\": \"Year\",\n            \"y\": [\n                \"Country\",\n                \"Value 2 (+)\"\n            ],\n            \"color\": \"Country\"\n        },\n        \"geometry\": \"area\"\n    }\n});\n\nchart.animate({\n    config: {\n        \"channels\": {\n            \"y\": [\n                \"Joy factors\",\n                \"Value 3 (+)\"\n            ],\n            \"color\": \"Joy factors\"\n        }\n    },\n    style: {\n        \"plot\": {\n            \"marker\": {\n                \"colorPalette\": \"#ef675aFF #6d8cccFF #e6cf99FF #9c50abFF\"\n            }\n        }\n    }\n});</code></pre>"},{"location":"examples/analytical_operations/change_dimension/Column_Stacked_Column/","title":"Stacked Column","text":"Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport {\n    data_6\n} from 'https://lib.vizzuhq.com/0.7/assets/data/chart_types_eu.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data_6\n})</code></pre> <ul> <li>replace the Dimension on the X-axis with a new one</li> </ul> <pre><code>chart.animate({\n    config: {\n        \"channels\": {\n            \"x\": \"Year\",\n            \"y\": [\n                \"Country\",\n                \"Value 2 (+)\"\n            ],\n            \"color\": \"Country\"\n        }\n    }\n});\n\nchart.animate({\n    config: {\n        \"channels\": {\n            \"x\": \"Joy factors\"\n        }\n    }\n});</code></pre>"},{"location":"examples/analytical_operations/change_dimension/DotPlot_Dot_plot_1/","title":"Dot plot 1","text":"Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport {\n    data_8\n} from 'https://lib.vizzuhq.com/0.7/assets/data/chart_types_eu.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data_8\n})</code></pre> <ul> <li>replace the Dimension on the X-axis with a new one</li> </ul> <pre><code>chart.animate({\n    config: {\n        \"channels\": {\n            \"x\": \"Year\",\n            \"y\": \"Value 2 (+)\",\n            \"color\": \"Country\"\n        },\n        \"geometry\": \"circle\"\n    }\n});\n\nchart.animate({\n    config: {\n        \"channels\": {\n            \"x\": \"Joy factors\"\n        }\n    }\n});</code></pre>"},{"location":"examples/analytical_operations/change_dimension/DotPlot_Dot_plot_2/","title":"Dot plot 2","text":"Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport {\n    data_6\n} from 'https://lib.vizzuhq.com/0.7/assets/data/chart_types_eu.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data_6\n})</code></pre> <ul> <li>replace the Dimension on the Color channel with a new one</li> <li>+ here is an example how you can add a color palette to the Style</li> </ul> <pre><code>chart.animate({\n    config: {\n        \"channels\": {\n            \"x\": \"Year\",\n            \"y\": \"Value 2 (+)\",\n            \"color\": \"Country\"\n        },\n        \"geometry\": \"circle\"\n    }\n});\n\nchart.animate({\n    config: {\n        \"channels\": {\n            \"color\": \"Joy factors\"\n        }\n    },\n    style: {\n        \"plot\": {\n            \"marker\": {\n                \"colorPalette\": \"#ef675aFF #6d8cccFF #e6cf99FF #9c50abFF\"\n            }\n        }\n    }\n});</code></pre>"},{"location":"examples/analytical_operations/change_dimension/DotPlot_Polar_Dot_plot/","title":"Polar Dot plot","text":"Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport {\n    data_6\n} from 'https://lib.vizzuhq.com/0.7/assets/data/chart_types_eu.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data_6\n})</code></pre> <ul> <li>replace the Dimension on the Color channel with a new one</li> <li>+ here is an example how you can add a color palette to the Style</li> </ul> <pre><code>chart.animate({\n    config: {\n        \"channels\": {\n            \"x\": \"Year\",\n            \"y\": \"Value 2 (+)\",\n            \"color\": \"Country\"\n        },\n        \"geometry\": \"circle\",\n        \"coordSystem\": \"polar\"\n    }\n});\n\nchart.animate({\n    config: {\n        \"channels\": {\n            \"color\": \"Joy factors\"\n        }\n    },\n    style: {\n        \"plot\": {\n            \"marker\": {\n                \"colorPalette\": \"#ef675aFF #6d8cccFF #e6cf99FF #9c50abFF\"\n            }\n        }\n    }\n});</code></pre>"},{"location":"examples/analytical_operations/change_dimension/Line_Line/","title":"Line","text":"Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport {\n    data_6\n} from 'https://lib.vizzuhq.com/0.7/assets/data/chart_types_eu.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data_6\n})</code></pre> <ul> <li>replace the Dimension on the Color channel with a new one</li> <li>+ here is an example how you can add a color palette to the Style</li> </ul> <pre><code>chart.animate({\n    config: {\n        \"channels\": {\n            \"x\": \"Year\",\n            \"y\": \"Value 2 (+)\",\n            \"color\": \"Joy factors\"\n        },\n        \"geometry\": \"line\"\n    },\n    style: {\n        \"plot\": {\n            \"marker\": {\n                \"colorPalette\": \"#ef675aFF #6d8cccFF #e6cf99FF #9c50abFF\"\n            }\n        }\n    }\n});\n\nchart.animate({\n    config: {\n        \"channels\": {\n            \"color\": \"Country\"\n        }\n    },\n    style: {\n        \"plot\": {\n            \"marker\": {\n                \"colorPalette\": null\n            }\n        }\n    }\n});</code></pre>"},{"location":"examples/analytical_operations/change_dimension/Line_Polar_Line/","title":"Polar Line","text":"Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport {\n    data_6\n} from 'https://lib.vizzuhq.com/0.7/assets/data/chart_types_eu.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data_6\n})</code></pre> <ul> <li>replace the Dimension on the Color channel with a new one</li> <li>+ here is an example how you can add a color palette to the Style</li> </ul> <pre><code>chart.animate({\n    config: {\n        \"channels\": {\n            \"x\": \"Year\",\n            \"y\": \"Value 2 (+)\",\n            \"color\": \"Joy factors\"\n        },\n        \"geometry\": \"line\",\n        \"coordSystem\": \"polar\"\n    },\n    style: {\n        \"plot\": {\n            \"marker\": {\n                \"colorPalette\": \"#ef675aFF #6d8cccFF #e6cf99FF #9c50abFF\"\n            }\n        }\n    }\n});\n\nchart.animate({\n    config: {\n        \"channels\": {\n            \"color\": \"Country\"\n        }\n    },\n    style: {\n        \"plot\": {\n            \"marker\": {\n                \"colorPalette\": null\n            }\n        }\n    }\n});</code></pre>"},{"location":"examples/analytical_operations/compare/","title":"Compare","text":"<p> src='./Area_100percent_Stacked_Area.mp4' type='video/mp4'&gt;  src='./Area_Polar_Split_Area.mp4' type='video/mp4'&gt;  src='./Area_Polar_Stacked_Area.mp4' type='video/mp4'&gt;  src='./Area_Split_Stacked_Area.mp4' type='video/mp4'&gt;  src='./Area_Stacked_Area.mp4' type='video/mp4'&gt;  src='./Column_100percent_Stacked_Column.mp4' type='video/mp4'&gt;  src='./Column_Groupped_Column_1.mp4' type='video/mp4'&gt;  src='./Column_Groupped_Column_2.mp4' type='video/mp4'&gt;  src='./Column_Split_Stacked_Column_1.mp4' type='video/mp4'&gt;  src='./Column_Split_Stacked_Column_2.mp4' type='video/mp4'&gt;  src='./Column_Stacked_Column_1.mp4' type='video/mp4'&gt;  src='./Column_Stacked_Column_2.mp4' type='video/mp4'&gt;  src='./Coxcomb_Coxcomb_1.mp4' type='video/mp4'&gt;  src='./Coxcomb_Coxcomb_2.mp4' type='video/mp4'&gt;  src='./Line_Line.mp4' type='video/mp4'&gt;  src='./Line_Polar_Line.mp4' type='video/mp4'&gt;  src='./Stream_Stacked_Stream.mp4' type='video/mp4'&gt;  src='./Waterfall_Waterfall.mp4' type='video/mp4'&gt;</p>"},{"location":"examples/analytical_operations/compare/Area_100percent_Stacked_Area/","title":"100% Stacked Area","text":"Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport {\n    data_6\n} from 'https://lib.vizzuhq.com/0.7/assets/data/chart_types_eu.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data_6\n})</code></pre> <ul> <li>remove the Dimension from Y-axis</li> <li>set the Align parameter from 'stretch' to 'min'</li> <li>switch the Geometry from Area to Line</li> </ul> <pre><code>chart.animate({\n    config: {\n        \"channels\": {\n            \"x\": \"Year\",\n            \"y\": [\n                \"Value 2 (+)\",\n                \"Country\"\n            ],\n            \"color\": \"Country\"\n        },\n        \"geometry\": \"area\",\n        \"align\": \"stretch\"\n    }\n});\n\nchart.animate({\n    config: {\n        \"channels\": {\n            \"y\": \"Value 2 (+)\"\n        },\n        \"geometry\": \"line\",\n        \"align\": \"min\"\n    }\n});\n\nchart.feature('tooltip', true);</code></pre>"},{"location":"examples/analytical_operations/compare/Area_Polar_Split_Area/","title":"Polar Split Area","text":"Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport {\n    data_8\n} from 'https://lib.vizzuhq.com/0.7/assets/data/chart_types_eu.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data_8\n})</code></pre> <ul> <li>remove the Dimension from Y-axis a</li> <li>set the Split parameter from true to false</li> <li>switch the Geometry from Area to Line</li> </ul> <pre><code>chart.animate({\n    config: {\n        \"channels\": {\n            \"x\": \"Year\",\n            \"y\": [\n                \"Value 1 (+)\",\n                \"Country\"\n            ],\n            \"color\": \"Country\"\n        },\n        \"geometry\": \"area\",\n        \"split\": true,\n        \"coordSystem\": \"polar\"\n    }\n});\n\nchart.animate({\n    config: {\n        \"channels\": {\n            \"y\": \"Value 1 (+)\"\n        },\n        \"geometry\": \"line\",\n        \"split\": false\n    }\n});\n\nchart.feature('tooltip', true);</code></pre>"},{"location":"examples/analytical_operations/compare/Area_Polar_Stacked_Area/","title":"Polar Stacked Area","text":"Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport {\n    data_6\n} from 'https://lib.vizzuhq.com/0.7/assets/data/chart_types_eu.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data_6\n})</code></pre> <ul> <li>remove the Dimension from Y-axis</li> <li>switch the Geometry from Area to Line</li> </ul> <pre><code>chart.animate({\n    config: {\n        \"channels\": {\n            \"x\": \"Year\",\n            \"y\": [\n                \"Value 2 (+)\",\n                \"Country\"\n            ],\n            \"color\": \"Country\"\n        },\n        \"geometry\": \"area\",\n        \"coordSystem\": \"polar\"\n    }\n});\n\nchart.animate({\n    config: {\n        \"channels\": {\n            \"y\": \"Value 2 (+)\"\n        },\n        \"geometry\": \"line\"\n    }\n});\n\nchart.feature('tooltip', true);</code></pre>"},{"location":"examples/analytical_operations/compare/Area_Split_Stacked_Area/","title":"Split Stacked Area","text":"Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport {\n    data_8\n} from 'https://lib.vizzuhq.com/0.7/assets/data/chart_types_eu.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data_8\n})</code></pre> <ul> <li>remove the Dimension from Y-axis a</li> <li>set the Split parameter from true to false</li> <li>switch the Geometry from Area to Line</li> </ul> <pre><code>chart.animate({\n    config: {\n        \"channels\": {\n            \"x\": \"Year\",\n            \"y\": [\n                \"Value 2 (+)\",\n                \"Country\"\n            ],\n            \"color\": \"Country\"\n        },\n        \"geometry\": \"area\",\n        \"split\": true\n    }\n});\n\nchart.animate({\n    config: {\n        \"channels\": {\n            \"y\": \"Value 2 (+)\"\n        },\n        \"geometry\": \"line\",\n        \"split\": false\n    }\n});\n\nchart.feature('tooltip', true);</code></pre>"},{"location":"examples/analytical_operations/compare/Area_Stacked_Area/","title":"Stacked Area","text":"Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport {\n    data_6\n} from 'https://lib.vizzuhq.com/0.7/assets/data/chart_types_eu.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data_6\n})</code></pre> <ul> <li>remove the Dimension from Y-axis</li> <li>switch the Geometry from Area to Line</li> </ul> <pre><code>chart.animate({\n    config: {\n        \"channels\": {\n            \"x\": \"Year\",\n            \"y\": [\n                \"Value 2 (+)\",\n                \"Country\"\n            ],\n            \"color\": \"Country\"\n        },\n        \"geometry\": \"area\"\n    }\n});\n\nchart.animate({\n    config: {\n        \"channels\": {\n            \"y\": \"Value 2 (+)\"\n        },\n        \"geometry\": \"line\"\n    }\n});\n\nchart.feature('tooltip', true);</code></pre>"},{"location":"examples/analytical_operations/compare/Column_100percent_Stacked_Column/","title":"100% Stacked Column","text":"Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport {\n    data_4\n} from 'https://lib.vizzuhq.com/0.7/assets/data/chart_types_eu.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data_4\n})</code></pre> <ul> <li>move the Dimension from the Y-axis to the X-axis, behind the one there (group)</li> <li>set the Align parameter from 'stretch' to 'min'</li> </ul> <pre><code>chart.animate({\n    config: {\n        \"channels\": {\n            \"x\": \"Year\",\n            \"y\": [\n                \"Country\",\n                \"Value 2 (+)\"\n            ],\n            \"color\": \"Country\"\n        },\n        \"align\": \"stretch\"\n    }\n});\n\nchart.animate({\n    config: {\n        \"channels\": {\n            \"x\": [\n                \"Year\",\n                \"Country\"\n            ],\n            \"y\": \"Value 2 (+)\"\n        },\n        \"align\": \"min\"\n    }\n});\n\nchart.feature('tooltip', true);</code></pre>"},{"location":"examples/analytical_operations/compare/Column_Groupped_Column_1/","title":"Groupped Column 1","text":"Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport {\n    data_4\n} from 'https://lib.vizzuhq.com/0.7/assets/data/chart_types_eu.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data_4\n})</code></pre> <ul> <li>move the 2nd Dimension from X-axis to the Y-axis</li> <li>add the Measure to the Label channel too</li> </ul> <pre><code>chart.animate({\n    config: {\n        \"channels\": {\n            \"x\": [\n                \"Year\",\n                \"Country\"\n            ],\n            \"y\": \"Value 2 (+)\",\n            \"color\": \"Country\"\n        },\n        \"geometry\": \"rectangle\"\n    }\n});\n\nchart.animate({\n    config: {\n        \"channels\": {\n            \"x\": \"Year\",\n            \"y\": [\n                \"Country\",\n                \"Value 2 (+)\"\n            ],\n            \"label\": \"Value 2 (+)\"\n        },\n        \"split\": true\n    },\n    style: {\n        \"plot\": {\n            \"marker\": {\n                \"label\": {\n                    \"position\": \"top\",\n                    \"fontSize\": \"0.6em\"\n                }\n            }\n        }\n    }\n});\n\nchart.feature('tooltip', true);</code></pre>"},{"location":"examples/analytical_operations/compare/Column_Groupped_Column_2/","title":"Groupped Column 2","text":"Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport {\n    data_8\n} from 'https://lib.vizzuhq.com/0.7/assets/data/chart_types_eu.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data_8\n})</code></pre> <ul> <li>move the 2nd Dimension from X-axis to the Y-axis</li> <li>add the Measure to the Label channel too</li> <li>set the Split parameter to true</li> </ul> <pre><code>chart.animate({\n    config: {\n        \"channels\": {\n            \"x\": [\n                \"Country\",\n                \"Year\"\n            ],\n            \"y\": \"Value 2 (+)\",\n            \"color\": \"Country\"\n        }\n    }\n});\n\nchart.animate({\n    config: {\n        \"channels\": {\n            \"x\": \"Year\",\n            \"y\": [\n                \"Country\",\n                \"Value 2 (+)\"\n            ],\n            \"label\": \"Value 2 (+)\"\n        },\n        \"split\": true\n    },\n    style: {\n        \"plot\": {\n            \"marker\": {\n                \"label\": {\n                    \"position\": \"top\",\n                    \"fontSize\": \"0.6em\"\n                }\n            }\n        }\n    }\n});\n\nchart.feature('tooltip', true);</code></pre>"},{"location":"examples/analytical_operations/compare/Column_Split_Stacked_Column_1/","title":"Split Stacked Column 1","text":"Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport {\n    data_6\n} from 'https://lib.vizzuhq.com/0.7/assets/data/chart_types_eu.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data_6\n})</code></pre> <ul> <li>move the dimension from the Y-axis to the X-axis, in front of the one there</li> <li>null the Label channel</li> <li>set the Split parameter to false</li> </ul> <pre><code>chart.animate({\n    config: {\n        \"channels\": {\n            \"x\": \"Year\",\n            \"y\": [\n                \"Country\",\n                \"Value 2 (+)\"\n            ],\n            \"color\": \"Country\",\n            \"label\": \"Value 2 (+)\"\n        },\n        \"split\": true\n    },\n    style: {\n        \"plot\": {\n            \"marker\": {\n                \"label\": {\n                    \"position\": \"top\",\n                    \"fontSize\": \"0.6em\"\n                }\n            }\n        }\n    }\n});\n\nchart.animate({\n    config: {\n        \"channels\": {\n            \"x\": [\n                \"Year\",\n                \"Country\"\n            ],\n            \"y\": \"Value 2 (+)\",\n            \"label\": null\n        },\n        \"split\": false\n    }\n});\n\nchart.feature('tooltip', true);</code></pre>"},{"location":"examples/analytical_operations/compare/Column_Split_Stacked_Column_2/","title":"Split Stacked Column 2","text":"Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport {\n    data_6\n} from 'https://lib.vizzuhq.com/0.7/assets/data/chart_types_eu.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data_6\n})</code></pre> <ul> <li>move the dimension from the Y-axis to the X-axis, behind the one there</li> <li>null the Label channel</li> <li>set the Split parameter to false</li> </ul> <pre><code>chart.animate({\n    config: {\n        \"channels\": {\n            \"x\": \"Year\",\n            \"y\": [\n                \"Country\",\n                \"Value 2 (+)\"\n            ],\n            \"color\": \"Country\",\n            \"label\": \"Value 2 (+)\"\n        },\n        \"split\": true\n    },\n    style: {\n        \"plot\": {\n            \"marker\": {\n                \"label\": {\n                    \"position\": \"top\",\n                    \"fontSize\": \"0.6em\"\n                }\n            }\n        }\n    }\n});\n\nchart.animate({\n    config: {\n        \"channels\": {\n            \"x\": [\n                \"Country\",\n                \"Year\"\n            ],\n            \"y\": \"Value 2 (+)\",\n            \"label\": null\n        },\n        \"split\": false\n    }\n});\n\nchart.feature('tooltip', true);</code></pre>"},{"location":"examples/analytical_operations/compare/Column_Stacked_Column_1/","title":"Stacked Column 1","text":"Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport {\n    data_4\n} from 'https://lib.vizzuhq.com/0.7/assets/data/chart_types_eu.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data_4\n})</code></pre> <ul> <li>move the Dimension from the Y-axis to the X-axis, behind the one there (group)</li> </ul> <pre><code>chart.animate({\n    config: {\n        \"channels\": {\n            \"x\": \"Year\",\n            \"y\": [\n                \"Country\",\n                \"Value 2 (+)\"\n            ],\n            \"color\": \"Country\"\n        }\n    }\n});\n\nchart.animate({\n    config: {\n        \"channels\": {\n            \"x\": [\n                \"Year\",\n                \"Country\"\n            ],\n            \"y\": \"Value 2 (+)\"\n        }\n    }\n});\n\nchart.feature('tooltip', true);</code></pre>"},{"location":"examples/analytical_operations/compare/Column_Stacked_Column_2/","title":"Stacked Column 2","text":"Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport {\n    data_8\n} from 'https://lib.vizzuhq.com/0.7/assets/data/chart_types_eu.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data_8\n})</code></pre> <ul> <li>remove the Dimension from the Y-axis</li> <li>switch the Geometry from Rectangle to Line</li> </ul> <pre><code>chart.animate({\n    config: {\n        \"channels\": {\n            \"x\": \"Year\",\n            \"y\": [\n                \"Country\",\n                \"Value 2 (+)\"\n            ],\n            \"color\": \"Country\"\n        }\n    }\n});\n\nchart.animate({\n    config: {\n        \"channels\": {\n            \"y\": \"Value 2 (+)\"\n        },\n        \"geometry\": \"line\"\n    }\n});\n\nchart.feature('tooltip', true);</code></pre>"},{"location":"examples/analytical_operations/compare/Coxcomb_Coxcomb_1/","title":"Coxcomb 1","text":"Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport {\n    data_8\n} from 'https://lib.vizzuhq.com/0.7/assets/data/chart_types_eu.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data_8\n})</code></pre> <ul> <li>move the 2nd Dimension from X-axis to the Y-axis</li> <li>set the Split parameter to true</li> </ul> <pre><code>chart.animate({\n    config: {\n        \"channels\": {\n            \"x\": [\n                \"Country\",\n                \"Year\"\n            ],\n            \"y\": {\n                \"set\": \"Value 2 (+)\",\n                \"range\": {\n                    \"min\": \"-20%\"\n                }\n            },\n            \"color\": \"Country\"\n        },\n        \"coordSystem\": \"polar\"\n    }\n});\n\nchart.animate({\n    config: {\n        \"channels\": {\n            \"x\": \"Year\",\n            \"y\": [\n                \"Country\",\n                \"Value 2 (+)\"\n            ]\n        },\n        \"split\": true\n    }\n});\n\nchart.feature('tooltip', true);</code></pre>"},{"location":"examples/analytical_operations/compare/Coxcomb_Coxcomb_2/","title":"Coxcomb 2","text":"Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport {\n    data_4\n} from 'https://lib.vizzuhq.com/0.7/assets/data/chart_types_eu.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data_4\n})</code></pre> <ul> <li>move the Dimension from the Y-axis to the X-axis, behind the one there (group)</li> </ul> <pre><code>chart.animate({\n    config: {\n        \"channels\": {\n            \"x\": \"Year\",\n            \"y\": [\n                \"Country\",\n                \"Value 2 (+)\"\n            ],\n            \"color\": \"Country\"\n        },\n        \"coordSystem\": \"polar\"\n    },\n    style: {\n        \"plot\": {\n            \"marker\": {\n                \"rectangleSpacing\": \"0.1em\"\n            }\n        }\n    }\n});\n\nchart.animate({\n    config: {\n        \"channels\": {\n            \"x\": [\n                \"Year\",\n                \"Country\"\n            ],\n            \"y\": \"Value 2 (+)\"\n        }\n    }\n});\n\nchart.feature('tooltip', true);</code></pre>"},{"location":"examples/analytical_operations/compare/Line_Line/","title":"Line","text":"Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport {\n    data_8\n} from 'https://lib.vizzuhq.com/0.7/assets/data/chart_types_eu.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data_8\n})</code></pre> <ul> <li>add the Dimension which is on the Color channel to the Y-axis too</li> <li>switch the Geometry from Line to Area</li> <li>set the Split parameter to true</li> </ul> <pre><code>chart.animate({\n    config: {\n        \"channels\": {\n            \"x\": \"Year\",\n            \"y\": \"Value 2 (+)\",\n            \"color\": \"Country\"\n        },\n        \"geometry\": \"line\"\n    }\n});\n\nchart.animate({\n    config: {\n        \"channels\": {\n            \"y\": [\n                \"Value 2 (+)\",\n                \"Country\"\n            ]\n        },\n        \"geometry\": \"area\",\n        \"split\": true\n    }\n});\n\nchart.feature('tooltip', true);</code></pre>"},{"location":"examples/analytical_operations/compare/Line_Polar_Line/","title":"Polar Line","text":"Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport {\n    data_8\n} from 'https://lib.vizzuhq.com/0.7/assets/data/chart_types_eu.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data_8\n})</code></pre> <ul> <li>add the Dimension which is on the Color channel to the Y-axis too</li> <li>switch the Geometry from Line to Area</li> <li>set the Split parameter to true</li> </ul> <pre><code>chart.animate({\n    config: {\n        \"channels\": {\n            \"x\": \"Year\",\n            \"y\": \"Value 2 (+)\",\n            \"color\": \"Country\"\n        },\n        \"geometry\": \"line\",\n        \"coordSystem\": \"polar\"\n    }\n});\n\nchart.animate({\n    config: {\n        \"channels\": {\n            \"y\": {\n                \"set\": [\n                    \"Country\",\n                    \"Value 2 (+)\"\n                ],\n                \"range\": {\n                    \"min\": \"-20%\"\n                }\n            }\n        },\n        \"geometry\": \"area\",\n        \"split\": true\n    }\n});\n\nchart.feature('tooltip', true);</code></pre>"},{"location":"examples/analytical_operations/compare/Stream_Stacked_Stream/","title":"Stacked Stream","text":"Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport {\n    data\n} from 'https://lib.vizzuhq.com/0.7/assets/data/music_industry_history_1.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data\n})</code></pre> <p>This is a 2-step animation:</p> <p>1st:</p> <ul> <li>set the Split parameter to true</li> <li>set the Align parameter to 'min'</li> </ul> <p>2nd:</p> <ul> <li>move the Dimension from the Y-axis to the X-axis (before the other)</li> <li>set the Split parameter to false</li> </ul> <pre><code>chart.on('plot-axis-label-draw', (event) =&gt; {\n    let year = parseFloat(event.data.text);\n    if (!event.data.text.includes(\"$\") &amp;&amp; !isNaN(year) &amp;&amp; year % 5 != 0)\n        event.preventDefault();\n});\n\nchart.animate({\n    config: {\n        \"channels\": {\n            \"x\": \"Year\",\n            \"y\": [\n                \"Revenue [$]\",\n                \"Format\"\n            ],\n            \"color\": \"Format\"\n        },\n        \"geometry\": \"area\",\n        \"align\": \"center\"\n    },\n    style: {\n        \"plot\": {\n            \"yAxis\": {\n                \"label\": {\n                    \"numberScale\": \"K, M, B, T\"\n                }\n            }\n        }\n    }\n});\n\nchart.animate({\n    config: {\n        \"align\": \"min\",\n        \"split\": true\n    }\n});\n\nchart.animate({\n    config: {\n        \"channels\": {\n            \"x\": [\n                \"Format\",\n                \"Year\"\n            ],\n            \"y\": \"Revenue [$]\"\n        },\n        \"split\": false\n    }\n});\n\nchart.feature('tooltip', true);</code></pre>"},{"location":"examples/analytical_operations/compare/Waterfall_Waterfall/","title":"Waterfall","text":"Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport {\n    data\n} from 'https://lib.vizzuhq.com/0.7/assets/data/chart_types_eu.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data\n})</code></pre> <ul> <li>remove the Dimension from the Y-axis</li> <li>+ here is an example of how you can set a colorGradient palette in the Style</li> </ul> <pre><code>chart.animate({\n    config: {\n        \"channels\": {\n            \"x\": \"Year\",\n            \"y\": [\n                \"Year\",\n                \"Value 5 (+/-)\"\n            ],\n            \"color\": {\n                \"set\": \"Value 5 (+/-)\",\n                \"range\": {\n                    \"min\": \"-45\",\n                    \"max\": \"45\"\n                }\n            },\n            \"label\": \"Value 5 (+/-)\"\n        },\n        \"legend\": \"color\"\n    },\n    style: {\n        \"plot\": {\n            \"marker\": {\n                \"colorGradient\": \"#ac1727 0,#e36c56 0.15,#f4b096 0.35,#d5d7d9 0.5,#9fbffa 0.65,#6389ec 0.85,#3d51b8 1\",\n                \"label\": {\n                    \"position\": \"top\"\n                }\n            }\n        }\n    }\n});\n\nchart.animate({\n    config: {\n        \"channels\": {\n            \"y\": {\n                \"set\": [\n                    \"Value 5 (+/-)\"\n                ]\n            }\n        }\n    }\n});\n\nchart.feature('tooltip', true);</code></pre>"},{"location":"examples/analytical_operations/distribute/","title":"Distribute","text":"<p> src='./ExistingMeasureArea_Stacked_Area.mp4' type='video/mp4'&gt;  src='./ExistingMeasureBubble_Bubble.mp4' type='video/mp4'&gt;  src='./ExistingMeasureBubble_Stacked_Bubble_1.mp4' type='video/mp4'&gt;  src='./ExistingMeasureBubble_Stacked_Bubble_2.mp4' type='video/mp4'&gt;  src='./ExistingMeasureColumn_Stacked_Column.mp4' type='video/mp4'&gt;  src='./ExistingMeasureCoxcomb_Coxcomb.mp4' type='video/mp4'&gt;  src='./ExistingMeasureDotPlot_Dot_plot.mp4' type='video/mp4'&gt;  src='./ExistingMeasureScatterPlot_Scatter_plot.mp4' type='video/mp4'&gt;  src='./ExistingMeasureScatterPlot_Split_Scatter_plot.mp4' type='video/mp4'&gt;  src='./ExistingMeasureTreemap_Stacked_Treemap.mp4' type='video/mp4'&gt;  src='./NewMeasureColumn_Column.mp4' type='video/mp4'&gt;  src='./NewMeasureColumn_Split_Stacked_Column.mp4' type='video/mp4'&gt;  src='./NewMeasureColumn_Stacked_Column.mp4' type='video/mp4'&gt;  src='./NewMeasureDotPlot_Dot_plot_1.mp4' type='video/mp4'&gt;  src='./NewMeasureDotPlot_Dot_plot_2.mp4' type='video/mp4'&gt;  src='./NewMeasureDotPlot_Dot_plot_3.mp4' type='video/mp4'&gt;  src='./NewMeasureDotPlot_Dot_plot_4.mp4' type='video/mp4'&gt;</p>"},{"location":"examples/analytical_operations/distribute/ExistingMeasureArea_Stacked_Area/","title":"Stacked Area","text":"Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport {\n    data_6\n} from 'https://lib.vizzuhq.com/0.7/assets/data/chart_types_eu.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data_6\n})</code></pre> <ul> <li>remove the Dimension from the Y-axis</li> <li>switch the Geometry from Area to Circle</li> </ul> <pre><code>chart.animate({\n    config: {\n        \"channels\": {\n            \"x\": \"Year\",\n            \"y\": [\n                \"Country\",\n                \"Value 2 (+)\"\n            ],\n            \"color\": \"Country\"\n        },\n        \"geometry\": \"area\"\n    }\n});\n\nchart.animate({\n    config: {\n        \"channels\": {\n            \"y\": \"Value 2 (+)\"\n        },\n        \"geometry\": \"circle\"\n    }\n});\n\nchart.feature('tooltip', true);</code></pre>"},{"location":"examples/analytical_operations/distribute/ExistingMeasureBubble_Bubble/","title":"Bubble","text":"Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport {\n    data_14\n} from 'https://lib.vizzuhq.com/0.7/assets/data/chart_types_eu.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data_14\n})</code></pre> <ul> <li>move the Measure from the Size channel to the Y-axis</li> </ul> <pre><code>chart.animate({\n    config: {\n        \"channels\": {\n            \"noop\": [\n                \"Year\",\n                \"Country\"\n            ],\n            \"size\": \"Value 2 (+)\"\n        },\n        \"geometry\": \"circle\"\n    }\n});\n\nchart.animate({\n    config: {\n        \"channels\": {\n            \"noop\": [\n                \"Year\",\n                \"Country\"\n            ],\n            \"y\": \"Value 2 (+)\",\n            \"size\": null\n        }\n    }\n});</code></pre>"},{"location":"examples/analytical_operations/distribute/ExistingMeasureBubble_Stacked_Bubble_1/","title":"Stacked Bubble 1","text":"Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport {\n    data_4\n} from 'https://lib.vizzuhq.com/0.7/assets/data/chart_types_eu.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data_4\n})</code></pre> <ul> <li>move the Size channel's Dimension to the X-axis</li> <li>move the Measure to the Y-axis</li> <li>duplicate the Dimension in the Color channel onto the Y-axis</li> <li>null the Label channel</li> <li>switch the Geometry from Circle to Rectangle</li> </ul> <pre><code>chart.animate({\n    config: {\n        \"channels\": {\n            \"color\": \"Country\",\n            \"size\": [\n                \"Year\",\n                \"Value 2 (+)\"\n            ],\n            \"label\": \"Value 2 (+)\"\n        },\n        \"geometry\": \"circle\"\n    }\n});\n\nchart.animate({\n    config: {\n        \"channels\": {\n            \"x\": \"Year\",\n            \"y\": {\n                \"set\": [\n                    \"Country\",\n                    \"Value 2 (+)\"\n                ],\n                \"range\": {\n                    \"min\": \"-20%\"\n                }\n            },\n            \"size\": null,\n            \"label\": null\n        },\n        \"geometry\": \"rectangle\",\n        \"coordSystem\": \"polar\"\n    },\n    style: {\n        \"plot\": {\n            \"marker\": {\n                \"rectangleSpacing\": \"0.1em\"\n            }\n        }\n    }\n});\n\nchart.feature('tooltip', true);</code></pre>"},{"location":"examples/analytical_operations/distribute/ExistingMeasureBubble_Stacked_Bubble_2/","title":"Stacked Bubble 2","text":"Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport {\n    data_4\n} from 'https://lib.vizzuhq.com/0.7/assets/data/chart_types_eu.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data_4\n})</code></pre> <ul> <li>move the Size channel's Dimension to the X-axis</li> <li>move the Measure to the Y-axis</li> <li>duplicate the Dimension in the Color channel onto the Y-axis</li> <li>null the Label channel</li> <li>switch the Geometry from Circle to Rectangle</li> </ul> <pre><code>chart.animate({\n    config: {\n        \"channels\": {\n            \"color\": \"Country\",\n            \"size\": [\n                \"Year\",\n                \"Value 2 (+)\"\n            ],\n            \"label\": \"Value 2 (+)\"\n        },\n        \"geometry\": \"circle\"\n    }\n});\n\nchart.animate({\n    config: {\n        \"channels\": {\n            \"x\": \"Year\",\n            \"y\": [\n                \"Country\",\n                \"Value 2 (+)\"\n            ],\n            \"size\": null,\n            \"label\": null\n        },\n        \"geometry\": \"rectangle\"\n    }\n});\n\nchart.feature('tooltip', true);</code></pre>"},{"location":"examples/analytical_operations/distribute/ExistingMeasureColumn_Stacked_Column/","title":"Stacked Column","text":"Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport {\n    data_8\n} from 'https://lib.vizzuhq.com/0.7/assets/data/chart_types_eu.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data_8\n})</code></pre> <ul> <li>remove the Dimension from the Y-axis</li> <li>switch the Geometry from Rectangle to Circle</li> </ul> <pre><code>chart.animate({\n    config: {\n        \"channels\": {\n            \"x\": \"Year\",\n            \"y\": [\n                \"Country\",\n                \"Value 2 (+)\"\n            ],\n            \"color\": \"Country\"\n        }\n    }\n});\n\nchart.animate({\n    config: {\n        \"channels\": {\n            \"y\": \"Value 2 (+)\"\n        },\n        \"geometry\": \"circle\"\n    }\n});\n\nchart.feature('tooltip', true);</code></pre>"},{"location":"examples/analytical_operations/distribute/ExistingMeasureCoxcomb_Coxcomb/","title":"Coxcomb","text":"Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport {\n    data_8\n} from 'https://lib.vizzuhq.com/0.7/assets/data/chart_types_eu.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data_8\n})</code></pre> <ul> <li>remove the Dimension from the Y-axis</li> <li>switch the Geometry from Rectangle to Circle</li> </ul> <pre><code>chart.animate({\n    config: {\n        \"channels\": {\n            \"x\": \"Year\",\n            \"y\": {\n                \"set\": [\n                    \"Country\",\n                    \"Value 2 (+)\"\n                ],\n                \"range\": {\n                    \"min\": \"-20%\"\n                }\n            },\n            \"color\": \"Country\"\n        },\n        \"coordSystem\": \"polar\"\n    },\n    style: {\n        \"plot\": {\n            \"marker\": {\n                \"rectangleSpacing\": \"0.1em\"\n            }\n        }\n    }\n});\n\nchart.animate({\n    config: {\n        \"channels\": {\n            \"y\": \"Value 2 (+)\"\n        },\n        \"geometry\": \"circle\"\n    }\n});\n\nchart.feature('tooltip', true);</code></pre>"},{"location":"examples/analytical_operations/distribute/ExistingMeasureDotPlot_Dot_plot/","title":"Dot plot","text":"Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport {\n    data_8\n} from 'https://lib.vizzuhq.com/0.7/assets/data/chart_types_eu.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data_8\n})</code></pre> <ul> <li>replace the Dimension on the Y-axis with the Measure from the X-axis</li> <li>the other Dimension, which is on the no-operation (Noop) channel, is added to   the X-axis also</li> </ul> <pre><code>chart.animate({\n    config: {\n        \"channels\": {\n            \"x\": \"Value 3 (+)\",\n            \"y\": \"Country\",\n            \"noop\": \"Year\",\n            \"color\": \"Country\"\n        },\n        \"geometry\": \"circle\"\n    }\n});\n\nchart.animate({\n    config: {\n        \"channels\": {\n            \"x\": \"Year\",\n            \"y\": \"Value 3 (+)\"\n        },\n        \"orientation\": \"horizontal\"\n    }\n});\n\nchart.feature('tooltip', true);</code></pre>"},{"location":"examples/analytical_operations/distribute/ExistingMeasureScatterPlot_Scatter_plot/","title":"Scatter plot","text":"Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport {\n    data\n} from 'https://lib.vizzuhq.com/0.7/assets/data/chart_types_eu.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data\n})</code></pre> <p>This Vizzu animation has 4 simple steps (4 animates):</p> <p>1st: replace the Measure on the X-axis to the Dimension whitch is on the Lightness channel</p> <p>2nd: back</p> <p>3rd: replace the Measure on the Y-axis to the Dimension whitch is on the Noop channel</p> <p>4th: back</p> <pre><code>chart.animate({\n    config: {\n        \"channels\": {\n            \"x\": \"Value 5 (+/-)\",\n            \"y\": \"Value 6 (+/-)\",\n            \"noop\": \"Joy factors\",\n            \"lightness\": \"Year\"\n        },\n        \"geometry\": \"circle\"\n    }\n});\n\nchart.animate({\n    config: {\n        \"channels\": {\n            \"x\": \"Year\"\n        },\n        \"orientation\": \"horizontal\"\n    }\n});\n\nchart.animate({\n    config: {\n        \"channels\": {\n            \"x\": \"Value 5 (+/-)\"\n        }\n    }\n});\n\nchart.animate({\n    config: {\n        \"channels\": {\n            \"y\": \"Joy factors\",\n            \"noop\": null\n        },\n        \"orientation\": \"vertical\"\n    }\n});\n\nchart.animate({\n    config: {\n        \"channels\": {\n            \"y\": \"Value 6 (+/-)\",\n            \"noop\": \"Joy factors\"\n        }\n    }\n});\n\nchart.feature('tooltip', true);</code></pre>"},{"location":"examples/analytical_operations/distribute/ExistingMeasureScatterPlot_Split_Scatter_plot/","title":"Split Scatter plot","text":"Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport {\n    data_6\n} from 'https://lib.vizzuhq.com/0.7/assets/data/chart_types_eu.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data_6\n})</code></pre> <ul> <li>remove the Dimension from the X-axis</li> <li>set the Split parameter from true to false</li> </ul> <pre><code>chart.animate({\n    config: {\n        \"channels\": {\n            \"x\": [\n                \"Value 1 (+)\",\n                \"Country\"\n            ],\n            \"y\": \"Value 3 (+)\",\n            \"noop\": \"Year\",\n            \"color\": \"Country\"\n        },\n        \"geometry\": \"circle\",\n        \"split\": true,\n        \"orientation\": \"vertical\"\n    }\n});\n\nchart.animate({\n    config: {\n        \"channels\": {\n            \"x\": \"Value 1 (+)\"\n        },\n        \"split\": false\n    }\n});\n\nchart.feature('tooltip', true);</code></pre>"},{"location":"examples/analytical_operations/distribute/ExistingMeasureTreemap_Stacked_Treemap/","title":"Stacked Treemap","text":"Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport {\n    data_4\n} from 'https://lib.vizzuhq.com/0.7/assets/data/chart_types_eu.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data_4\n})</code></pre> <ul> <li>move the Size channel's Dimension to the X-axis</li> <li>move the Measure to the Y-axis</li> <li>duplicate the Dimension in the Color channel onto the Y-axis</li> <li>null the Label channel</li> </ul> <pre><code>chart.animate({\n    config: {\n        \"channels\": {\n            \"color\": \"Country\",\n            \"size\": [\n                \"Year\",\n                \"Value 2 (+)\"\n            ],\n            \"label\": \"Year\"\n        }\n    }\n});\n\nchart.animate({\n    config: {\n        \"channels\": {\n            \"x\": \"Year\",\n            \"y\": [\n                \"Country\",\n                \"Value 2 (+)\"\n            ],\n            \"size\": null,\n            \"label\": null\n        }\n    },\n    style: {\n        \"plot\": {\n            \"marker\": {\n                \"colorPalette\": null\n            }\n        }\n    }\n});\n\nchart.feature('tooltip', true);</code></pre>"},{"location":"examples/analytical_operations/distribute/NewMeasureColumn_Column/","title":"Column","text":"Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport {\n    data_8\n} from 'https://lib.vizzuhq.com/0.7/assets/data/chart_types_eu.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data_8\n})</code></pre> <ul> <li>move the Dimension from the X-axis &amp; replace the Measure with it on the Label   channel</li> <li>add this Dimension to the Color channel too</li> <li>add a new Measure to the X-axis</li> <li>switch the Geometry from Rectangle (default) to Circe</li> </ul> <pre><code>chart.animate({\n    config: {\n        \"channels\": {\n            \"x\": \"Country\",\n            \"y\": \"Value 2 (+)\",\n            \"label\": \"Value 2 (+)\"\n        }\n    }\n});\n\nchart.animate({\n    config: {\n        \"channels\": {\n            \"x\": \"Value 4 (+/-)\",\n            \"color\": \"Country\",\n            \"label\": \"Country\"\n        },\n        \"geometry\": \"circle\"\n    }\n});\n\nchart.feature('tooltip', true);</code></pre>"},{"location":"examples/analytical_operations/distribute/NewMeasureColumn_Split_Stacked_Column/","title":"Split Stacked Column","text":"Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport {\n    data_4\n} from 'https://lib.vizzuhq.com/0.7/assets/data/chart_types_eu.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data_4\n})</code></pre> <ul> <li>move the Dimension from the X-axis &amp; replace the Measure with it on the Label   channel</li> <li>remove the Dimension from the Y-axis</li> <li>add a new Measure to the X-axis</li> <li>switch the Geometry from Rectangle (default) to Circe</li> <li>set the Split parameter from true to false</li> </ul> <pre><code>chart.animate({\n    config: {\n        \"channels\": {\n            \"x\": \"Year\",\n            \"y\": [\n                \"Country\",\n                \"Value 2 (+)\"\n            ],\n            \"color\": \"Country\",\n            \"label\": \"Value 2 (+)\"\n        },\n        \"split\": true\n    },\n    style: {\n        \"plot\": {\n            \"marker\": {\n                \"label\": {\n                    \"position\": \"top\",\n                    \"fontSize\": \"0.6em\"\n                }\n            }\n        }\n    }\n});\n\nchart.animate({\n    config: {\n        \"channels\": {\n            \"x\": \"Value 5 (+/-)\",\n            \"y\": \"Value 2 (+)\",\n            \"label\": \"Year\"\n        },\n        \"geometry\": \"circle\",\n        \"split\": false\n    }\n});\n\nchart.feature('tooltip', true);</code></pre>"},{"location":"examples/analytical_operations/distribute/NewMeasureColumn_Stacked_Column/","title":"Stacked Column","text":"Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport {\n    data_4\n} from 'https://lib.vizzuhq.com/0.7/assets/data/chart_types_eu.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data_4\n})</code></pre> <ul> <li>move the Dimension from the X-axis &amp; replace the Measure with it on the Label   channel</li> <li>remove the Dimension from the Y-axis</li> <li>add a new Measure to the X-axis</li> <li>switch the Geometry from Rectangle (default) to Circe</li> </ul> <pre><code>chart.animate({\n    config: {\n        \"channels\": {\n            \"x\": \"Year\",\n            \"y\": [\n                \"Country\",\n                \"Value 2 (+)\"\n            ],\n            \"color\": \"Country\"\n        }\n    }\n});\n\nchart.animate({\n    config: {\n        \"channels\": {\n            \"x\": \"Value 5 (+/-)\",\n            \"y\": \"Value 2 (+)\",\n            \"label\": \"Year\"\n        },\n        \"geometry\": \"circle\"\n    }\n});\n\nchart.feature('tooltip', true);</code></pre>"},{"location":"examples/analytical_operations/distribute/NewMeasureDotPlot_Dot_plot_1/","title":"Dot plot 1","text":"Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport {\n    data_1974_1990\n} from 'https://lib.vizzuhq.com/0.7/assets/data/IMDB_data.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data_1974_1990\n})</code></pre> <ul> <li>move the Dimension from Y-axis to the no-operation (Noop) channel</li> <li>add a Measure to the Y-axis</li> <li>set the Split parameter to true</li> </ul> <pre><code>chart.animate({\n    config: {\n        \"channels\": {\n            \"x\": \"Year\",\n            \"y\": {\n                \"set\": \"Index\",\n                \"range\": {\n                    \"max\": \"105%\"\n                }\n            }\n        },\n        \"geometry\": \"circle\"\n    }\n});\n\nchart.animate({\n    config: {\n        \"channels\": {\n            \"y\": {\n                \"set\": \"IMDb Rating\",\n                \"range\": {\n                    \"max\": \"105%\"\n                }\n            },\n            \"noop\": \"Index\"\n        },\n        \"orientation\": \"vertical\",\n        \"split\": true\n    }\n});\n\nchart.feature('tooltip', true);</code></pre>"},{"location":"examples/analytical_operations/distribute/NewMeasureDotPlot_Dot_plot_2/","title":"Dot plot 2","text":"Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport {\n    data_6\n} from 'https://lib.vizzuhq.com/0.7/assets/data/chart_types_eu.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data_6\n})</code></pre> <ul> <li>add a new Measure to the X-axis</li> </ul> <pre><code>chart.animate({\n    config: {\n        \"channels\": {\n            \"y\": \"Value 2 (+)\",\n            \"noop\": \"Year\",\n            \"color\": \"Country\"\n        },\n        \"geometry\": \"circle\"\n    }\n});\n\nchart.animate({\n    config: {\n        \"channels\": {\n            \"x\": \"Value 3 (+)\"\n        }\n    }\n});</code></pre>"},{"location":"examples/analytical_operations/distribute/NewMeasureDotPlot_Dot_plot_3/","title":"Dot plot 3","text":"Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport {\n    data_4\n} from 'https://lib.vizzuhq.com/0.7/assets/data/chart_types_eu.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data_4\n})</code></pre> <ul> <li>replace the Dimension on the Y-axis to a new Measure</li> </ul> <pre><code>chart.animate({\n    config: {\n        \"channels\": {\n            \"x\": \"Value 1 (+)\",\n            \"y\": \"Country\",\n            \"noop\": [\n                \"Year\"\n            ],\n            \"color\": \"Country\"\n        },\n        \"geometry\": \"circle\"\n    }\n});\n\nchart.animate({\n    config: {\n        \"channels\": {\n            \"y\": \"Value 3 (+)\"\n        }\n    }\n});\n\nchart.feature('tooltip', true);</code></pre>"},{"location":"examples/analytical_operations/distribute/NewMeasureDotPlot_Dot_plot_4/","title":"Dot plot 4","text":"Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport {\n    data\n} from 'https://lib.vizzuhq.com/0.7/assets/data/chart_types_eu.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data\n})</code></pre> <ul> <li>add a new Measure to the X-axis</li> <li>move the Dimension from the no-operation (Noop) channel to the Label channel</li> </ul> <pre><code>chart.animate({\n    config: {\n        \"channels\": {\n            \"x\": \"Joy factors\",\n            \"y\": \"Value 5 (+/-)\",\n            \"color\": \"Joy factors\",\n            \"noop\": \"Country_code\"\n        },\n        \"geometry\": \"circle\"\n    },\n    style: {\n        \"plot\": {\n            \"marker\": {\n                \"colorPalette\": \"#ef675aFF #6d8cccFF #e6cf99FF #9c50abFF\"\n            }\n        }\n    }\n});\n\nchart.animate({\n    config: {\n        \"channels\": {\n            \"x\": [\n                \"Joy factors\",\n                \"Value 6 (+/-)\"\n            ],\n            \"label\": \"Country_code\",\n            \"noop\": null\n        }\n    }\n});</code></pre>"},{"location":"examples/analytical_operations/drilldown/","title":"Drill down","text":"<p> src='./Area_Area.mp4' type='video/mp4'&gt;  src='./Area_Polar_Area.mp4' type='video/mp4'&gt;  src='./Bubble_Bubble_and_distribution.mp4' type='video/mp4'&gt;  src='./Column_Column_1.mp4' type='video/mp4'&gt;  src='./Column_Column_2.mp4' type='video/mp4'&gt;  src='./Column_Column_3.mp4' type='video/mp4'&gt;  src='./Column_Column_4.mp4' type='video/mp4'&gt;  src='./Column_Stacked_Column.mp4' type='video/mp4'&gt;  src='./Donut_Donut.mp4' type='video/mp4'&gt;  src='./Line_Line_1.mp4' type='video/mp4'&gt;  src='./Line_Line_2.mp4' type='video/mp4'&gt;  src='./Line_Polar_Line_1.mp4' type='video/mp4'&gt;  src='./Line_Polar_Line_2.mp4' type='video/mp4'&gt;  src='./Radial_Radial.mp4' type='video/mp4'&gt;  src='./ScatterPlot_Scatter_plot.mp4' type='video/mp4'&gt;</p>"},{"location":"examples/analytical_operations/drilldown/Area_Area/","title":"Area","text":"Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport {\n    data_6\n} from 'https://lib.vizzuhq.com/0.7/assets/data/chart_types_eu.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data_6\n})</code></pre> <ul> <li>add a new Dimension to the Y-axis and the Color channel</li> </ul> <pre><code>chart.animate({\n    config: {\n        \"channels\": {\n            \"x\": \"Year\",\n            \"y\": \"Value 2 (+)\"\n        },\n        \"geometry\": \"area\"\n    }\n});\n\nchart.animate({\n    config: {\n        \"channels\": {\n            \"y\": [\n                \"Value 2 (+)\",\n                \"Country\"\n            ],\n            \"color\": \"Country\"\n        }\n    }\n});\n\nchart.feature('tooltip', true);</code></pre>"},{"location":"examples/analytical_operations/drilldown/Area_Polar_Area/","title":"Polar Area","text":"Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport {\n    data_6\n} from 'https://lib.vizzuhq.com/0.7/assets/data/chart_types_eu.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data_6\n})</code></pre> <ul> <li>add a new Dimension to the Y-axis and the Color channel</li> </ul> <pre><code>chart.animate({\n    config: {\n        \"channels\": {\n            \"x\": \"Year\",\n            \"y\": \"Value 2 (+)\"\n        },\n        \"geometry\": \"area\",\n        \"coordSystem\": \"polar\"\n    }\n});\n\nchart.animate({\n    config: {\n        \"channels\": {\n            \"y\": [\n                \"Value 2 (+)\",\n                \"Country\"\n            ],\n            \"color\": \"Country\"\n        }\n    }\n});\n\nchart.feature('tooltip', true);</code></pre>"},{"location":"examples/analytical_operations/drilldown/Bubble_Bubble_and_distribution/","title":"Bubble and distribution","text":"Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport {\n    data_8\n} from 'https://lib.vizzuhq.com/0.7/assets/data/chart_types_eu.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data_8\n})</code></pre> <p>This Vizzu animation consist of 2 steps (animates):</p> <p>1st:</p> <ul> <li>add a new Sub Dimension to the Size channel</li> </ul> <p>2nd:</p> <ul> <li>add two new Measures to the X and Y-axes</li> <li>move the new Sub Dimension to the No-Operation (Noop) channel</li> <li>null the Label channel</li> </ul> <pre><code>chart.animate({\n    config: {\n        \"channels\": {\n            \"color\": \"Country\",\n            \"size\": \"Value 2 (+)\",\n            \"label\": \"Value 2 (+)\"\n        },\n        \"geometry\": \"circle\"\n    }\n});\n\nchart.animate({\n    config: {\n        \"channels\": {\n            \"size\": [\n                \"Year\",\n                \"Value 2 (+)\"\n            ]\n        },\n        \"geometry\": \"circle\"\n    }\n});\n\nchart.animate({\n    config: {\n        \"channels\": {\n            \"x\": \"Value 1 (+)\",\n            \"y\": \"Value 3 (+)\",\n            \"noop\": \"Year\",\n            \"size\": \"Value 2 (+)\",\n            \"label\": null\n        }\n    }\n});\n\nchart.feature('tooltip', true);</code></pre>"},{"location":"examples/analytical_operations/drilldown/Column_Column_1/","title":"Column 1","text":"Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport {\n    data_4\n} from 'https://lib.vizzuhq.com/0.7/assets/data/chart_types_eu.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data_4\n})</code></pre> <ul> <li>add 2 new Dimensions to the X-axis</li> <li>and one of them to the Color channel too</li> </ul> <pre><code>chart.animate({\n    config: {\n        \"channels\": {\n            \"y\": \"Value 2 (+)\",\n            \"label\": \"Value 2 (+)\"\n        }\n    }\n});\n\nchart.animate({\n    config: {\n        \"channels\": {\n            \"x\": [\n                \"Year\",\n                \"Country\"\n            ],\n            \"y\": \"Value 2 (+)\",\n            \"color\": \"Country\",\n            \"label\": null\n        }\n    }\n});\n\nchart.feature('tooltip', true);</code></pre>"},{"location":"examples/analytical_operations/drilldown/Column_Column_2/","title":"Column 2","text":"Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport {\n    data_4\n} from 'https://lib.vizzuhq.com/0.7/assets/data/chart_types_eu.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data_4\n})</code></pre> <ul> <li>add a new Dimension to the X-axis</li> <li>and another to the Y axis and the Color channel</li> </ul> <pre><code>chart.animate({\n    config: {\n        \"channels\": {\n            \"y\": \"Value 2 (+)\",\n            \"label\": \"Value 2 (+)\"\n        }\n    }\n});\n\nchart.animate({\n    config: {\n        \"channels\": {\n            \"x\": \"Year\",\n            \"y\": [\n                \"Country\",\n                \"Value 2 (+)\"\n            ],\n            \"color\": \"Country\",\n            \"label\": null\n        }\n    }\n});\n\nchart.feature('tooltip', true);</code></pre>"},{"location":"examples/analytical_operations/drilldown/Column_Column_3/","title":"Column 3","text":"Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport {\n    data_8\n} from 'https://lib.vizzuhq.com/0.7/assets/data/chart_types_eu.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data_8\n})</code></pre> <ul> <li>add a new Dimension to the X-axis.</li> </ul> <pre><code>chart.animate({\n    config: {\n        \"channels\": {\n            \"y\": \"Value 2 (+)\",\n            \"label\": \"Value 2 (+)\"\n        }\n    }\n});\n\nchart.animate({\n    config: {\n        \"channels\": {\n            \"x\": \"Country\"\n        }\n    }\n});\n\nchart.feature('tooltip', true);</code></pre>"},{"location":"examples/analytical_operations/drilldown/Column_Column_4/","title":"Column 4","text":"Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport {\n    data_8\n} from 'https://lib.vizzuhq.com/0.7/assets/data/chart_types_eu.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data_8\n})</code></pre> <ul> <li>add 2 new Dimensions to the Y-axis and the Color channel</li> </ul> <pre><code>chart.animate({\n    config: {\n        \"channels\": {\n            \"x\": \"Country\",\n            \"y\": \"Value 2 (+)\",\n            \"label\": \"Value 2 (+)\"\n        }\n    }\n});\n\nchart.animate({\n    config: {\n        \"channels\": {\n            \"y\": [\n                \"Value 2 (+)\",\n                \"Joy factors\"\n            ],\n            \"color\": \"Joy factors\"\n        }\n    },\n    style: {\n        \"plot\": {\n            \"marker\": {\n                \"colorPalette\": \"#ef675aFF #6d8cccFF #e6cf99FF #9c50abFF\"\n            }\n        }\n    }\n});\n\nchart.feature('tooltip', true);</code></pre>"},{"location":"examples/analytical_operations/drilldown/Column_Stacked_Column/","title":"Stacked Column","text":"Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport {\n    data_8\n} from 'https://lib.vizzuhq.com/0.7/assets/data/chart_types_eu.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data_8\n})</code></pre> <ul> <li>add a new Dimension to the X-axis</li> </ul> <pre><code>chart.animate({\n    config: {\n        \"channels\": {\n            \"y\": [\n                \"Country\",\n                \"Value 2 (+)\"\n            ],\n            \"color\": \"Country\",\n            \"label\": \"Value 2 (+)\"\n        }\n    }\n});\n\nchart.animate({\n    config: {\n        \"channels\": {\n            \"x\": \"Year\",\n            \"label\": null\n        }\n    }\n});\n\nchart.feature('tooltip', true);</code></pre>"},{"location":"examples/analytical_operations/drilldown/Donut_Donut/","title":"Donut","text":"Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport {\n    data_8\n} from 'https://lib.vizzuhq.com/0.7/assets/data/chart_types_eu.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data_8\n})</code></pre> <p>This Vizzu animation consist of 2 steps (animates):</p> <p>1st:</p> <ul> <li>move the Dimension from X-axis to the Y-axis</li> <li>add a new Dimension to the X-axis</li> <li>remove the Measure from the label channel</li> </ul> <p>2nd:</p> <ul> <li>move the Measure from X to Y-axis</li> </ul> <pre><code>chart.animate({\n    config: {\n        \"channels\": {\n            \"x\": [\n                \"Country\",\n                \"Value 2 (+)\"\n            ],\n            \"y\": {\n                \"range\": {\n                    \"min\": \"-200%\"\n                }\n            },\n            \"color\": \"Country\",\n            \"label\": \"Value 2 (+)\"\n        },\n        \"coordSystem\": \"polar\"\n    }\n});\n\nchart.animate({\n    config: {\n        \"channels\": {\n            \"x\": [\n                \"Year\",\n                \"Value 2 (+)\"\n            ],\n            \"y\": {\n                \"set\": \"Country\",\n                \"range\": {\n                    \"min\": \"-30%\"\n                }\n            },\n            \"label\": null\n        }\n    }\n});\n\nchart.animate({\n    config: {\n        \"channels\": {\n            \"x\": \"Year\",\n            \"y\": {\n                \"set\": [\n                    \"Country\",\n                    \"Value 2 (+)\"\n                ],\n                \"range\": {\n                    \"min\": \"-30%\"\n                }\n            }\n        }\n    },\n    style: {\n        \"plot\": {\n            \"marker\": {\n                \"rectangleSpacing\": \"0.1em\"\n            }\n        }\n    }\n});\n\nchart.feature('tooltip', true);</code></pre>"},{"location":"examples/analytical_operations/drilldown/Line_Line_1/","title":"Line 1","text":"Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport {\n    data_6\n} from 'https://lib.vizzuhq.com/0.7/assets/data/chart_types_eu.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data_6\n})</code></pre> <ul> <li>add a new Dimension to the Color channel</li> </ul> <pre><code>chart.animate({\n    config: {\n        \"channels\": {\n            \"x\": \"Year\",\n            \"y\": \"Value 2 (+)\"\n        },\n        \"geometry\": \"line\"\n    }\n});\n\nchart.animate({\n    config: {\n        \"channels\": {\n            \"color\": \"Country\"\n        }\n    }\n});\n\nchart.feature('tooltip', true);</code></pre>"},{"location":"examples/analytical_operations/drilldown/Line_Line_2/","title":"Line 2","text":"Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport {\n    data_6\n} from 'https://lib.vizzuhq.com/0.7/assets/data/chart_types_eu.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data_6\n})</code></pre> <ul> <li>add a new Dimension to the Y-axis &amp; the Color channel</li> <li>switch the Geometry from Line to Area</li> </ul> <pre><code>chart.animate({\n    config: {\n        \"channels\": {\n            \"x\": \"Year\",\n            \"y\": \"Value 3 (+)\"\n        },\n        \"geometry\": \"line\"\n    }\n});\n\nchart.animate({\n    config: {\n        \"channels\": {\n            \"y\": [\n                \"Country\",\n                \"Value 3 (+)\"\n            ],\n            \"color\": \"Country\"\n        },\n        \"geometry\": \"area\"\n    }\n});</code></pre>"},{"location":"examples/analytical_operations/drilldown/Line_Polar_Line_1/","title":"Polar Line 1","text":"Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport {\n    data_6\n} from 'https://lib.vizzuhq.com/0.7/assets/data/chart_types_eu.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data_6\n})</code></pre> <ul> <li>add a new Dimension to the Y-axis &amp; the Color channel</li> <li>switch the Geometry from Line to Area</li> </ul> <pre><code>chart.animate({\n    config: {\n        \"channels\": {\n            \"x\": \"Year\",\n            \"y\": \"Value 3 (+)\"\n        },\n        \"geometry\": \"line\",\n        \"coordSystem\": \"polar\"\n    }\n});\n\nchart.animate({\n    config: {\n        \"channels\": {\n            \"y\": [\n                \"Country\",\n                \"Value 3 (+)\"\n            ],\n            \"color\": \"Country\"\n        },\n        \"geometry\": \"area\"\n    }\n});</code></pre>"},{"location":"examples/analytical_operations/drilldown/Line_Polar_Line_2/","title":"Polar Line 2","text":"Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport {\n    data_6\n} from 'https://lib.vizzuhq.com/0.7/assets/data/chart_types_eu.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data_6\n})</code></pre> <ul> <li>add a new Dimension to the Color channel</li> </ul> <pre><code>chart.animate({\n    config: {\n        \"channels\": {\n            \"x\": \"Year\",\n            \"y\": \"Value 2 (+)\"\n        },\n        \"geometry\": \"line\",\n        \"coordSystem\": \"polar\"\n    }\n});\n\nchart.animate({\n    config: {\n        \"channels\": {\n            \"color\": \"Country\"\n        }\n    }\n});\n\nchart.feature('tooltip', true);</code></pre>"},{"location":"examples/analytical_operations/drilldown/Radial_Radial/","title":"Radial","text":"Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport {\n    data_8\n} from 'https://lib.vizzuhq.com/0.7/assets/data/chart_types_eu.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data_8\n})</code></pre> <ul> <li>add 2 new Dimensions to the Y-axis and the Color channel</li> <li>remove the Measure from the Label channel</li> </ul> <pre><code>chart.animate({\n    config: {\n        \"channels\": {\n            \"x\": \"Value 2 (+)\",\n            \"y\": {\n                \"set\": \"Country\",\n                \"range\": {\n                    \"min\": \"-30%\"\n                }\n            },\n            \"label\": \"Value 2 (+)\"\n        },\n        \"coordSystem\": \"polar\"\n    }\n});\n\nchart.animate({\n    config: {\n        \"channels\": {\n            \"x\": [\n                \"Value 2 (+)\",\n                \"Joy factors\"\n            ],\n            \"color\": \"Joy factors\",\n            \"label\": null\n        }\n    },\n    style: {\n        \"plot\": {\n            \"marker\": {\n                \"colorPalette\": \"#ef675aFF #6d8cccFF #e6cf99FF #9c50abFF\"\n            }\n        }\n    }\n});\n\nchart.feature('tooltip', true);</code></pre>"},{"location":"examples/analytical_operations/drilldown/ScatterPlot_Scatter_plot/","title":"Scatter plot","text":"Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport {\n    data_14\n} from 'https://lib.vizzuhq.com/0.7/assets/data/chart_types_eu.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data_14\n})</code></pre> <ul> <li>add a new Dimension to the no-operation (Noop) channel</li> </ul> <pre><code>chart.animate({\n    config: {\n        \"channels\": {\n            \"y\": \"Value 4 (+/-)\",\n            \"x\": \"Value 2 (+)\",\n            \"color\": \"Country\",\n            \"label\": \"Country\"\n        },\n        \"geometry\": \"circle\"\n    }\n});\n\nchart.animate({\n    config: {\n        \"channels\": {\n            \"noop\": \"Year\",\n            \"label\": null\n        }\n    }\n});</code></pre>"},{"location":"examples/analytical_operations/filter/","title":"Filter","text":"<p> src='./Area_Polar_Stacked_Area.mp4' type='video/mp4'&gt;  src='./Area_Stacked_Area.mp4' type='video/mp4'&gt;  src='./Line_Line.mp4' type='video/mp4'&gt;  src='./Line_Polar_Line.mp4' type='video/mp4'&gt;  src='./Stream_Stream_1.mp4' type='video/mp4'&gt;  src='./Stream_Stream_2.mp4' type='video/mp4'&gt;</p>"},{"location":"examples/analytical_operations/filter/Area_Polar_Stacked_Area/","title":"Polar Stacked Area","text":"Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport {\n    data_8\n} from 'https://lib.vizzuhq.com/0.7/assets/data/chart_types_eu.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data_8\n})</code></pre> <ul> <li>filter the Diemsion data series which is on the Y-axis</li> </ul> <pre><code>chart.animate({\n    config: {\n        \"channels\": {\n            \"x\": \"Year\",\n            \"y\": [\n                \"Value 2 (+)\",\n                \"Country_code\"\n            ],\n            \"color\": \"Country_code\"\n        },\n        \"geometry\": \"area\",\n        \"coordSystem\": \"polar\"\n    }\n});\n\nchart.animate({\n    data: {\n        filter: (record) =&gt;\n            record[\"Country_code\"] == \"FR\" || record[\"Country_code\"] == \"CY\"\n    },\n    config: {}\n});\n\nchart.feature('tooltip', true);</code></pre>"},{"location":"examples/analytical_operations/filter/Area_Stacked_Area/","title":"Stacked Area","text":"Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport {\n    data_8\n} from 'https://lib.vizzuhq.com/0.7/assets/data/chart_types_eu.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data_8\n})</code></pre> <ul> <li>filter the Diemsion data series which is on the Y-axis</li> </ul> <pre><code>chart.animate({\n    config: {\n        \"channels\": {\n            \"x\": [\n                \"Year\"\n            ],\n            \"y\": [\n                \"Value 2 (+)\",\n                \"Country_code\"\n            ],\n            \"color\": \"Country_code\"\n        },\n        \"geometry\": \"area\"\n    }\n});\n\nchart.animate({\n    data: {\n        filter: (record) =&gt;\n            record[\"Country_code\"] == \"FR\" || record[\"Country_code\"] == \"CY\"\n    },\n    config: {}\n});\n\nchart.feature('tooltip', true);</code></pre>"},{"location":"examples/analytical_operations/filter/Line_Line/","title":"Line","text":"Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport {\n    data_8\n} from 'https://lib.vizzuhq.com/0.7/assets/data/chart_types_eu.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data_8\n})</code></pre> <ul> <li>filter the Diemsion data series which is on the Color channel</li> </ul> <pre><code>chart.animate({\n    config: {\n        \"channels\": {\n            \"x\": \"Year\",\n            \"y\": \"Value 3 (+)\",\n            \"color\": \"Country_code\"\n        },\n        \"geometry\": \"line\"\n    }\n});\n\nchart.animate({\n    data: {\n        filter: (record) =&gt;\n            record[\"Country_code\"] == \"CY\" || record[\"Country_code\"] == \"ES\"\n    },\n    config: {}\n});\n\nchart.feature('tooltip', true);</code></pre>"},{"location":"examples/analytical_operations/filter/Line_Polar_Line/","title":"Polar Line","text":"Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport {\n    data_8\n} from 'https://lib.vizzuhq.com/0.7/assets/data/chart_types_eu.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data_8\n})</code></pre> <ul> <li>filter the Diemsion data series which is on the Color channel</li> </ul> <pre><code>chart.animate({\n    config: {\n        \"channels\": {\n            \"x\": \"Year\",\n            \"y\": \"Value 3 (+)\",\n            \"color\": \"Country_code\"\n        },\n        \"geometry\": \"line\",\n        \"coordSystem\": \"polar\"\n    }\n});\n\nchart.animate({\n    data: {\n        filter: (record) =&gt;\n            record[\"Country_code\"] == \"CY\" || record[\"Country_code\"] == \"ES\"\n    },\n    config: {}\n});\n\nchart.feature('tooltip', true);</code></pre>"},{"location":"examples/analytical_operations/filter/Stream_Stream_1/","title":"Stream 1","text":"Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport {\n    data\n} from 'https://lib.vizzuhq.com/0.7/assets/data/music_industry_history_1.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data\n})</code></pre> <ul> <li>filter the Diemsion data series on the Y-axis step-by-step, combined with   their dominant time period on Year data series</li> </ul> <pre><code>chart.animate({\n    config: {\n        \"channels\": {\n            \"x\": [\n                \"Year\"\n            ],\n            \"y\": [\n                \"Revenue [$]\",\n                \"Format\"\n            ],\n            \"color\": \"Format\"\n        },\n        \"geometry\": \"area\",\n        \"align\": \"center\"\n    },\n    style: {\n        \"plot\": {\n            \"yAxis\": {\n                \"label\": {\n                    \"numberScale\": \"K, M, B, T\"\n                }\n            }\n        }\n    }\n});\n\nchart.animate({\n    data: {\n        filter: (record) =&gt;\n            (record.Format == \"Tapes\" || record.Format == \"Vinyl\") &amp;&amp;\n            record[\"Year\"] &lt;= 1989\n    },\n    config: {}\n});\n\nchart.on('plot-axis-label-draw', (event) =&gt; {\n    let year = parseFloat(event.data.text);\n    if (!event.data.text.includes(\"$\") &amp;&amp; !isNaN(year) &amp;&amp; year % 5 != 0)\n        event.preventDefault();\n});\n\nchart.animate({\n    data: {\n        filter: (record) =&gt;\n            (record.Format == \"Tapes\" ||\n                record.Format == \"Cassette\" ||\n                record.Format == \"Vinyl\") &amp;&amp;\n            record[\"Year\"] &lt;= 1999\n    },\n    config: {}\n});\n\nchart.animate({\n    data: {\n        filter: (record) =&gt;\n            record.Format == \"DVD\" ||\n            record.Format == \"Other\" ||\n            record.Format == \"Tapes\" ||\n            record.Format == \"Cassette\" ||\n            record.Format == \"Vinyl\" ||\n            record.Format == \"CD\"\n    },\n    config: {}\n});\n\nchart.animate({\n    data: {\n        filter: (record) =&gt;\n            record.Format == \"DVD\" ||\n            record.Format == \"Other\" ||\n            record.Format == \"Tapes\" ||\n            record.Format == \"Download\" ||\n            record.Format == \"Cassette\" ||\n            record.Format == \"Vinyl\" ||\n            record.Format == \"CD\"\n    },\n    config: {}\n});\n\nchart.animate({\n    data: {\n        filter: (record) =&gt;\n            record.Format == \"DVD\" ||\n            record.Format == \"Other\" ||\n            record.Format == \"Tapes\" ||\n            record.Format == \"Download\" ||\n            record.Format == \"Streaming\" ||\n            record.Format == \"Cassette\" ||\n            record.Format == \"Vinyl\" ||\n            record.Format == \"CD\"\n    },\n    config: {}\n});\n\nchart.feature('tooltip', true);</code></pre>"},{"location":"examples/analytical_operations/filter/Stream_Stream_2/","title":"Stream 2","text":"Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport {\n    data\n} from 'https://lib.vizzuhq.com/0.7/assets/data/music_industry_history_1.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data\n})</code></pre> <ul> <li>fix the X-axis-range</li> <li>filter the Diemsion data series on the Y-axis step-by-step</li> </ul> <pre><code>chart.on('plot-axis-label-draw', (event) =&gt; {\n    let year = parseFloat(event.data.text);\n    if (!event.data.text.includes(\"$\") &amp;&amp; !isNaN(year) &amp;&amp; year % 5 != 0)\n        event.preventDefault();\n});\n\nchart.animate({\n    config: {\n        \"channels\": {\n            \"x\": {\n                \"set\": \"Year\",\n                \"range\": {\n                    \"max\": \"48\"\n                }\n            },\n            \"y\": [\n                \"Revenue [$]\",\n                \"Format\"\n            ],\n            \"color\": \"Format\"\n        },\n        \"geometry\": \"area\",\n        \"align\": \"center\"\n    },\n    style: {\n        \"plot\": {\n            \"yAxis\": {\n                \"label\": {\n                    \"numberScale\": \"K, M, B, T\"\n                }\n            }\n        }\n    }\n});\n\nchart.animate({\n    data: {\n        filter: (record) =&gt;\n            record.Format == \"Tapes\" || record.Format == \"Vinyl\"\n    },\n    config: {}\n});\n\nchart.animate({\n    data: {\n        filter: (record) =&gt;\n            record.Format == \"Tapes\" ||\n            record.Format == \"Cassette\" ||\n            record.Format == \"Vinyl\"\n    },\n    config: {}\n});\n\nchart.animate({\n    data: {\n        filter: (record) =&gt;\n            record.Format == \"DVD\" ||\n            record.Format == \"Tapes\" ||\n            record.Format == \"Cassette\" ||\n            record.Format == \"Vinyl\" ||\n            record.Format == \"CD\"\n    },\n    config: {}\n});\n\nchart.animate({\n    data: {\n        filter: (record) =&gt;\n            record.Format == \"DVD\" ||\n            record.Format == \"Other\" ||\n            record.Format == \"Tapes\" ||\n            record.Format == \"Cassette\" ||\n            record.Format == \"Vinyl\" ||\n            record.Format == \"CD\"\n    },\n    config: {}\n});\n\nchart.animate({\n    data: {\n        filter: (record) =&gt;\n            record.Format == \"DVD\" ||\n            record.Format == \"Other\" ||\n            record.Format == \"Tapes\" ||\n            record.Format == \"Download\" ||\n            record.Format == \"Cassette\" ||\n            record.Format == \"Vinyl\" ||\n            record.Format == \"CD\"\n    },\n    config: {}\n});\n\nchart.animate({\n    data: {\n        filter: (record) =&gt;\n            record.Format == \"DVD\" ||\n            record.Format == \"Other\" ||\n            record.Format == \"Tapes\" ||\n            record.Format == \"Download\" ||\n            record.Format == \"Streaming\" ||\n            record.Format == \"Cassette\" ||\n            record.Format == \"Vinyl\" ||\n            record.Format == \"CD\"\n    },\n    config: {}\n});\n\nchart.feature('tooltip', true);</code></pre>"},{"location":"examples/analytical_operations/misc/","title":"Miscellaneous","text":"<p> src='./Donut_Donut_to_Coxcomb.mp4' type='video/mp4'&gt;  src='./Marimekko_Marimekko_Orientation.mp4' type='video/mp4'&gt;  src='./Pie_From_Pie_to_Donut.mp4' type='video/mp4'&gt;  src='./Polar_Make_Space_with_Polar.mp4' type='video/mp4'&gt;</p>"},{"location":"examples/analytical_operations/misc/Donut_Donut_to_Coxcomb/","title":"Donut to Coxcomb","text":"Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport {\n    data_6\n} from 'https://lib.vizzuhq.com/0.7/assets/data/chart_types_eu.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data_6\n})</code></pre> <ul> <li>add a new Measure to the Y-axis</li> <li>change the range of the Y-axis to disappear empty circle from the center</li> </ul> <pre><code>chart.animate({\n    config: {\n        \"channels\": {\n            \"x\": [\n                \"Value 2 (+)\",\n                \"Country\"\n            ],\n            \"y\": {\n                \"range\": {\n                    \"min\": \"-200%\"\n                }\n            },\n            \"color\": \"Country\",\n            \"label\": \"Value 2 (+)\"\n        },\n        \"coordSystem\": \"polar\"\n    }\n});\n\nchart.animate({\n    config: {\n        \"channels\": {\n            \"x\": [\n                \"Value 2 (+)\",\n                \"Country\"\n            ],\n            \"y\": {\n                \"set\": \"Value 3 (+)\",\n                \"range\": {\n                    \"min\": \"0\"\n                }\n            }\n        }\n    }\n});</code></pre>"},{"location":"examples/analytical_operations/misc/Marimekko_Marimekko_Orientation/","title":"Marimekko Orientation","text":"Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport {\n    data_4\n} from 'https://lib.vizzuhq.com/0.7/assets/data/chart_types_eu.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data_4\n})</code></pre> <ul> <li>change the orientation from 'horizontal' to 'vertical'</li> </ul> <pre><code>chart.animate({\n    config: {\n        \"channels\": {\n            \"x\": [\n                \"Country\",\n                \"Value 2 (+)\"\n            ],\n            \"y\": [\n                \"Joy factors\",\n                \"Value 3 (+)\"\n            ],\n            \"color\": \"Joy factors\",\n            \"label\": \"Country\",\n            \"lightness\": \"Country\"\n        },\n        \"align\": \"stretch\",\n        \"orientation\": \"horizontal\"\n    }\n});\n\nchart.animate({\n    config: {\n        \"orientation\": \"vertical\"\n    }\n});</code></pre>"},{"location":"examples/analytical_operations/misc/Pie_From_Pie_to_Donut/","title":"From Pie to Donut","text":"Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport {\n    data\n} from 'https://lib.vizzuhq.com/0.7/assets/data/chart_types_eu.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data\n})</code></pre> <ul> <li>set the range of the Y-axis to make empty circle in the center</li> </ul> <pre><code>chart.animate({\n    config: {\n        \"channels\": {\n            \"x\": [\n                \"Joy factors\",\n                \"Value 2 (+)\"\n            ],\n            \"color\": \"Joy factors\",\n            \"label\": \"Value 2 (+)\"\n        },\n        \"coordSystem\": \"polar\"\n    }\n});\n\nchart.animate({\n    config: {\n        \"channels\": {\n            \"y\": {\n                \"range\": {\n                    \"min\": \"-200%\"\n                }\n            }\n        }\n    }\n});</code></pre>"},{"location":"examples/analytical_operations/misc/Polar_Make_Space_with_Polar/","title":"Make Space with Polar","text":"Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport {\n    data_8\n} from 'https://lib.vizzuhq.com/0.7/assets/data/chart_types_eu.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data_8\n})</code></pre> <ul> <li>change coordinate system to 'polar'</li> <li>add left padding in the Style to make space near the chart for something</li> </ul> <pre><code>chart.animate({\n    config: {\n        \"channels\": {\n            \"x\": \"Value 2 (+)\",\n            \"y\": \"Country\",\n            \"color\": \"Country\"\n        }\n    }\n});\n\nchart.animate({\n    config: {\n        \"channels\": {\n            \"x\": [\n                \"Value 2 (+)\"\n            ],\n            \"y\": {\n                \"set\": \"Country\",\n                \"range\": {\n                    \"min\": \"-30%\"\n                }\n            },\n            \"size\": null\n        },\n        \"coordSystem\": \"polar\"\n    },\n    style: {\n        \"plot\": {\n            \"paddingLeft\": \"25em\"\n        }\n    }\n});</code></pre>"},{"location":"examples/analytical_operations/split/","title":"Split","text":"<p> src='./Area_Polar_Stacked_Area.mp4' type='video/mp4'&gt;  src='./Area_Stacked_Area.mp4' type='video/mp4'&gt;  src='./Column_100percent_Stacked_Column.mp4' type='video/mp4'&gt;  src='./Column_Stacked_Column.mp4' type='video/mp4'&gt;  src='./Coxcomb_Coxcomb.mp4' type='video/mp4'&gt;  src='./Radial_Stacked_Radial.mp4' type='video/mp4'&gt;  src='./ScatterPlot_Scatter_plot_1.mp4' type='video/mp4'&gt;  src='./ScatterPlot_Scatter_plot_2.mp4' type='video/mp4'&gt;</p>"},{"location":"examples/analytical_operations/split/Area_Polar_Stacked_Area/","title":"Polar Stacked Area","text":"Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport {\n    data_8\n} from 'https://lib.vizzuhq.com/0.7/assets/data/chart_types_eu.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data_8\n})</code></pre> <ul> <li>set the Split parameter to true</li> </ul> <pre><code>chart.animate({\n    config: {\n        \"channels\": {\n            \"x\": \"Year\",\n            \"y\": {\n                \"set\": [\n                    \"Country\",\n                    \"Value 2 (+)\"\n                ],\n                \"range\": {\n                    \"min\": \"-20%\"\n                }\n            },\n            \"color\": \"Country\"\n        },\n        \"geometry\": \"area\",\n        \"coordSystem\": \"polar\"\n    }\n});\n\nchart.animate({\n    config: {\n        \"split\": true\n    }\n});\n\nchart.feature('tooltip', true);</code></pre>"},{"location":"examples/analytical_operations/split/Area_Stacked_Area/","title":"Stacked Area","text":"Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport {\n    data_8\n} from 'https://lib.vizzuhq.com/0.7/assets/data/chart_types_eu.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data_8\n})</code></pre> <ul> <li>set the Split parameter to true</li> </ul> <pre><code>chart.animate({\n    config: {\n        \"channels\": {\n            \"x\": \"Year\",\n            \"y\": [\n                \"Value 2 (+)\",\n                \"Country\"\n            ],\n            \"color\": \"Country\"\n        },\n        \"geometry\": \"area\"\n    }\n});\n\nchart.animate({\n    config: {\n        \"split\": true\n    }\n});\n\nchart.feature('tooltip', true);</code></pre>"},{"location":"examples/analytical_operations/split/Column_100percent_Stacked_Column/","title":"100% Stacked Column","text":"Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport {\n    data_8\n} from 'https://lib.vizzuhq.com/0.7/assets/data/chart_types_eu.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data_8\n})</code></pre> <ul> <li>add the Measure to the Label channel too</li> <li>set the Align parameter from 'stretch' to 'min'</li> <li>set the Split parameter to true</li> </ul> <pre><code>chart.animate({\n    config: {\n        \"channels\": {\n            \"x\": \"Year\",\n            \"y\": [\n                \"Country\",\n                \"Value 2 (+)\"\n            ],\n            \"color\": \"Country\"\n        },\n        \"align\": \"stretch\"\n    }\n});\n\nchart.animate({\n    config: {\n        \"channels\": {\n            \"label\": \"Value 2 (+)\"\n        },\n        \"align\": \"min\",\n        \"split\": true\n    },\n    style: {\n        \"plot\": {\n            \"marker\": {\n                \"label\": {\n                    \"position\": \"top\",\n                    \"fontSize\": \"0.6em\"\n                }\n            }\n        }\n    }\n});\n\nchart.feature('tooltip', true);</code></pre>"},{"location":"examples/analytical_operations/split/Column_Stacked_Column/","title":"Stacked Column","text":"Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport {\n    data_6\n} from 'https://lib.vizzuhq.com/0.7/assets/data/chart_types_eu.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data_6\n})</code></pre> <ul> <li>add the Measure to the Label channel too</li> <li>set the Split parameter to true</li> </ul> <pre><code>chart.animate({\n    config: {\n        \"channels\": {\n            \"x\": \"Year\",\n            \"y\": [\n                \"Country\",\n                \"Value 2 (+)\"\n            ],\n            \"color\": \"Country\"\n        }\n    }\n});\n\nchart.animate({\n    config: {\n        \"channels\": {\n            \"label\": \"Value 2 (+)\"\n        },\n        \"split\": true\n    },\n    style: {\n        \"plot\": {\n            \"marker\": {\n                \"label\": {\n                    \"position\": \"top\",\n                    \"fontSize\": \"0.6em\"\n                }\n            }\n        }\n    }\n});\n\nchart.feature('tooltip', true);</code></pre>"},{"location":"examples/analytical_operations/split/Coxcomb_Coxcomb/","title":"Coxcomb","text":"Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport {\n    data_6\n} from 'https://lib.vizzuhq.com/0.7/assets/data/chart_types_eu.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data_6\n})</code></pre> <ul> <li>set the Split parameter to true</li> </ul> <pre><code>chart.animate({\n    config: {\n        \"channels\": {\n            \"x\": \"Year\",\n            \"y\": {\n                \"set\": [\n                    \"Country\",\n                    \"Value 2 (+)\"\n                ],\n                \"range\": {\n                    \"min\": \"-20%\"\n                }\n            },\n            \"color\": \"Country\"\n        },\n        \"coordSystem\": \"polar\"\n    },\n    style: {\n        \"plot\": {\n            \"marker\": {\n                \"rectangleSpacing\": \"0.1em\"\n            }\n        }\n    }\n});\n\nchart.animate({\n    config: {\n        \"split\": true\n    }\n});\n\nchart.feature('tooltip', true);</code></pre>"},{"location":"examples/analytical_operations/split/Radial_Stacked_Radial/","title":"Stacked Radial","text":"Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport {\n    data_8\n} from 'https://lib.vizzuhq.com/0.7/assets/data/chart_types_eu.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data_8\n})</code></pre> <ul> <li>set the Split parameter to true</li> </ul> <pre><code>chart.animate({\n    config: {\n        \"channels\": {\n            \"x\": [\n                \"Country\",\n                \"Value 2 (+)\"\n            ],\n            \"y\": {\n                \"set\": \"Year\",\n                \"range\": {\n                    \"min\": \"-3\"\n                }\n            },\n            \"color\": \"Country\"\n        },\n        \"coordSystem\": \"polar\"\n    }\n});\n\nchart.animate({\n    config: {\n        \"split\": true\n    }\n});</code></pre>"},{"location":"examples/analytical_operations/split/ScatterPlot_Scatter_plot_1/","title":"Scatter plot 1","text":"Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport {\n    data_4\n} from 'https://lib.vizzuhq.com/0.7/assets/data/chart_types_eu.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data_4\n})</code></pre> <ul> <li>add the Dimension which is on the Color channel to the X-axis too</li> <li>set the Orientation parameter to 'vertical'</li> <li>set the Split parameter to true</li> </ul> <pre><code>chart.animate({\n    config: {\n        \"channels\": {\n            \"x\": \"Value 2 (+)\",\n            \"y\": \"Value 3 (+)\",\n            \"noop\": \"Year\",\n            \"color\": \"Country\"\n        },\n        \"geometry\": \"circle\"\n    }\n});\n\nchart.animate({\n    config: {\n        \"channels\": {\n            \"x\": [\n                \"Value 2 (+)\",\n                \"Country\"\n            ]\n        },\n        \"geometry\": \"circle\",\n        \"orientation\": \"vertical\",\n        \"split\": true\n    }\n});\n\nchart.feature('tooltip', true);</code></pre>"},{"location":"examples/analytical_operations/split/ScatterPlot_Scatter_plot_2/","title":"Scatter plot 2","text":"Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport {\n    data_4\n} from 'https://lib.vizzuhq.com/0.7/assets/data/chart_types_eu.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data_4\n})</code></pre> <ul> <li>add the Dimension which is on the Color channel to the X-axis too</li> <li>set the Orientation parameter to 'horizontal'</li> <li>set the Split parameter to true</li> </ul> <pre><code>chart.animate({\n    config: {\n        \"channels\": {\n            \"x\": \"Value 2 (+)\",\n            \"y\": \"Value 3 (+)\",\n            \"noop\": \"Year\",\n            \"color\": \"Country\"\n        },\n        \"geometry\": \"circle\"\n    }\n});\n\nchart.animate({\n    config: {\n        \"channels\": {\n            \"y\": [\n                \"Value 3 (+)\",\n                \"Country\"\n            ]\n        },\n        \"geometry\": \"circle\",\n        \"orientation\": \"horizontal\",\n        \"split\": true\n    }\n});\n\nchart.feature('tooltip', true);</code></pre>"},{"location":"examples/analytical_operations/stretch_to_proportion/","title":"Stretch to proportion","text":"<p> src='./Area_Stacked_Area.mp4' type='video/mp4'&gt;  src='./Column_Groupped_Column.mp4' type='video/mp4'&gt;  src='./Column_Split_Stacked_Column.mp4' type='video/mp4'&gt;  src='./Column_Stacked_Column.mp4' type='video/mp4'&gt;  src='./Line_Line.mp4' type='video/mp4'&gt;</p>"},{"location":"examples/analytical_operations/stretch_to_proportion/Area_Stacked_Area/","title":"Stacked Area","text":"Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport {\n    data_8\n} from 'https://lib.vizzuhq.com/0.7/assets/data/chart_types_eu.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data_8\n})</code></pre> <ul> <li>set the Align parameter to 'stretch'</li> </ul> <pre><code>chart.animate({\n    config: {\n        \"channels\": {\n            \"x\": \"Year\",\n            \"y\": [\n                \"Value 2 (+)\",\n                \"Country\"\n            ],\n            \"color\": \"Country\"\n        },\n        \"geometry\": \"area\"\n    }\n});\n\nchart.animate({\n    config: {\n        \"align\": \"stretch\"\n    }\n});\n\nchart.feature('tooltip', true);</code></pre>"},{"location":"examples/analytical_operations/stretch_to_proportion/Column_Groupped_Column/","title":"Groupped Column","text":"Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport {\n    data_4\n} from 'https://lib.vizzuhq.com/0.7/assets/data/chart_types_eu.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data_4\n})</code></pre> <ul> <li>move the 2nd dimension from the X-axis to the Y-axis</li> <li>set the Align parameter to 'stretch'</li> </ul> <pre><code>chart.animate({\n    config: {\n        \"channels\": {\n            \"x\": [\n                \"Year\",\n                \"Country\"\n            ],\n            \"y\": \"Value 2 (+)\",\n            \"color\": \"Country\"\n        }\n    }\n});\n\nchart.animate({\n    config: {\n        \"channels\": {\n            \"x\": \"Year\",\n            \"y\": [\n                \"Country\",\n                \"Value 2 (+)\"\n            ]\n        },\n        \"align\": \"stretch\"\n    }\n});\n\nchart.feature('tooltip', true);</code></pre>"},{"location":"examples/analytical_operations/stretch_to_proportion/Column_Split_Stacked_Column/","title":"Split Stacked Column","text":"Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport {\n    data_8\n} from 'https://lib.vizzuhq.com/0.7/assets/data/chart_types_eu.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data_8\n})</code></pre> <ul> <li>set the Align parameter to 'stretch'</li> <li>set the the Split parameter to false</li> </ul> <pre><code>chart.animate({\n    config: {\n        \"channels\": {\n            \"x\": \"Year\",\n            \"y\": [\n                \"Country\",\n                \"Value 2 (+)\"\n            ],\n            \"color\": \"Country\",\n            \"label\": \"Value 2 (+)\"\n        },\n        \"split\": true\n    },\n    style: {\n        \"plot\": {\n            \"marker\": {\n                \"label\": {\n                    \"position\": \"top\",\n                    \"fontSize\": \"0.6em\"\n                }\n            }\n        }\n    }\n});\n\nchart.animate({\n    config: {\n        \"channels\": {\n            \"label\": null\n        },\n        \"align\": \"stretch\",\n        \"split\": false\n    }\n});\n\nchart.feature('tooltip', true);</code></pre>"},{"location":"examples/analytical_operations/stretch_to_proportion/Column_Stacked_Column/","title":"Stacked Column","text":"Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport {\n    data_8\n} from 'https://lib.vizzuhq.com/0.7/assets/data/chart_types_eu.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data_8\n})</code></pre> <ul> <li>set the Align parameter to 'stretch'</li> </ul> <pre><code>chart.animate({\n    config: {\n        \"channels\": {\n            \"x\": \"Year\",\n            \"y\": [\n                \"Country\",\n                \"Value 2 (+)\"\n            ],\n            \"color\": \"Country\"\n        }\n    }\n});\n\nchart.animate({\n    config: {\n        \"align\": \"stretch\"\n    }\n});\n\nchart.feature('tooltip', true);</code></pre>"},{"location":"examples/analytical_operations/stretch_to_proportion/Line_Line/","title":"Line","text":"Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport {\n    data_8\n} from 'https://lib.vizzuhq.com/0.7/assets/data/chart_types_eu.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data_8\n})</code></pre> <ul> <li>add the Dimension which is on the Color channel to the Y-axis too</li> <li>switch the Geometry from Line to Area</li> <li>set the Align parameter to 'stretch'</li> </ul> <pre><code>chart.animate({\n    config: {\n        \"channels\": {\n            \"x\": \"Year\",\n            \"y\": \"Value 2 (+)\",\n            \"color\": \"Country\"\n        },\n        \"geometry\": \"line\"\n    }\n});\n\nchart.animate({\n    config: {\n        \"channels\": {\n            \"y\": [\n                \"Value 2 (+)\",\n                \"Country\"\n            ]\n        },\n        \"geometry\": \"area\",\n        \"align\": \"stretch\"\n    }\n});\n\nchart.feature('tooltip', true);</code></pre>"},{"location":"examples/analytical_operations/sum/","title":"Sum","text":"<p> src='./Area_100percent_Stacked_Area.mp4' type='video/mp4'&gt;  src='./Area_Polar_Split_Area.mp4' type='video/mp4'&gt;  src='./Area_Polar_Stacked_Area.mp4' type='video/mp4'&gt;  src='./Area_Split_Area.mp4' type='video/mp4'&gt;  src='./Area_Stacked_Area.mp4' type='video/mp4'&gt;  src='./Bubble_Bubble.mp4' type='video/mp4'&gt;  src='./Bubble_Bubble_plot_1.mp4' type='video/mp4'&gt;  src='./Bubble_Bubble_plot_2.mp4' type='video/mp4'&gt;  src='./Bubble_Bubble_plot_to_Radial.mp4' type='video/mp4'&gt;  src='./Bubble_Bubble_to_Column.mp4' type='video/mp4'&gt;  src='./Bubble_Bubble_to_Coxcomb.mp4' type='video/mp4'&gt;  src='./Bubble_Bubble_to_Radial.mp4' type='video/mp4'&gt;  src='./Column_100percent_Stacked_Column.mp4' type='video/mp4'&gt;  src='./Column_Column_1.mp4' type='video/mp4'&gt;  src='./Column_Column_2.mp4' type='video/mp4'&gt;  src='./Column_Column_to_Bar.mp4' type='video/mp4'&gt;  src='./Column_Column_to_Waterfall.mp4' type='video/mp4'&gt;  src='./Column_Groupped_Column.mp4' type='video/mp4'&gt;  src='./Column_Split_Stacked_Column.mp4' type='video/mp4'&gt;  src='./Column_Stacked_Column_1.mp4' type='video/mp4'&gt;  src='./Column_Stacked_Column_2.mp4' type='video/mp4'&gt;  src='./Coxcomb_Coxcomb_1.mp4' type='video/mp4'&gt;  src='./Coxcomb_Coxcomb_2.mp4' type='video/mp4'&gt;  src='./Coxcomb_Split_Coxcomb.mp4' type='video/mp4'&gt;  src='./DotPlot_Dot_plot.mp4' type='video/mp4'&gt;  src='./Line_Line_1.mp4' type='video/mp4'&gt;  src='./Line_Line_2.mp4' type='video/mp4'&gt;  src='./Line_Polar_Line_1.mp4' type='video/mp4'&gt;  src='./Line_Polar_Line_2.mp4' type='video/mp4'&gt;  src='./ScatterPlot_Polar_Scatter_plot.mp4' type='video/mp4'&gt;  src='./ScatterPlot_Scatter_plot.mp4' type='video/mp4'&gt;  src='./Stream_Stacked_Stream.mp4' type='video/mp4'&gt;  src='./Treemap_Treemap.mp4' type='video/mp4'&gt;</p>"},{"location":"examples/analytical_operations/sum/Area_100percent_Stacked_Area/","title":"100% Stacked Area","text":"Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport {\n    data_6\n} from 'https://lib.vizzuhq.com/0.7/assets/data/chart_types_eu.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data_6\n})</code></pre> <ul> <li>set Align parameter from 'stretch' to 'min'</li> </ul> <pre><code>chart.animate({\n    config: {\n        \"channels\": {\n            \"x\": \"Year\",\n            \"y\": [\n                \"Value 2 (+)\",\n                \"Country\"\n            ],\n            \"color\": \"Country\"\n        },\n        \"geometry\": \"area\",\n        \"align\": \"stretch\"\n    }\n});\n\nchart.animate({\n    config: {\n        \"align\": \"min\"\n    }\n});\n\nchart.feature('tooltip', true);</code></pre>"},{"location":"examples/analytical_operations/sum/Area_Polar_Split_Area/","title":"Polar Split Area","text":"Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport {\n    data_6\n} from 'https://lib.vizzuhq.com/0.7/assets/data/chart_types_eu.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data_6\n})</code></pre> <ul> <li>set Split parameter from true to false</li> </ul> <pre><code>chart.animate({\n    config: {\n        \"channels\": {\n            \"x\": \"Year\",\n            \"y\": {\n                \"set\": [\n                    \"Country\",\n                    \"Value 2 (+)\"\n                ],\n                \"range\": {\n                    \"min\": \"-20%\"\n                }\n            },\n            \"color\": \"Country\"\n        },\n        \"geometry\": \"area\",\n        \"split\": true,\n        \"coordSystem\": \"polar\"\n    }\n});\n\nchart.animate({\n    config: {\n        \"split\": false\n    }\n});\n\nchart.feature('tooltip', true);</code></pre>"},{"location":"examples/analytical_operations/sum/Area_Polar_Stacked_Area/","title":"Polar Stacked Area","text":"Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport {\n    data_6\n} from 'https://lib.vizzuhq.com/0.7/assets/data/chart_types_eu.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data_6\n})</code></pre> <ul> <li>remove the Dimension from Y-axis and the Color channel</li> </ul> <pre><code>chart.animate({\n    config: {\n        \"channels\": {\n            \"x\": \"Year\",\n            \"y\": [\n                \"Value 2 (+)\",\n                \"Country\"\n            ],\n            \"color\": \"Country\"\n        },\n        \"geometry\": \"area\",\n        \"coordSystem\": \"polar\"\n    }\n});\n\nchart.animate({\n    config: {\n        \"channels\": {\n            \"y\": \"Value 2 (+)\",\n            \"color\": null\n        }\n    }\n});\n\nchart.feature('tooltip', true);</code></pre>"},{"location":"examples/analytical_operations/sum/Area_Split_Area/","title":"Split Area","text":"Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport {\n    data_6\n} from 'https://lib.vizzuhq.com/0.7/assets/data/chart_types_eu.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data_6\n})</code></pre> <ul> <li>set Split parameter from true to false</li> </ul> <pre><code>chart.animate({\n    config: {\n        \"channels\": {\n            \"x\": \"Year\",\n            \"y\": [\n                \"Value 2 (+)\",\n                \"Country\"\n            ],\n            \"color\": \"Country\"\n        },\n        \"geometry\": \"area\",\n        \"split\": true\n    }\n});\n\nchart.animate({\n    config: {\n        \"split\": false\n    }\n});\n\nchart.feature('tooltip', true);</code></pre>"},{"location":"examples/analytical_operations/sum/Area_Stacked_Area/","title":"Stacked Area","text":"Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport {\n    data_6\n} from 'https://lib.vizzuhq.com/0.7/assets/data/chart_types_eu.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data_6\n})</code></pre> <ul> <li>remove the Dimension from Y-axis and the Color channel</li> </ul> <pre><code>chart.animate({\n    config: {\n        \"channels\": {\n            \"x\": \"Year\",\n            \"y\": [\n                \"Value 2 (+)\",\n                \"Country\"\n            ],\n            \"color\": \"Country\"\n        },\n        \"geometry\": \"area\"\n    }\n});\n\nchart.animate({\n    config: {\n        \"channels\": {\n            \"y\": \"Value 2 (+)\",\n            \"color\": null\n        }\n    }\n});\n\nchart.feature('tooltip', true);</code></pre>"},{"location":"examples/analytical_operations/sum/Bubble_Bubble/","title":"Bubble","text":"Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport {\n    data\n} from 'https://lib.vizzuhq.com/0.7/assets/data/chart_types_eu.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data\n})</code></pre> <ul> <li>add the Dimension whitch is on Label channel to the Size channel too (stack)</li> </ul> <pre><code>chart.animate({\n    config: {\n        \"channels\": {\n            \"color\": \"Joy factors\",\n            \"size\": \"Value 2 (+)\",\n            \"label\": \"Country_code\"\n        },\n        \"geometry\": \"circle\"\n    }\n});\n\nchart.animate({\n    config: {\n        \"channels\": {\n            \"size\": [\n                \"Country_code\",\n                \"Value 2 (+)\"\n            ]\n        }\n    }\n});</code></pre>"},{"location":"examples/analytical_operations/sum/Bubble_Bubble_plot_1/","title":"Bubble plot 1","text":"Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport {\n    data_6\n} from 'https://lib.vizzuhq.com/0.7/assets/data/chart_types_eu.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data_6\n})</code></pre> <ul> <li>remove the Dimension from the Label channel and add the othere Dimension to it</li> </ul> <pre><code>chart.animate({\n    config: {\n        \"channels\": {\n            \"x\": \"Value 1 (+)\",\n            \"y\": \"Value 3 (+)\",\n            \"size\": \"Value 2 (+)\",\n            \"color\": \"Year\",\n            \"label\": \"Country_code\"\n        },\n        \"geometry\": \"circle\"\n    }\n});\n\nchart.animate({\n    config: {\n        \"channels\": {\n            \"label\": \"Year\"\n        }\n    }\n});\n\nchart.feature('tooltip', true);</code></pre>"},{"location":"examples/analytical_operations/sum/Bubble_Bubble_plot_2/","title":"Bubble plot 2","text":"Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport {\n    data\n} from 'https://lib.vizzuhq.com/0.7/assets/data/chart_types_eu.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data\n})</code></pre> <p>This Vizzu animation consist of 2 steps (animates):</p> <p>1st:</p> <ul> <li>remove two Measures from the axes</li> <li>move the Dimension from the Label channel and the third Measure from the Size   channel to the X-axis</li> <li>switch the Geometry from Circle to Rectangle</li> </ul> <p>2nd:</p> <ul> <li>remove the Dimension from the X-axis</li> <li>add the remaining Measure to the Label channel</li> </ul> <pre><code>chart.animate({\n    config: {\n        \"channels\": {\n            \"x\": [\n                \"Joy factors\",\n                \"Value 6 (+/-)\"\n            ],\n            \"y\": \"Value 5 (+/-)\",\n            \"color\": \"Joy factors\",\n            \"size\": \"Value 2 (+)\",\n            \"label\": \"Country_code\"\n        },\n        \"geometry\": \"circle\"\n    }\n});\n\nchart.animate({\n    config: {\n        \"channels\": {\n            \"x\": [\n                \"Country_code\",\n                \"Value 2 (+)\"\n            ],\n            \"y\": \"Joy factors\",\n            \"label\": null\n        },\n        \"geometry\": \"rectangle\",\n        \"orientation\": \"vertical\"\n    }\n});\n\nchart.animate({\n    config: {\n        \"channels\": {\n            \"x\": \"Value 2 (+)\",\n            \"label\": \"Value 2 (+)\"\n        }\n    }\n});</code></pre>"},{"location":"examples/analytical_operations/sum/Bubble_Bubble_plot_to_Radial/","title":"Bubble plot to Radial","text":"Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport {\n    data\n} from 'https://lib.vizzuhq.com/0.7/assets/data/chart_types_eu.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data\n})</code></pre> <p>This Vizzu animation consist of 2 steps (animates):</p> <p>1st:</p> <ul> <li>remove two Measures from the axes</li> <li>move the Dimension from the no-operation (Noop) channel and the third Measure   from the Size channel to the X-axis</li> <li>switch the Geometry from Circle to Rectangle</li> </ul> <p>2nd:</p> <ul> <li>remove the Dimension from the X-axis</li> <li>add the remaining Measure to the Label channel</li> </ul> <pre><code>chart.animate({\n    config: {\n        \"channels\": {\n            \"x\": [\n                \"Joy factors\",\n                \"Value 6 (+/-)\"\n            ],\n            \"y\": \"Value 5 (+/-)\",\n            \"color\": \"Joy factors\",\n            \"size\": \"Value 2 (+)\",\n            \"noop\": \"Country_code\"\n        },\n        \"geometry\": \"circle\"\n    },\n    style: {\n        \"plot\": {\n            \"marker\": {\n                \"guides\": {\n                    \"color\": \"#ffffff00\"\n                }\n            }\n        }\n    }\n});\n\nchart.animate({\n    config: {\n        \"channels\": {\n            \"x\": [\n                \"Country_code\",\n                \"Value 2 (+)\"\n            ],\n            \"y\": {\n                \"set\": \"Joy factors\",\n                \"range\": {\n                    \"min\": \"-30%\"\n                }\n            },\n            \"noop\": null\n        },\n        \"geometry\": \"rectangle\",\n        \"orientation\": \"vertical\",\n        \"coordSystem\": \"polar\"\n    }\n});\n\nchart.animate({\n    config: {\n        \"channels\": {\n            \"x\": \"Value 2 (+)\",\n            \"label\": \"Value 2 (+)\"\n        }\n    }\n});</code></pre>"},{"location":"examples/analytical_operations/sum/Bubble_Bubble_to_Column/","title":"Bubble to Column","text":"Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport {\n    data\n} from 'https://lib.vizzuhq.com/0.7/assets/data/chart_types_eu.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data\n})</code></pre> <p>This Vizzu animation consist of 2 steps (animates):</p> <p>1st:</p> <ul> <li>move the Dimension from the Label channel to the Y-axis</li> <li>move the Measure from the Size channel to the Y-axis</li> <li>add the other Dimension to the X-axis</li> <li>switch the Geometry from Circle to Rectangle</li> </ul> <p>2nd:</p> <ul> <li>remove the other Dimension from the X-axis</li> <li>add the Measure to the Label channel too</li> </ul> <pre><code>chart.animate({\n    config: {\n        \"channels\": {\n            \"color\": \"Joy factors\",\n            \"label\": \"Country_code\",\n            \"size\": [\n                \"Country_code\",\n                \"Value 2 (+)\"\n            ]\n        },\n        \"geometry\": \"circle\"\n    }\n});\n\nchart.animate({\n    config: {\n        \"channels\": {\n            \"x\": \"Joy factors\",\n            \"y\": [\n                \"Country_code\",\n                \"Value 2 (+)\"\n            ],\n            \"label\": null,\n            \"size\": null\n        },\n        \"geometry\": \"rectangle\"\n    }\n});\n\nchart.animate({\n    config: {\n        \"channels\": {\n            \"y\": \"Value 2 (+)\",\n            \"label\": \"Value 2 (+)\"\n        }\n    }\n});</code></pre>"},{"location":"examples/analytical_operations/sum/Bubble_Bubble_to_Coxcomb/","title":"Bubble to Coxcomb","text":"Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport {\n    data\n} from 'https://lib.vizzuhq.com/0.7/assets/data/chart_types_eu.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data\n})</code></pre> <p>This Vizzu animation consist of 2 steps (animates):</p> <p>1st:</p> <ul> <li>move the Dimension from the Label channel to the Y-axis</li> <li>move the Measure from the Size channel to the Y-axis</li> <li>add the other Dimension to the X-axis</li> <li>switch the Geometry from Circle to Rectangle</li> </ul> <p>2nd:</p> <ul> <li>remove the other Dimension from the X-axis</li> <li>add the Measure to the Label channel too</li> </ul> <pre><code>chart.animate({\n    config: {\n        \"channels\": {\n            \"color\": \"Joy factors\",\n            \"label\": \"Country_code\",\n            \"size\": [\n                \"Country_code\",\n                \"Value 2 (+)\"\n            ]\n        },\n        \"geometry\": \"circle\"\n    }\n});\n\nchart.animate({\n    config: {\n        \"channels\": {\n            \"x\": \"Joy factors\",\n            \"y\": [\n                \"Country_code\",\n                \"Value 2 (+)\"\n            ],\n            \"label\": null,\n            \"size\": null\n        },\n        \"geometry\": \"rectangle\",\n        \"coordSystem\": \"polar\"\n    },\n    style: {\n        \"plot\": {\n            \"marker\": {\n                \"rectangleSpacing\": \"0em\"\n            }\n        }\n    }\n});\n\nchart.animate({\n    config: {\n        \"channels\": {\n            \"y\": \"Value 2 (+)\",\n            \"label\": \"Value 2 (+)\"\n        }\n    }\n});</code></pre>"},{"location":"examples/analytical_operations/sum/Bubble_Bubble_to_Radial/","title":"Bubble to Radial","text":"Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport {\n    data\n} from 'https://lib.vizzuhq.com/0.7/assets/data/chart_types_eu.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data\n})</code></pre> <p>This Vizzu animation consist of 2 steps (animates):</p> <p>1st:</p> <ul> <li>move the Dimension from the Label channel to the X-axis</li> <li>move the Measure from the Size channel to the X-axis</li> <li>add the other Dimension to the Y-axis</li> <li>set the Y-axis range min to make empty circle in the center</li> <li>switch the Geometry from Circle to Rectangle</li> </ul> <p>2nd:</p> <ul> <li>remove the other Dimension from the X-axis</li> <li>add the Measure to the Label channel too</li> </ul> <pre><code>chart.animate({\n    config: {\n        \"channels\": {\n            \"color\": \"Joy factors\",\n            \"label\": \"Country_code\",\n            \"size\": [\n                \"Country_code\",\n                \"Value 2 (+)\"\n            ]\n        },\n        \"geometry\": \"circle\"\n    }\n});\n\nchart.animate({\n    config: {\n        \"channels\": {\n            \"y\": {\n                \"set\": \"Joy factors\",\n                \"range\": {\n                    \"min\": \"-30%\"\n                }\n            },\n            \"x\": [\n                \"Country_code\",\n                \"Value 2 (+)\"\n            ],\n            \"label\": null,\n            \"size\": null\n        },\n        \"geometry\": \"rectangle\",\n        \"coordSystem\": \"polar\",\n        \"sort\": \"byValue\"\n    }\n});\n\nchart.animate({\n    config: {\n        \"channels\": {\n            \"x\": \"Value 2 (+)\",\n            \"label\": \"Value 2 (+)\"\n        }\n    }\n});</code></pre>"},{"location":"examples/analytical_operations/sum/Column_100percent_Stacked_Column/","title":"100% Stacked Column","text":"Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport {\n    data_8\n} from 'https://lib.vizzuhq.com/0.7/assets/data/chart_types_eu.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data_8\n})</code></pre> <ul> <li>set Align parameter from 'stretch' to 'min'</li> </ul> <pre><code>chart.animate({\n    config: {\n        \"channels\": {\n            \"x\": \"Year\",\n            \"y\": [\n                \"Country\",\n                \"Value 2 (+)\"\n            ],\n            \"color\": \"Country\"\n        },\n        \"align\": \"stretch\"\n    }\n});\n\nchart.animate({\n    config: {\n        \"align\": \"min\"\n    }\n});\n\nchart.feature('tooltip', true);</code></pre>"},{"location":"examples/analytical_operations/sum/Column_Column_1/","title":"Column 1","text":"Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport {\n    data_8\n} from 'https://lib.vizzuhq.com/0.7/assets/data/chart_types_eu.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data_8\n})</code></pre> <ul> <li>move the Dimension from X-axis to the Y-axis and the Color channel</li> </ul> <pre><code>chart.animate({\n    config: {\n        \"channels\": {\n            \"x\": \"Country\",\n            \"y\": \"Value 2 (+)\",\n            \"label\": \"Value 2 (+)\"\n        }\n    }\n});\n\nchart.animate({\n    config: {\n        \"channels\": {\n            \"x\": null,\n            \"y\": [\n                \"Country\",\n                \"Value 2 (+)\"\n            ],\n            \"color\": \"Country\"\n        }\n    }\n});\n\nchart.feature('tooltip', true);</code></pre>"},{"location":"examples/analytical_operations/sum/Column_Column_2/","title":"Column 2","text":"Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport {\n    data_8\n} from 'https://lib.vizzuhq.com/0.7/assets/data/chart_types_eu.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data_8\n})</code></pre> <ul> <li>remove the Dimension from the X-axis</li> </ul> <pre><code>chart.animate({\n    config: {\n        \"channels\": {\n            \"x\": \"Country\",\n            \"y\": \"Value 2 (+)\",\n            \"label\": \"Value 2 (+)\"\n        }\n    }\n});\n\nchart.animate({\n    config: {\n        \"channels\": {\n            \"x\": null\n        }\n    }\n});\n\nchart.feature('tooltip', true);</code></pre>"},{"location":"examples/analytical_operations/sum/Column_Column_to_Bar/","title":"Column to Bar","text":"Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport {\n    data_8\n} from 'https://lib.vizzuhq.com/0.7/assets/data/chart_types_eu.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data_8\n})</code></pre> <ul> <li>remove the Dimension from the X-axis</li> <li>shift the Meassure from the Y-axis to the X-axis</li> <li>set the Orientation to vertical</li> </ul> <pre><code>chart.animate({\n    config: {\n        \"channels\": {\n            \"x\": \"Country\",\n            \"y\": \"Value 2 (+)\",\n            \"label\": \"Value 2 (+)\"\n        }\n    }\n});\n\nchart.animate({\n    config: {\n        \"channels\": {\n            \"x\": \"Value 2 (+)\",\n            \"y\": null\n        },\n        \"orientation\": \"vertical\"\n    }\n});\n\nchart.feature('tooltip', true);</code></pre>"},{"location":"examples/analytical_operations/sum/Column_Column_to_Waterfall/","title":"Column to Waterfall","text":"Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport {\n    data\n} from 'https://lib.vizzuhq.com/0.7/assets/data/chart_types_eu.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data\n})</code></pre> <ul> <li>add the existing Dimension to the Y-axis as well</li> <li>+ here is an example of how you can set a colorGradient palette in the Style</li> </ul> <pre><code>chart.animate({\n    config: {\n        \"channels\": {\n            \"x\": \"Year\",\n            \"y\": \"Value 5 (+/-)\",\n            \"color\": {\n                \"set\": \"Value 5 (+/-)\",\n                \"range\": {\n                    \"min\": \"-45\",\n                    \"max\": \"45\"\n                }\n            },\n            \"noop\": \"Country\",\n            \"label\": \"Value 5 (+/-)\"\n        },\n        \"legend\": \"color\"\n    },\n    style: {\n        \"plot\": {\n            \"marker\": {\n                \"colorGradient\": \"#ac1727 0,#e36c56 0.15,#f4b096 0.35,#d5d7d9 0.5,#9fbffa 0.65,#6389ec 0.85,#3d51b8 1\",\n                \"label\": {\n                    \"position\": \"top\"\n                }\n            }\n        }\n    }\n});\n\nchart.animate({\n    config: {\n        \"channels\": {\n            \"y\": [\n                \"Year\",\n                \"Value 5 (+/-)\"\n            ]\n        }\n    }\n});</code></pre>"},{"location":"examples/analytical_operations/sum/Column_Groupped_Column/","title":"Groupped Column","text":"Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport {\n    data_6\n} from 'https://lib.vizzuhq.com/0.7/assets/data/chart_types_eu.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data_6\n})</code></pre> <ul> <li>move one Dimension from X-axis to the Y-axis (stack)</li> </ul> <pre><code>chart.animate({\n    config: {\n        \"channels\": {\n            \"x\": [\n                \"Year\",\n                \"Country\"\n            ],\n            \"y\": \"Value 2 (+)\",\n            \"color\": \"Country\"\n        }\n    }\n});\n\nchart.animate({\n    config: {\n        \"channels\": {\n            \"x\": \"Year\",\n            \"y\": [\n                \"Country\",\n                \"Value 2 (+)\"\n            ],\n            \"color\": \"Country\"\n        }\n    }\n});\n\nchart.feature('tooltip', true);</code></pre>"},{"location":"examples/analytical_operations/sum/Column_Split_Stacked_Column/","title":"Split Stacked Column","text":"Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport {\n    data_8\n} from 'https://lib.vizzuhq.com/0.7/assets/data/chart_types_eu.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data_8\n})</code></pre> <ul> <li>set Split parameter from true to false</li> <li>null Label channel</li> <li>+ if you like set the marker-label fontSize in the Style</li> </ul> <pre><code>chart.animate({\n    config: {\n        \"channels\": {\n            \"x\": \"Year\",\n            \"y\": [\n                \"Country\",\n                \"Value 2 (+)\"\n            ],\n            \"color\": \"Country\",\n            \"label\": \"Value 2 (+)\"\n        },\n        \"split\": true\n    },\n    style: {\n        \"plot\": {\n            \"marker\": {\n                \"label\": {\n                    \"position\": \"top\",\n                    \"fontSize\": \"0.6em\"\n                }\n            }\n        }\n    }\n});\n\nchart.animate({\n    config: {\n        \"channels\": {\n            \"label\": null\n        },\n        \"split\": false\n    }\n});\n\nchart.feature('tooltip', true);</code></pre>"},{"location":"examples/analytical_operations/sum/Column_Stacked_Column_1/","title":"Stacked Column 1","text":"Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport {\n    data_8\n} from 'https://lib.vizzuhq.com/0.7/assets/data/chart_types_eu.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data_8\n})</code></pre> <ul> <li>remove the Dimension from Y-axis and the Color channel</li> </ul> <pre><code>chart.animate({\n    config: {\n        \"channels\": {\n            \"x\": \"Country\",\n            \"y\": [\n                \"Value 2 (+)\",\n                \"Joy factors\"\n            ],\n            \"color\": \"Joy factors\",\n            \"label\": \"Value 2 (+)\"\n        }\n    }\n});\n\nchart.animate({\n    config: {\n        \"channels\": {\n            \"y\": \"Value 2 (+)\",\n            \"color\": null\n        }\n    }\n});\n\nchart.feature('tooltip', true);</code></pre>"},{"location":"examples/analytical_operations/sum/Column_Stacked_Column_2/","title":"Stacked Column 2","text":"Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport {\n    data\n} from 'https://lib.vizzuhq.com/0.7/assets/data/chart_types_eu.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data\n})</code></pre> <ul> <li>remove the Dimension from the X-axis and Color channel</li> <li>shift the Measure from X to the Y-axis (change orientation), and add it to the   Label channel</li> </ul> <pre><code>chart.animate({\n    config: {\n        \"channels\": {\n            \"x\": \"Year\",\n            \"y\": [\n                \"Joy factors\",\n                \"Value 2 (+)\"\n            ],\n            \"color\": \"Joy factors\"\n        }\n    },\n    style: {\n        \"plot\": {\n            \"marker\": {\n                \"colorPalette\": \"#ef675aFF #6d8cccFF #e6cf99FF #9c50abFF\"\n            }\n        }\n    }\n});\n\nchart.animate({\n    config: {\n        \"channels\": {\n            \"x\": \"Value 2 (+)\",\n            \"y\": [\n                \"Joy factors\"\n            ],\n            \"label\": \"Value 2 (+)\"\n        }\n    }\n});</code></pre>"},{"location":"examples/analytical_operations/sum/Coxcomb_Coxcomb_1/","title":"Coxcomb 1","text":"Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport {\n    data_8\n} from 'https://lib.vizzuhq.com/0.7/assets/data/chart_types_eu.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data_8\n})</code></pre> <ul> <li>remove the Dimension from Y-axis and the Color channel</li> <li>add the Measure to the Label channel too</li> </ul> <pre><code>chart.animate({\n    config: {\n        \"channels\": {\n            \"x\": \"Country\",\n            \"y\": [\n                \"Value 2 (+)\",\n                \"Joy factors\"\n            ],\n            \"color\": \"Joy factors\"\n        },\n        \"coordSystem\": \"polar\"\n    },\n    style: {\n        \"plot\": {\n            \"marker\": {\n                \"rectangleSpacing\": \"0.1em\"\n            }\n        }\n    }\n});\n\nchart.animate({\n    config: {\n        \"channels\": {\n            \"y\": \"Value 2 (+)\",\n            \"color\": null,\n            \"label\": \"Value 2 (+)\"\n        }\n    }\n});\n\nchart.feature('tooltip', true);</code></pre>"},{"location":"examples/analytical_operations/sum/Coxcomb_Coxcomb_2/","title":"Coxcomb 2","text":"Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport {\n    data\n} from 'https://lib.vizzuhq.com/0.7/assets/data/chart_types_eu.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data\n})</code></pre> <ul> <li>remove the Dimension from the X-axis and Color channel</li> <li>shift the Measure from X to the Y-axis (change orientation), and add it to the   Label channel</li> </ul> <pre><code>chart.animate({\n    config: {\n        \"channels\": {\n            \"x\": \"Year\",\n            \"y\": [\n                \"Joy factors\",\n                \"Value 2 (+)\"\n            ],\n            \"color\": \"Joy factors\"\n        },\n        \"coordSystem\": \"polar\"\n    },\n    style: {\n        \"plot\": {\n            \"marker\": {\n                \"colorPalette\": \"#ef675aFF #6d8cccFF #e6cf99FF #9c50abFF\",\n                \"rectangleSpacing\": \"0.1em\"\n            }\n        }\n    }\n});\n\nchart.animate({\n    config: {\n        \"channels\": {\n            \"x\": \"Value 2 (+)\",\n            \"y\": {\n                \"set\": \"Joy factors\",\n                \"range\": {\n                    \"min\": \"-30%\"\n                }\n            },\n            \"label\": \"Value 2 (+)\"\n        }\n    },\n    style: {\n        \"plot\": {\n            \"marker\": {\n                \"rectangleSpacing\": null\n            }\n        }\n    }\n});</code></pre>"},{"location":"examples/analytical_operations/sum/Coxcomb_Split_Coxcomb/","title":"Split Coxcomb","text":"Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport {\n    data_8\n} from 'https://lib.vizzuhq.com/0.7/assets/data/chart_types_eu.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data_8\n})</code></pre> <ul> <li>set Split parameter from true to false</li> </ul> <pre><code>chart.animate({\n    config: {\n        \"channels\": {\n            \"x\": \"Year\",\n            \"y\": {\n                \"set\": [\n                    \"Country\",\n                    \"Value 2 (+)\"\n                ],\n                \"range\": {\n                    \"min\": \"-20%\"\n                }\n            },\n            \"color\": \"Country\"\n        },\n        \"split\": true,\n        \"coordSystem\": \"polar\"\n    },\n    style: {\n        \"plot\": {\n            \"marker\": {\n                \"rectangleSpacing\": \"0.1em\"\n            }\n        }\n    }\n});\n\nchart.animate({\n    config: {\n        \"split\": false\n    }\n});\n\nchart.feature('tooltip', true);</code></pre>"},{"location":"examples/analytical_operations/sum/DotPlot_Dot_plot/","title":"Dot plot","text":"Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport {\n    data_8\n} from 'https://lib.vizzuhq.com/0.7/assets/data/chart_types_eu.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data_8\n})</code></pre> <ul> <li>add the Dimension whitch is on the Color channel to the Y-axis too</li> <li>switch the Geometry from Circle to Rectangle</li> </ul> <pre><code>chart.animate({\n    config: {\n        \"channels\": {\n            \"x\": \"Year\",\n            \"y\": \"Value 2 (+)\",\n            \"color\": \"Country\"\n        },\n        \"geometry\": \"circle\"\n    }\n});\n\nchart.animate({\n    config: {\n        \"channels\": {\n            \"y\": [\n                \"Country\",\n                \"Value 2 (+)\"\n            ]\n        },\n        \"geometry\": \"rectangle\"\n    }\n});\n\nchart.feature('tooltip', true);</code></pre>"},{"location":"examples/analytical_operations/sum/Line_Line_1/","title":"Line 1","text":"Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport {\n    data_6\n} from 'https://lib.vizzuhq.com/0.7/assets/data/chart_types_eu.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data_6\n})</code></pre> <ul> <li>add the Dimension whitch is on Color channel to the Y-axis too</li> <li>switch the Geometry from Line to Area</li> </ul> <pre><code>chart.animate({\n    config: {\n        \"channels\": {\n            \"x\": \"Year\",\n            \"y\": \"Value 2 (+)\",\n            \"color\": \"Country\"\n        },\n        \"geometry\": \"line\"\n    }\n});\n\nchart.animate({\n    config: {\n        \"channels\": {\n            \"y\": [\n                \"Country\",\n                \"Value 2 (+)\"\n            ]\n        },\n        \"geometry\": \"area\"\n    }\n});\n\nchart.feature('tooltip', true);</code></pre>"},{"location":"examples/analytical_operations/sum/Line_Line_2/","title":"Line 2","text":"Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport {\n    data_6\n} from 'https://lib.vizzuhq.com/0.7/assets/data/chart_types_eu.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data_6\n})</code></pre> <ul> <li>remove the Dimension from the Color channel</li> </ul> <pre><code>chart.animate({\n    config: {\n        \"channels\": {\n            \"x\": \"Year\",\n            \"y\": \"Value 2 (+)\",\n            \"color\": \"Country\"\n        },\n        \"geometry\": \"line\"\n    }\n});\n\nchart.animate({\n    config: {\n        \"channels\": {\n            \"color\": null\n        }\n    }\n});\n\nchart.feature('tooltip', true);</code></pre>"},{"location":"examples/analytical_operations/sum/Line_Polar_Line_1/","title":"Polar Line 1","text":"Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport {\n    data_6\n} from 'https://lib.vizzuhq.com/0.7/assets/data/chart_types_eu.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data_6\n})</code></pre> <ul> <li>remove the Dimension from the Color channel</li> </ul> <pre><code>chart.animate({\n    config: {\n        \"channels\": {\n            \"x\": \"Year\",\n            \"y\": \"Value 2 (+)\",\n            \"color\": \"Country\"\n        },\n        \"geometry\": \"line\",\n        \"coordSystem\": \"polar\"\n    }\n});\n\nchart.animate({\n    config: {\n        \"channels\": {\n            \"color\": null\n        }\n    }\n});\n\nchart.feature('tooltip', true);</code></pre>"},{"location":"examples/analytical_operations/sum/Line_Polar_Line_2/","title":"Polar Line 2","text":"Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport {\n    data_6\n} from 'https://lib.vizzuhq.com/0.7/assets/data/chart_types_eu.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data_6\n})</code></pre> <ul> <li>add the Dimension whitch is on Color channel to the Y-axis too</li> <li>switch the Geometry from Line to Area</li> </ul> <pre><code>chart.animate({\n    config: {\n        \"channels\": {\n            \"x\": \"Year\",\n            \"y\": {\n                \"set\": \"Value 2 (+)\",\n                \"range\": {\n                    \"min\": \"-20%\"\n                }\n            },\n            \"color\": \"Country\"\n        },\n        \"geometry\": \"line\",\n        \"coordSystem\": \"polar\"\n    }\n});\n\nchart.animate({\n    config: {\n        \"channels\": {\n            \"y\": [\n                \"Country\",\n                \"Value 2 (+)\"\n            ]\n        },\n        \"geometry\": \"area\"\n    }\n});\n\nchart.feature('tooltip', true);</code></pre>"},{"location":"examples/analytical_operations/sum/ScatterPlot_Polar_Scatter_plot/","title":"Polar Scatter plot","text":"Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport {\n    data_8\n} from 'https://lib.vizzuhq.com/0.7/assets/data/chart_types_eu.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data_8\n})</code></pre> <ul> <li>add the Dimension whitch is on the Color channel to the Y-axis too</li> <li>switch the Geometry from Circle to Rectangle</li> </ul> <pre><code>chart.animate({\n    config: {\n        \"channels\": {\n            \"x\": \"Year\",\n            \"y\": \"Value 2 (+)\",\n            \"color\": \"Country\"\n        },\n        \"geometry\": \"circle\",\n        \"coordSystem\": \"polar\"\n    },\n    style: {\n        \"plot\": {\n            \"marker\": {\n                \"rectangleSpacing\": \"0.1em\",\n                \"label\": {\n                    \"position\": \"top\",\n                    \"fontSize\": \"0.6em\"\n                }\n            }\n        }\n    }\n});\n\nchart.animate({\n    config: {\n        \"channels\": {\n            \"y\": [\n                \"Country\",\n                \"Value 2 (+)\"\n            ]\n        },\n        \"geometry\": \"rectangle\"\n    }\n});\n\nchart.feature('tooltip', true);</code></pre>"},{"location":"examples/analytical_operations/sum/ScatterPlot_Scatter_plot/","title":"Scatter plot","text":"Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport {\n    data_6\n} from 'https://lib.vizzuhq.com/0.7/assets/data/chart_types_eu.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data_6\n})</code></pre> <ul> <li>remove the Dimension from the Label channel and add the othere Dimension to it</li> </ul> <pre><code>chart.animate({\n    config: {\n        \"channels\": {\n            \"x\": \"Value 1 (+)\",\n            \"y\": \"Value 3 (+)\",\n            \"color\": \"Country\",\n            \"label\": \"Year\"\n        },\n        \"geometry\": \"circle\"\n    }\n});\n\nchart.animate({\n    config: {\n        \"channels\": {\n            \"label\": \"Country\"\n        }\n    }\n});\n\nchart.feature('tooltip', true);</code></pre>"},{"location":"examples/analytical_operations/sum/Stream_Stacked_Stream/","title":"Stacked Stream","text":"Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport {\n    data\n} from 'https://lib.vizzuhq.com/0.7/assets/data/music_industry_history_1.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data\n})</code></pre> <p>This is a 2-step animation:</p> <p>1st: set the Split parameter to true</p> <p>2nd:</p> <ul> <li>move the Measure to the X-axis</li> <li>set the Align parameter 'center'</li> <li>set the Split parameter to false</li> <li>arrange the markers in reverse order</li> <li>switch the Geometry from Area to Rectangle</li> </ul> <pre><code>chart.on('plot-axis-label-draw', (event) =&gt; {\n    let year = parseFloat(event.data.text);\n    if (!event.data.text.includes(\"$\") &amp;&amp; !isNaN(year) &amp;&amp; year % 5 != 0)\n        event.preventDefault();\n});\n\nchart.animate({\n    config: {\n        \"channels\": {\n            \"x\": \"Year\",\n            \"y\": [\n                \"Revenue [$]\",\n                \"Format\"\n            ],\n            \"color\": \"Format\"\n        },\n        \"geometry\": \"area\",\n        \"align\": \"center\"\n    },\n    style: {\n        \"plot\": {\n            \"yAxis\": {\n                \"label\": {\n                    \"numberScale\": \"K, M, B, T\"\n                }\n            }\n        }\n    }\n});\n\nchart.animate({\n    config: {\n        \"split\": true\n    }\n});\n\nchart.animate({\n    config: {\n        \"channels\": {\n            \"y\": [\n                \"Revenue [$]\",\n                \"Year\"\n            ],\n            \"x\": [\n                \"Format\"\n            ]\n        },\n        \"geometry\": \"rectangle\",\n        \"align\": \"min\",\n        \"split\": false,\n        \"sort\": \"byValue\",\n        \"reverse\": true\n    }\n});\n\nchart.feature('tooltip', true);</code></pre>"},{"location":"examples/analytical_operations/sum/Treemap_Treemap/","title":"Treemap","text":"Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport {\n    data\n} from 'https://lib.vizzuhq.com/0.7/assets/data/chart_types_eu.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data\n})</code></pre> <ul> <li>add the Dimension whitch is on Label channel to the Size channel too (stack)</li> </ul> <pre><code>chart.animate({\n    config: {\n        \"channels\": {\n            \"size\": \"Value 2 (+)\",\n            \"noop\": \"Country_code\",\n            \"color\": \"Joy factors\",\n            \"label\": \"Country_code\"\n        }\n    }\n});\n\nchart.animate({\n    config: {\n        \"channels\": {\n            \"size\": [\n                \"Country_code\",\n                \"Value 2 (+)\"\n            ]\n        }\n    }\n});</code></pre>"},{"location":"examples/animated/","title":"Animated charts","text":"<p> src='./composition_comparison_pie_coxcomb_column_2dis_2con.mp4' type='video/mp4'&gt;  src='./composition_comparison_waterfall_column_2dis_1con.mp4' type='video/mp4'&gt;  src='./composition_percentage_area_stream_3dis_1con.mp4' type='video/mp4'&gt;  src='./composition_percentage_column_3dis_1con.mp4' type='video/mp4'&gt;  src='./composition_percentage_column_stream_3dis_1con.mp4' type='video/mp4'&gt;  src='./distribution_relationship_dotplot_dotplot.mp4' type='video/mp4'&gt;  src='./drill_aggreg_improve_line.mp4' type='video/mp4'&gt;  src='./drilldown_aggregate_line.mp4' type='video/mp4'&gt;  src='./merge_split_area_stream_3dis_1con.mp4' type='video/mp4'&gt;  src='./merge_split_bar.mp4' type='video/mp4'&gt;  src='./merge_split_radial_stacked_rectangle_2dis_1con.mp4' type='video/mp4'&gt;  src='./orientation_circle.mp4' type='video/mp4'&gt;  src='./orientation_dot_circle.mp4' type='video/mp4'&gt;  src='./orientation_marimekko_rectangle_2dis_2con.mp4' type='video/mp4'&gt;  src='./orientation_rectangle.mp4' type='video/mp4'&gt;  src='./pie_donut2_rectangle_1dis_1con.mp4' type='video/mp4'&gt;  src='./relationship_comparison_circle_2_bubble_plot.mp4' type='video/mp4'&gt;  src='./relationship_total_bubble_plot_column.mp4' type='video/mp4'&gt;  src='./stack_group_area_line.mp4' type='video/mp4'&gt;  src='./stack_group_circle.mp4' type='video/mp4'&gt;  src='./stack_group_treemap.mp4' type='video/mp4'&gt;  src='./total_element_bubble_2_bar.mp4' type='video/mp4'&gt;  src='./total_element_bubble_column.mp4' type='video/mp4'&gt;  src='./treemap_radial.mp4' type='video/mp4'&gt;  src='./zoom_area.mp4' type='video/mp4'&gt;  src='./zoom_area_polar.mp4' type='video/mp4'&gt;  src='./zoom_line.mp4' type='video/mp4'&gt;  src='./zoom_line_polar.mp4' type='video/mp4'&gt;</p>"},{"location":"examples/animated/composition_comparison_pie_coxcomb_column_2dis_2con/","title":"Pie  to Coxcomb","text":"Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport {\n    data\n} from 'https://lib.vizzuhq.com/0.7/assets/data/infinite_data.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data\n})</code></pre> <pre><code>chart.animate({\n    config: {\n        \"channels\": {\n            \"x\": [\n                \"Value 1\",\n                \"Joy factors\"\n            ],\n            \"color\": \"Joy factors\",\n            \"label\": \"Value 1\"\n        },\n        \"title\": \"Pie Chart\",\n        \"coordSystem\": \"polar\"\n    }\n});\n\nchart.animate({\n    config: {\n        \"channels\": {\n            \"x\": [\n                \"Value 1\",\n                \"Joy factors\",\n                \"Region\",\n                \"Country code\"\n            ],\n            \"label\": null\n        }\n    }\n}, \"500ms\");\n\nchart.animate({\n    config: {\n        \"channels\": {\n            \"x\": [\n                \"Value 1\",\n                \"Joy factors\",\n                \"Region\",\n                \"Country code\"\n            ],\n            \"y\": {\n                \"set\": \"Value 3\",\n                \"range\": {\n                    \"min\": \"-60%\"\n                }\n            }\n        },\n        \"title\": \"Coxcomb Chart\"\n    }\n});</code></pre>"},{"location":"examples/animated/composition_comparison_waterfall_column_2dis_1con/","title":"Waterfall  to Column","text":"Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport {\n    data\n} from 'https://lib.vizzuhq.com/0.7/assets/data/chart_types_eu.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data\n})</code></pre> <pre><code>chart.animate({\n    config: {\n        \"channels\": {\n            \"x\": \"Year\",\n            \"y\": [\n                \"Year\",\n                \"Value 5 (+/-)\"\n            ],\n            \"color\": {\n                \"set\": [\n                    \"Value 5 (+/-)\"\n                ],\n                \"range\": {\n                    \"min\": \"-45\",\n                    \"max\": \"45\"\n                }\n            },\n            \"noop\": \"Country\",\n            \"label\": \"Value 5 (+/-)\"\n        },\n        \"title\": \"Waterfall Chart\",\n        \"legend\": \"color\"\n    },\n    style: {\n        \"plot\": {\n            \"marker\": {\n                \"colorGradient\": \"#3d51b8 0,#6389ec 0.15,#9fbffa 0.35,#d5d7d9 0.5,#f4b096 0.65,#e36c56 0.85,#ac1727 1\",\n                \"label\": {\n                    \"position\": \"top\"\n                }\n            }\n        }\n    }\n});\n\nchart.animate({\n    config: {\n        \"channels\": {\n            \"y\": \"Value 5 (+/-)\"\n        },\n        \"title\": \"Column Chart\"\n    }\n});</code></pre>"},{"location":"examples/animated/composition_percentage_area_stream_3dis_1con/","title":"Stacked Area  to Split Area","text":"Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport {\n    data_14\n} from 'https://lib.vizzuhq.com/0.7/assets/data/chart_types_eu.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data_14\n})</code></pre> <pre><code>chart.animate({\n    config: {\n        \"channels\": {\n            \"x\": \"Year\",\n            \"y\": [\n                \"Value 2 (+)\",\n                \"Country\"\n            ],\n            \"color\": \"Country\"\n        },\n        \"title\": \"Stacked Area Chart\",\n        \"geometry\": \"area\"\n    }\n});\n\nchart.animate({\n    config: {\n        \"title\": \"100% Stacked Area Chart\",\n        \"align\": \"stretch\"\n    }\n});\n\nchart.animate({\n    config: {\n        \"channels\": {\n            \"y\": {\n                \"range\": {\n                    \"max\": \"100%\"\n                }\n            }\n        },\n        \"title\": \"Split Area Chart\",\n        \"align\": \"min\",\n        \"split\": true\n    }\n});</code></pre>"},{"location":"examples/animated/composition_percentage_column_3dis_1con/","title":"Stacked Column  to Split Column","text":"Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport {\n    data_14\n} from 'https://lib.vizzuhq.com/0.7/assets/data/chart_types_eu.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data_14\n})</code></pre> <pre><code>chart.animate({\n    config: {\n        \"channels\": {\n            \"x\": \"Year\",\n            \"y\": [\n                \"Value 2 (+)\",\n                \"Country\"\n            ],\n            \"color\": \"Country\"\n        },\n        \"title\": \"Stacked Column Chart\"\n    }\n});\n\nchart.animate({\n    config: {\n        \"title\": \"100% Stacked Column Chart\",\n        \"align\": \"stretch\"\n    }\n});\n\nchart.animate({\n    config: {\n        \"channels\": {\n            \"y\": {\n                \"range\": {\n                    \"max\": \"100%\"\n                }\n            }\n        },\n        \"title\": \"Split Column Chart\",\n        \"align\": \"min\",\n        \"split\": true\n    }\n});</code></pre>"},{"location":"examples/animated/composition_percentage_column_stream_3dis_1con/","title":"Column  to 100% Column","text":"Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport {\n    data_14\n} from 'https://lib.vizzuhq.com/0.7/assets/data/chart_types_eu.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data_14\n})</code></pre> <pre><code>chart.animate({\n    config: {\n        \"channels\": {\n            \"x\": \"Year\",\n            \"y\": [\n                \"Value 2 (+)\",\n                \"Country\"\n            ],\n            \"noop\": \"Country\"\n        },\n        \"title\": \"Column Chart\"\n    }\n});\n\nchart.animate({\n    config: {\n        \"channels\": {\n            \"y\": {\n                \"range\": {\n                    \"max\": \"100%\"\n                }\n            },\n            \"color\": \"Country\",\n            \"noop\": null\n        },\n        \"title\": \"Split Column Chart\",\n        \"split\": true\n    }\n});\n\nchart.animate({\n    config: {\n        \"channels\": {\n            \"y\": {\n                \"range\": {\n                    \"max\": \"auto\"\n                }\n            }\n        },\n        \"title\": \"Stacked Column Chart\",\n        \"split\": false\n    }\n});\n\nchart.animate({\n    config: {\n        \"title\": \"100% Column Chart\",\n        \"align\": \"stretch\"\n    }\n});</code></pre>"},{"location":"examples/animated/distribution_relationship_dotplot_dotplot/","title":"Distribution Plot to Scatter Plot","text":"Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport {\n    data\n} from 'https://lib.vizzuhq.com/0.7/assets/data/chart_types_eu.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data\n})</code></pre> <pre><code>chart.animate({\n    config: {\n        \"channels\": {\n            \"x\": \"Joy factors\",\n            \"y\": \"Value 5 (+/-)\",\n            \"color\": \"Joy factors\",\n            \"noop\": \"Country_code\"\n        },\n        \"title\": \"Distribution Plot\",\n        \"geometry\": \"circle\"\n    }\n});\n\nchart.animate({\n    config: {\n        \"channels\": {\n            \"x\": [\n                \"Joy factors\",\n                \"Value 6 (+/-)\"\n            ],\n            \"label\": \"Country_code\"\n        },\n        \"title\": \"Scatter Plot\"\n    }\n});</code></pre>"},{"location":"examples/animated/drill_aggreg_improve_line/","title":"Single Line  to Line  I","text":"Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport {\n    data_6\n} from 'https://lib.vizzuhq.com/0.7/assets/data/chart_types_eu.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data_6\n})</code></pre> <pre><code>chart.animate({\n    config: {\n        \"channels\": {\n            \"x\": \"Year\",\n            \"y\": \"Value 3 (+)\"\n        },\n        \"title\": \"Single Line Chart\",\n        \"geometry\": \"line\"\n    }\n});\n\nchart.animate({\n    config: {\n        \"channels\": {\n            \"y\": [\n                \"Country\",\n                \"Value 3 (+)\"\n            ],\n            \"color\": \"Country\"\n        },\n        \"title\": \"Drill down\",\n        \"geometry\": \"area\"\n    }\n});\n\nchart.animate({\n    config: {\n        \"channels\": {\n            \"y\": \"Value 3 (+)\"\n        },\n        \"title\": \"Line Chart I\",\n        \"geometry\": \"line\"\n    }\n});</code></pre>"},{"location":"examples/animated/drilldown_aggregate_line/","title":"Single Line  to Line  II","text":"Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport {\n    data\n} from 'https://lib.vizzuhq.com/0.7/assets/data/chart_types_eu.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data\n})</code></pre> <pre><code>chart.animate({\n    config: {\n        \"channels\": {\n            \"x\": \"Year\",\n            \"y\": {\n                \"set\": \"Value 3 (+)\",\n                \"range\": {\n                    \"max\": \"6000000000\"\n                }\n            },\n            \"size\": \"Country\"\n        },\n        \"title\": \"Single Line Chart\",\n        \"geometry\": \"line\"\n    }\n});\n\nchart.animate({\n    config: {\n        \"channels\": {\n            \"color\": \"Country\",\n            \"size\": null\n        },\n        \"title\": \"Drill down\"\n    }\n});\n\nchart.animate({\n    config: {\n        \"channels\": {\n            \"y\": {\n                \"range\": {\n                    \"max\": \"auto\"\n                }\n            }\n        },\n        \"title\": \"Line Chart II\"\n    }\n});</code></pre>"},{"location":"examples/animated/merge_split_area_stream_3dis_1con/","title":"Stacked Streamgraph to Split Area","text":"Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport {\n    data_6\n} from 'https://lib.vizzuhq.com/0.7/assets/data/chart_types_eu.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data_6\n})</code></pre> <pre><code>chart.animate({\n    config: {\n        \"channels\": {\n            \"x\": [\n                \"Year\",\n                \"Joy factors\"\n            ],\n            \"y\": [\n                \"Value 3 (+)\",\n                \"Country\"\n            ],\n            \"color\": \"Country\"\n        },\n        \"title\": \"Stacked Streamgraph\",\n        \"geometry\": \"area\",\n        \"align\": \"center\"\n    }\n});\n\nchart.animate({\n    config: {\n        \"channels\": {\n            \"y\": {\n                \"range\": {\n                    \"max\": \"100%\"\n                }\n            }\n        },\n        \"title\": \"Split Area Chart\",\n        \"split\": true,\n        \"align\": \"min\"\n    }\n});</code></pre>"},{"location":"examples/animated/merge_split_bar/","title":"Stacked Bar  to Split Bar","text":"Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport {\n    data_6\n} from 'https://lib.vizzuhq.com/0.7/assets/data/chart_types_eu.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data_6\n})</code></pre> <pre><code>chart.animate({\n    config: {\n        \"channels\": {\n            \"x\": [\n                \"Value 3 (+)\",\n                \"Country\"\n            ],\n            \"y\": [\n                \"Year\",\n                \"Joy factors\"\n            ],\n            \"color\": \"Country\"\n        },\n        \"title\": \"Stacked Bar Chart\"\n    }\n});\n\nchart.animate({\n    config: {\n        \"title\": \"Split Bar Chart\",\n        \"split\": true\n    }\n});</code></pre>"},{"location":"examples/animated/merge_split_radial_stacked_rectangle_2dis_1con/","title":"Radial Bar  to Split Radial Bar","text":"Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport {\n    data\n} from 'https://lib.vizzuhq.com/0.7/assets/data/chart_types_eu.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data\n})</code></pre> <pre><code>chart.animate({\n    config: {\n        \"channels\": {\n            \"x\": [\n                \"Country\",\n                \"Value 2 (+)\"\n            ],\n            \"y\": {\n                \"set\": \"Year\",\n                \"range\": {\n                    \"min\": \"-3\"\n                }\n            },\n            \"color\": \"Country\"\n        },\n        \"title\": \"Radial Bar Chart\",\n        \"coordSystem\": \"polar\"\n    }\n});\n\nchart.animate({\n    config: {\n        \"title\": \"Split Radial Bar Chart\",\n        \"split\": true\n    }\n});</code></pre>"},{"location":"examples/animated/orientation_circle/","title":"Dot Plot to Dot Plot with Other Orientation","text":"Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport {\n    data\n} from 'https://lib.vizzuhq.com/0.7/assets/data/chart_types_eu.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data\n})</code></pre> <pre><code>chart.animate({\n    config: {\n        \"channels\": {\n            \"x\": \"Value 5 (+/-)\",\n            \"y\": \"Joy factors\",\n            \"lightness\": \"Joy factors\",\n            \"noop\": \"Year\"\n        },\n        \"title\": \"Dot Plot\",\n        \"geometry\": \"circle\"\n    }\n});\n\nchart.animate({\n    config: {\n        \"channels\": {\n            \"x\": \"Year\",\n            \"y\": \"Value 5 (+/-)\",\n            \"noop\": \"Joy factors\"\n        },\n        \"title\": \"Dot Plot with Other Orientation\"\n    }\n});</code></pre>"},{"location":"examples/animated/orientation_dot_circle/","title":"Scatter Plot to Dot Plot","text":"Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport {\n    data\n} from 'https://lib.vizzuhq.com/0.7/assets/data/chart_types_eu.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data\n})</code></pre> <pre><code>chart.animate({\n    config: {\n        \"channels\": {\n            \"x\": \"Value 5 (+/-)\",\n            \"y\": \"Value 6 (+/-)\",\n            \"noop\": \"Joy factors\",\n            \"lightness\": \"Year\"\n        },\n        \"title\": \"Scatter Plot\",\n        \"geometry\": \"circle\"\n    }\n});\n\nchart.animate({\n    config: {\n        \"channels\": {\n            \"x\": \"Year\"\n        },\n        \"title\": \"Dot Plot\",\n        \"legend\": \"lightness\"\n    }\n});\n\nchart.animate({\n    config: {\n        \"channels\": {\n            \"x\": \"Value 5 (+/-)\",\n            \"y\": \"Value 6 (+/-)\"\n        },\n        \"title\": \"Scatter Plot\"\n    }\n});\n\nchart.animate({\n    config: {\n        \"channels\": {\n            \"y\": \"Joy factors\",\n            \"noop\": null\n        },\n        \"title\": \"Dot Plot\"\n    }\n});</code></pre>"},{"location":"examples/animated/orientation_marimekko_rectangle_2dis_2con/","title":"Marimekko  to Marimekko with Other Orientation","text":"Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport {\n    data_4\n} from 'https://lib.vizzuhq.com/0.7/assets/data/chart_types_eu.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data_4\n})</code></pre> <pre><code>chart.animate({\n    config: {\n        \"channels\": {\n            \"x\": [\n                \"Country\",\n                \"Value 2 (+)\"\n            ],\n            \"y\": [\n                \"Joy factors\",\n                \"Value 3 (+)\"\n            ],\n            \"color\": \"Joy factors\",\n            \"label\": \"Country\",\n            \"lightness\": \"Country\"\n        },\n        \"title\": \"Marimekko Chart\",\n        \"align\": \"stretch\",\n        \"orientation\": \"horizontal\"\n    }\n});\n\nchart.animate({\n    config: {\n        \"title\": \"Marimekko with Other Orientation\",\n        \"orientation\": \"vertical\"\n    }\n});</code></pre>"},{"location":"examples/animated/orientation_rectangle/","title":"Stacked Column  to Bar","text":"Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport {\n    data\n} from 'https://lib.vizzuhq.com/0.7/assets/data/tutorial.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data\n})</code></pre> <pre><code>chart.animate({\n    config: {\n        \"channels\": {\n            \"x\": \"Timeseries\",\n            \"y\": [\n                \"Values 1\",\n                \"Categ. Parent\"\n            ],\n            \"color\": \"Categ. Parent\",\n            \"label\": \"Values 1\"\n        },\n        \"title\": \"Stacked Column Chart\"\n    }\n});\n\nchart.animate({\n    config: {\n        \"channels\": {\n            \"x\": \"Values 1\",\n            \"y\": \"Categ. Parent\"\n        },\n        \"title\": \"Bar Chart\"\n    }\n});</code></pre>"},{"location":"examples/animated/pie_donut2_rectangle_1dis_1con/","title":"Pie  to Donut","text":"Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport {\n    data\n} from 'https://lib.vizzuhq.com/0.7/assets/data/chart_types_eu.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data\n})</code></pre> <pre><code>chart.animate({\n    config: {\n        \"channels\": {\n            \"x\": [\n                \"Joy factors\",\n                \"Value 2 (+)\"\n            ],\n            \"color\": \"Joy factors\",\n            \"label\": \"Value 2 (+)\"\n        },\n        \"title\": \"Pie Chart\",\n        \"coordSystem\": \"polar\"\n    }\n});\n\nchart.animate({\n    config: {\n        \"channels\": {\n            \"y\": {\n                \"range\": {\n                    \"min\": \"-200%\"\n                }\n            }\n        },\n        \"title\": \"Donut Chart\"\n    }\n});</code></pre>"},{"location":"examples/animated/relationship_comparison_circle_2_bubble_plot/","title":"Bubble Plot to Bubble","text":"Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport {\n    data\n} from 'https://lib.vizzuhq.com/0.7/assets/data/chart_types_eu.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data\n})</code></pre> <pre><code>chart.animate({\n    config: {\n        \"channels\": {\n            \"x\": [\n                \"Joy factors\",\n                \"Value 6 (+/-)\"\n            ],\n            \"y\": \"Value 5 (+/-)\",\n            \"color\": \"Joy factors\",\n            \"size\": \"Value 2 (+)\",\n            \"label\": \"Country_code\"\n        },\n        \"title\": \"Bubble Plot\",\n        \"geometry\": \"circle\"\n    }\n});\n\nchart.animate({\n    config: {\n        \"channels\": {\n            \"x\": null,\n            \"y\": null,\n            \"size\": [\n                \"Value 2 (+)\",\n                \"Country_code\"\n            ]\n        },\n        \"title\": \"Stacked Bubble Chart\"\n    }\n});\n\nchart.animate({\n    config: {\n        \"channels\": {\n            \"size\": \"Value 2 (+)\"\n        },\n        \"title\": \"Bubble Chart\"\n    }\n});</code></pre>"},{"location":"examples/animated/relationship_total_bubble_plot_column/","title":"Bubble Plot to Bar","text":"Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport {\n    data\n} from 'https://lib.vizzuhq.com/0.7/assets/data/chart_types_eu.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data\n})</code></pre> <pre><code>chart.animate({\n    config: {\n        \"channels\": {\n            \"x\": [\n                \"Joy factors\",\n                \"Value 6 (+/-)\"\n            ],\n            \"y\": \"Value 5 (+/-)\",\n            \"color\": \"Joy factors\",\n            \"size\": \"Value 2 (+)\",\n            \"label\": \"Country_code\"\n        },\n        \"title\": \"Bubble Plot\",\n        \"geometry\": \"circle\"\n    }\n});\n\nchart.animate({\n    config: {\n        \"channels\": {\n            \"y\": \"Joy factors\",\n            \"x\": [\n                \"Value 2 (+)\",\n                \"Country_code\"\n            ],\n            \"label\": null\n        },\n        \"title\": \"Bar Chart\",\n        \"geometry\": \"rectangle\",\n        \"orientation\": \"vertical\"\n    }\n});\n\nchart.animate({\n    config: {\n        \"channels\": {\n            \"x\": \"Value 2 (+)\",\n            \"label\": \"Value 2 (+)\"\n        }\n    }\n});</code></pre>"},{"location":"examples/animated/stack_group_area_line/","title":"Stacked Area  to Line","text":"Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport {\n    data\n} from 'https://lib.vizzuhq.com/0.7/assets/data/tutorial.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data\n})</code></pre> <pre><code>chart.animate({\n    config: {\n        \"channels\": {\n            \"x\": \"Timeseries\",\n            \"y\": {\n                \"set\": [\n                    \"Values 1\",\n                    \"Categ. Parent\"\n                ],\n                \"range\": {\n                    \"max\": \"400\"\n                }\n            },\n            \"label\": \"Values 1\",\n            \"color\": \"Categ. Parent\"\n        },\n        \"title\": \"Stacked Area Chart\",\n        \"geometry\": \"area\"\n    }\n});\n\nchart.animate({\n    config: {\n        \"channels\": {\n            \"y\": \"Values 1\"\n        },\n        \"title\": \"Line Chart\",\n        \"geometry\": \"line\"\n    }\n});\n\nchart.animate({\n    config: {\n        \"channels\": {\n            \"y\": {\n                \"range\": {\n                    \"max\": \"auto\"\n                }\n            }\n        }\n    }\n});</code></pre>"},{"location":"examples/animated/stack_group_circle/","title":"Bubble  to Stacked Bubble","text":"Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport {\n    data\n} from 'https://lib.vizzuhq.com/0.7/assets/data/chart_types_eu.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data\n})</code></pre> <pre><code>chart.animate({\n    config: {\n        \"channels\": {\n            \"color\": \"Joy factors\",\n            \"size\": \"Value 2 (+)\",\n            \"label\": \"Country_code\"\n        },\n        \"title\": \"Bubble Chart\",\n        \"geometry\": \"circle\"\n    }\n});\n\nchart.animate({\n    config: {\n        \"channels\": {\n            \"size\": [\n                \"Value 2 (+)\",\n                \"Country_code\"\n            ]\n        },\n        \"title\": \"Stacked Bubble Chart\"\n    }\n});</code></pre>"},{"location":"examples/animated/stack_group_treemap/","title":"Treemap to Stacked Treemap","text":"Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport {\n    data\n} from 'https://lib.vizzuhq.com/0.7/assets/data/chart_types_eu.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data\n})</code></pre> <pre><code>chart.animate({\n    config: {\n        \"channels\": {\n            \"size\": \"Value 2 (+)\",\n            \"noop\": \"Country_code\",\n            \"color\": \"Joy factors\",\n            \"label\": \"Country_code\"\n        },\n        \"title\": \"Treemap\"\n    }\n});\n\nchart.animate({\n    config: {\n        \"channels\": {\n            \"size\": [\n                \"Value 2 (+)\",\n                \"Country_code\"\n            ]\n        },\n        \"title\": \"Stacked Treemap\"\n    }\n});</code></pre>"},{"location":"examples/animated/total_element_bubble_2_bar/","title":"Stacked Bubble  to Bar","text":"Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport {\n    data\n} from 'https://lib.vizzuhq.com/0.7/assets/data/chart_types_eu.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data\n})</code></pre> <pre><code>chart.animate({\n    config: {\n        \"channels\": {\n            \"color\": \"Joy factors\",\n            \"label\": \"Country_code\",\n            \"size\": [\n                \"Country_code\",\n                \"Value 2 (+)\"\n            ]\n        },\n        \"title\": \"Stacked Bubble Chart\",\n        \"geometry\": \"circle\"\n    }\n});\n\nchart.animate({\n    config: {\n        \"channels\": {\n            \"x\": [\n                \"Country_code\",\n                \"Value 2 (+)\"\n            ],\n            \"y\": \"Joy factors\",\n            \"label\": null,\n            \"size\": null\n        },\n        \"title\": \"Bar Chart\",\n        \"geometry\": \"rectangle\",\n        \"orientation\": \"vertical\"\n    }\n});\n\nchart.animate({\n    config: {\n        \"channels\": {\n            \"x\": \"Value 2 (+)\",\n            \"label\": \"Value 2 (+)\"\n        }\n    }\n});</code></pre>"},{"location":"examples/animated/total_element_bubble_column/","title":"Stacked Bubble  to Column","text":"Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport {\n    data\n} from 'https://lib.vizzuhq.com/0.7/assets/data/chart_types_eu.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data\n})</code></pre> <pre><code>chart.animate({\n    config: {\n        \"channels\": {\n            \"color\": \"Joy factors\",\n            \"label\": \"Country_code\",\n            \"size\": [\n                \"Country_code\",\n                \"Value 2 (+)\"\n            ]\n        },\n        \"title\": \"Stacked Bubble Chart\",\n        \"geometry\": \"circle\"\n    }\n});\n\nchart.animate({\n    config: {\n        \"channels\": {\n            \"x\": \"Joy factors\",\n            \"y\": [\n                \"Country_code\",\n                \"Value 2 (+)\"\n            ],\n            \"label\": null,\n            \"size\": null\n        },\n        \"title\": \"Column Chart\",\n        \"geometry\": \"rectangle\",\n        \"orientation\": \"vertical\"\n    }\n});\n\nchart.animate({\n    config: {\n        \"channels\": {\n            \"y\": \"Value 2 (+)\",\n            \"label\": \"Value 2 (+)\"\n        }\n    }\n});</code></pre>"},{"location":"examples/animated/treemap_radial/","title":"Treemap to Radial","text":"Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport {\n    data\n} from 'https://lib.vizzuhq.com/0.7/assets/data/chart_types_eu.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data\n})</code></pre> <pre><code>chart.animate({\n    config: {\n        \"channels\": {\n            \"color\": \"Joy factors\",\n            \"size\": \"Value 2 (+)\",\n            \"label\": \"Joy factors\"\n        },\n        \"title\": \"Treemap\"\n    }\n});\n\nchart.animate({\n    config: {\n        \"channels\": {\n            \"x\": \"Value 2 (+)\",\n            \"y\": {\n                \"set\": \"Joy factors\",\n                \"range\": {\n                    \"min\": \"-30%\"\n                }\n            },\n            \"size\": null,\n            \"label\": \"Value 2 (+)\"\n        },\n        \"title\": \"Radial Chart\",\n        \"coordSystem\": \"polar\"\n    }\n});</code></pre>"},{"location":"examples/animated/zoom_area/","title":"Stacked Area to Zoomed Stacked Area","text":"Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport {\n    data_6\n} from 'https://lib.vizzuhq.com/0.7/assets/data/chart_types_eu.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data_6\n})</code></pre> <pre><code>chart.animate({\n    config: {\n        \"channels\": {\n            \"x\": [\n                \"Year\",\n                \"Joy factors\"\n            ],\n            \"y\": [\n                \"Value 3 (+)\",\n                \"Country_code\"\n            ],\n            \"color\": \"Country_code\"\n        },\n        \"title\": \"Stacked Area\",\n        \"geometry\": \"area\"\n    }\n});\n\nchart.animate({\n    data: {\n        filter: (record) =&gt;\n            data_6.filter(record) &amp;&amp; record.Year &lt; 12 &amp;&amp; record.Year &gt; 6\n    },\n    config: {\n        \"title\": \"Zoomed Stacked Area\"\n    }\n});</code></pre>"},{"location":"examples/animated/zoom_area_polar/","title":"Polar Stacked Area to Zoomed Polar Stacked Area","text":"Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport {\n    data_6\n} from 'https://lib.vizzuhq.com/0.7/assets/data/chart_types_eu.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data_6\n})</code></pre> <pre><code>chart.animate({\n    config: {\n        \"channels\": {\n            \"x\": [\n                \"Year\",\n                \"Joy factors\"\n            ],\n            \"y\": [\n                \"Value 3 (+)\",\n                \"Country_code\"\n            ],\n            \"color\": \"Country_code\"\n        },\n        \"title\": \"Polar Stacked Area\",\n        \"geometry\": \"area\",\n        \"coordSystem\": \"polar\"\n    }\n});\n\nchart.animate({\n    data: {\n        filter: (record) =&gt;\n            data_6.filter(record) &amp;&amp; record.Year &lt; 12 &amp;&amp; record.Year &gt; 6\n    },\n    config: {\n        \"title\": \"Zoomed Polar Stacked Area\"\n    }\n});</code></pre>"},{"location":"examples/animated/zoom_line/","title":"Line chart to Zoomed Line chart","text":"Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport {\n    data_6\n} from 'https://lib.vizzuhq.com/0.7/assets/data/chart_types_eu.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data_6\n})</code></pre> <pre><code>chart.animate({\n    config: {\n        \"channels\": {\n            \"x\": [\n                \"Year\",\n                \"Joy factors\"\n            ],\n            \"y\": \"Value 3 (+)\",\n            \"color\": \"Country_code\"\n        },\n        \"title\": \"Line chart\",\n        \"geometry\": \"line\"\n    }\n});\n\nchart.animate({\n    data: {\n        filter: (record) =&gt;\n            data_6.filter(record) &amp;&amp; record.Year &lt; 8 &amp;&amp; record.Year &gt; 2\n    },\n    config: {\n        \"title\": \"Zoomed Line chart\"\n    }\n});</code></pre>"},{"location":"examples/animated/zoom_line_polar/","title":"Polar Line chart to Zoomed Polar Line chart","text":"Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport {\n    data_6\n} from 'https://lib.vizzuhq.com/0.7/assets/data/chart_types_eu.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data_6\n})</code></pre> <pre><code>chart.animate({\n    config: {\n        \"channels\": {\n            \"x\": [\n                \"Year\",\n                \"Joy factors\"\n            ],\n            \"y\": \"Value 3 (+)\",\n            \"color\": \"Country_code\"\n        },\n        \"title\": \"Polar Line chart\",\n        \"geometry\": \"line\",\n        \"coordSystem\": \"polar\"\n    }\n});\n\nchart.animate({\n    data: {\n        filter: (record) =&gt;\n            data_6.filter(record) &amp;&amp; record.Year &lt; 8 &amp;&amp; record.Year &gt; 2\n    },\n    config: {\n        \"title\": \"Zoomed Polar Line chart\"\n    }\n});</code></pre>"},{"location":"examples/presets/","title":"Preset charts","text":""},{"location":"examples/presets/02_C_R_column/","title":"Column Chart","text":"Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport {\n    data\n} from 'https://lib.vizzuhq.com/0.7/assets/data/chart_types_eu.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data\n})</code></pre> <pre><code>chart.animate({\n    config: Vizzu.presets.column({\n        \"x\": \"Joy factors\",\n        \"y\": \"Value 2 (+)\",\n        \"title\": \"Column Chart\"\n    })\n});</code></pre>"},{"location":"examples/presets/03_C_R_grouped_column_negative/","title":"Grouped Column Chart","text":"Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport {\n    data_6\n} from 'https://lib.vizzuhq.com/0.7/assets/data/chart_types_eu.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data_6\n})</code></pre> <pre><code>chart.animate({\n    config: Vizzu.presets.groupedColumn({\n        \"x\": \"Country\",\n        \"y\": \"Value 5 (+/-)\",\n        \"groupedBy\": \"Joy factors\",\n        \"title\": \"Grouped Column Chart\"\n    })\n});</code></pre>"},{"location":"examples/presets/04_C_R_stacked_column/","title":"Stacked Column Chart","text":"Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport {\n    data_6\n} from 'https://lib.vizzuhq.com/0.7/assets/data/chart_types_eu.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data_6\n})</code></pre> <pre><code>chart.animate({\n    config: Vizzu.presets.stackedColumn({\n        \"x\": \"Country\",\n        \"y\": \"Value 2 (+)\",\n        \"stackedBy\": \"Joy factors\",\n        \"title\": \"Stacked Column Chart\"\n    })\n});</code></pre>"},{"location":"examples/presets/05_C_R_splitted_column/","title":"Splitted Column Chart","text":"Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport {\n    data\n} from 'https://lib.vizzuhq.com/0.7/assets/data/chart_types_eu.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data\n})</code></pre> <pre><code>chart.animate({\n    config: Vizzu.presets.splittedColumn({\n        \"x\": \"Year\",\n        \"y\": \"Value 2 (+)\",\n        \"splittedBy\": \"Joy factors\",\n        \"title\": \"Splitted Column Chart\"\n    })\n});</code></pre>"},{"location":"examples/presets/06_C_R_percentage_column/","title":"Percentage Column Chart","text":"Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport {\n    data_6\n} from 'https://lib.vizzuhq.com/0.7/assets/data/chart_types_eu.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data_6\n})</code></pre> <pre><code>chart.animate({\n    config: Vizzu.presets.percentageColumn({\n        \"x\": \"Country\",\n        \"y\": \"Value 2 (+)\",\n        \"stackedBy\": \"Joy factors\",\n        \"title\": \"Percentage Column Chart\"\n    })\n});</code></pre>"},{"location":"examples/presets/08_C_R_waterfall/","title":"Waterfall Chart","text":"Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport {\n    data\n} from 'https://lib.vizzuhq.com/0.7/assets/data/chart_types_eu.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data\n})</code></pre> <pre><code>chart.animate({\n    config: Vizzu.presets.waterfall({\n        \"x\": \"Year\",\n        \"y\": \"Value 5 (+/-)\",\n        \"title\": \"Waterfall Chart\"\n    }),\n    style: {\n        \"plot\": {\n            \"marker\": {\n                \"colorGradient\": \"#ff001b 0,#ff001b 0.5,#7e79e8 0.5,#7e79e8 1\",\n                \"label\": {\n                    \"position\": \"top\"\n                }\n            }\n        }\n    }\n});</code></pre>"},{"location":"examples/presets/09_C_R_stacked_mekko/","title":"Stacked Mekko Chart","text":"Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport {\n    data_4\n} from 'https://lib.vizzuhq.com/0.7/assets/data/chart_types_eu.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data_4\n})</code></pre> <pre><code>chart.animate({\n    config: Vizzu.presets.mekko({\n        \"x\": \"Value 1 (+)\",\n        \"y\": \"Value 2 (+)\",\n        \"stackedBy\": \"Joy factors\",\n        \"groupedBy\": \"Country\",\n        \"title\": \"Stacked Mekko Chart\"\n    })\n});</code></pre>"},{"location":"examples/presets/10_C_R_marimekko/","title":"Marimekko Chart","text":"Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport {\n    data_4\n} from 'https://lib.vizzuhq.com/0.7/assets/data/chart_types_eu.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data_4\n})</code></pre> <pre><code>chart.animate({\n    config: Vizzu.presets.marimekko({\n        \"x\": \"Value 2 (+)\",\n        \"y\": \"Value 3 (+)\",\n        \"stackedBy\": \"Joy factors\",\n        \"groupedBy\": \"Country\",\n        \"title\": \"Marimekko Chart\"\n    })\n});</code></pre>"},{"location":"examples/presets/13_C_R_bar_negative/","title":"Bar Chart","text":"Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport {\n    data_6\n} from 'https://lib.vizzuhq.com/0.7/assets/data/chart_types_eu.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data_6\n})</code></pre> <pre><code>chart.animate({\n    config: Vizzu.presets.bar({\n        \"x\": \"Value 5 (+/-)\",\n        \"y\": \"Country\",\n        \"title\": \"Bar Chart\"\n    })\n});</code></pre>"},{"location":"examples/presets/14_C_R_grouped_bar_negative/","title":"Grouped Bar Chart","text":"Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport {\n    data_6\n} from 'https://lib.vizzuhq.com/0.7/assets/data/chart_types_eu.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data_6\n})</code></pre> <pre><code>chart.animate({\n    config: Vizzu.presets.groupedBar({\n        \"x\": \"Value 5 (+/-)\",\n        \"y\": \"Country\",\n        \"groupedBy\": \"Joy factors\",\n        \"title\": \"Grouped Bar Chart\"\n    })\n});</code></pre>"},{"location":"examples/presets/15_C_R_stacked_bar/","title":"Stacked Bar Chart","text":"Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport {\n    data_6\n} from 'https://lib.vizzuhq.com/0.7/assets/data/chart_types_eu.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data_6\n})</code></pre> <pre><code>chart.animate({\n    config: Vizzu.presets.stackedBar({\n        \"x\": \"Value 2 (+)\",\n        \"y\": \"Country\",\n        \"stackedBy\": \"Joy factors\",\n        \"title\": \"Stacked Bar Chart\"\n    })\n});</code></pre>"},{"location":"examples/presets/16_C_R_splitted_bar/","title":"Splitted Bar Chart","text":"Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport {\n    data\n} from 'https://lib.vizzuhq.com/0.7/assets/data/chart_types_eu.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data\n})</code></pre> <pre><code>chart.animate({\n    config: Vizzu.presets.splittedBar({\n        \"x\": \"Value 2 (+)\",\n        \"y\": \"Year\",\n        \"splittedBy\": \"Joy factors\",\n        \"title\": \"Splitted Bar Chart\"\n    })\n});</code></pre>"},{"location":"examples/presets/17_C_R_percentage_bar/","title":"Percentage Bar Chart","text":"Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport {\n    data_6\n} from 'https://lib.vizzuhq.com/0.7/assets/data/chart_types_eu.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data_6\n})</code></pre> <pre><code>chart.animate({\n    config: Vizzu.presets.percentageBar({\n        \"x\": \"Value 2 (+)\",\n        \"y\": \"Country\",\n        \"stackedBy\": \"Joy factors\",\n        \"title\": \"Percentage Bar Chart\"\n    })\n});</code></pre>"},{"location":"examples/presets/20_C_C_lollipop_chart/","title":"Lollipop Chart","text":"Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport {\n    data\n} from 'https://lib.vizzuhq.com/0.7/assets/data/chart_types_eu.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data\n})</code></pre> <pre><code>chart.animate({\n    config: Vizzu.presets.lollipop({\n        \"x\": \"Year\",\n        \"y\": \"Value 1 (+)\",\n        \"title\": \"Lollipop Chart\"\n    })\n});</code></pre>"},{"location":"examples/presets/22_C_C_scatter/","title":"Scatter Plot","text":"Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport {\n    data\n} from 'https://lib.vizzuhq.com/0.7/assets/data/chart_types_eu.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data\n})</code></pre> <pre><code>chart.animate({\n    config: Vizzu.presets.scatter({\n        \"x\": \"Value 6 (+/-)\",\n        \"y\": \"Value 5 (+/-)\",\n        \"dividedBy\": \"Year\",\n        \"title\": \"Scatter Plot\"\n    })\n});</code></pre>"},{"location":"examples/presets/24_C_C_bubbleplot/","title":"Bubble Plot","text":"Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport {\n    data\n} from 'https://lib.vizzuhq.com/0.7/assets/data/chart_types_eu.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data\n})</code></pre> <pre><code>chart.animate({\n    config: Vizzu.presets.bubbleplot({\n        \"x\": \"Value 4 (+/-)\",\n        \"y\": \"Value 5 (+/-)\",\n        \"color\": \"Joy factors\",\n        \"dividedBy\": \"Country\",\n        \"size\": \"Value 3 (+)\",\n        \"title\": \"Bubble Plot\"\n    })\n});</code></pre>"},{"location":"examples/presets/27_C_A_area_negative/","title":"Area Chart","text":"Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport {\n    data\n} from 'https://lib.vizzuhq.com/0.7/assets/data/chart_types_eu.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data\n})</code></pre> <pre><code>chart.animate({\n    config: Vizzu.presets.area({\n        \"x\": \"Year\",\n        \"y\": \"Value 5 (+/-)\",\n        \"title\": \"Area Chart\"\n    })\n});</code></pre>"},{"location":"examples/presets/28_C_A_stacked_area/","title":"Stacked Area Chart","text":"Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport {\n    data\n} from 'https://lib.vizzuhq.com/0.7/assets/data/chart_types_eu.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data\n})</code></pre> <pre><code>chart.animate({\n    config: Vizzu.presets.stackedArea({\n        \"x\": \"Year\",\n        \"y\": \"Value 2 (+)\",\n        \"stackedBy\": \"Country\",\n        \"title\": \"Stacked Area Chart\"\n    })\n});</code></pre>"},{"location":"examples/presets/29_C_A_percentage_area/","title":"Percentage Area Chart","text":"Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport {\n    data\n} from 'https://lib.vizzuhq.com/0.7/assets/data/chart_types_eu.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data\n})</code></pre> <pre><code>chart.animate({\n    config: Vizzu.presets.percentageArea({\n        \"x\": \"Year\",\n        \"y\": \"Value 2 (+)\",\n        \"stackedBy\": \"Country\",\n        \"title\": \"Percentage Area Chart\"\n    })\n});</code></pre>"},{"location":"examples/presets/31_C_A_splitted_area/","title":"Splitted Area Chart","text":"Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport {\n    data_6\n} from 'https://lib.vizzuhq.com/0.7/assets/data/chart_types_eu.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data_6\n})</code></pre> <pre><code>chart.animate({\n    config: Vizzu.presets.splittedArea({\n        \"x\": \"Year\",\n        \"y\": \"Value 2 (+)\",\n        \"splittedBy\": \"Country\",\n        \"title\": \"Splitted Area Chart\"\n    })\n});</code></pre>"},{"location":"examples/presets/32_C_A_stream/","title":"Stream Graph","text":"Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport {\n    data\n} from 'https://lib.vizzuhq.com/0.7/assets/data/music_industry_history_1.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data\n})</code></pre> <pre><code>chart.animate({\n    config: Vizzu.presets.stream({\n        \"x\": \"Year\",\n        \"y\": \"Revenue [$]\",\n        \"stackedBy\": \"Format\",\n        \"title\": \"Stream Graph\"\n    }),\n    style: {\n        \"plot\": {\n            \"yAxis\": {\n                \"label\": {\n                    \"numberScale\": \"K, M, B, T\"\n                }\n            },\n            \"xAxis\": {\n                \"label\": {\n                    \"angle\": \"-45deg\"\n                }\n            }\n        }\n    }\n});</code></pre>"},{"location":"examples/presets/33_C_A_vertical_stream/","title":"Vertical Stream Graph","text":"Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport {\n    data\n} from 'https://lib.vizzuhq.com/0.7/assets/data/music_industry_history_1.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data\n})</code></pre> <pre><code>chart.animate({\n    config: Vizzu.presets.verticalStream({\n        \"x\": \"Revenue [$]\",\n        \"y\": \"Year\",\n        \"stackedBy\": \"Format\",\n        \"title\": \"Vertical Stream Graph\"\n    }),\n    style: {\n        \"plot\": {\n            \"yAxis\": {\n                \"label\": {\n                    \"numberScale\": \"K, M, B, T\"\n                }\n            },\n            \"xAxis\": {\n                \"label\": {\n                    \"angle\": \"-45deg\"\n                }\n            }\n        }\n    }\n});</code></pre>"},{"location":"examples/presets/34_C_A_violin/","title":"Violin Graph","text":"Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport {\n    data\n} from 'https://lib.vizzuhq.com/0.7/assets/data/music_industry_history_1.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data\n})</code></pre> <pre><code>chart.animate({\n    config: Vizzu.presets.violin({\n        \"x\": \"Year\",\n        \"y\": \"Revenue [$]\",\n        \"splittedBy\": \"Format\",\n        \"title\": \"Violin Graph\"\n    }),\n    style: {\n        \"plot\": {\n            \"yAxis\": {\n                \"label\": {\n                    \"numberScale\": \"K, M, B, T\"\n                }\n            },\n            \"xAxis\": {\n                \"label\": {\n                    \"angle\": \"-45deg\"\n                }\n            }\n        }\n    }\n});</code></pre>"},{"location":"examples/presets/35_C_A_vertical_violin/","title":"Vertical Violin Graph","text":"Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport {\n    data\n} from 'https://lib.vizzuhq.com/0.7/assets/data/music_industry_history_1.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data\n})</code></pre> <pre><code>chart.animate({\n    config: Vizzu.presets.verticalViolin({\n        \"x\": \"Revenue [$]\",\n        \"y\": \"Year\",\n        \"splittedBy\": \"Format\",\n        \"title\": \"Vertical Violin Graph\"\n    }),\n    style: {\n        \"plot\": {\n            \"xAxis\": {\n                \"interlacing\": {\n                    \"color\": \"#ffffff00\"\n                }\n            },\n            \"yAxis\": {\n                \"label\": {\n                    \"numberScale\": \"K, M, B, T\"\n                }\n            }\n        }\n    }\n});</code></pre>"},{"location":"examples/presets/38_C_L_line/","title":"Line Chart","text":"Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport {\n    data_6\n} from 'https://lib.vizzuhq.com/0.7/assets/data/chart_types_eu.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data_6\n})</code></pre> <pre><code>chart.animate({\n    config: Vizzu.presets.line({\n        \"x\": \"Year\",\n        \"y\": \"Value 6 (+/-)\",\n        \"dividedBy\": \"Country\",\n        \"title\": \"Line Chart\"\n    })\n});</code></pre>"},{"location":"examples/presets/39_C_L_vertical_line/","title":"Vertical Line Chart","text":"Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport {\n    data_6\n} from 'https://lib.vizzuhq.com/0.7/assets/data/chart_types_eu.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data_6\n})</code></pre> <pre><code>chart.animate({\n    config: Vizzu.presets.line({\n        \"x\": \"Value 6 (+/-)\",\n        \"y\": \"Year\",\n        \"dividedBy\": \"Country\",\n        \"title\": \"Vertical Line Chart\"\n    })\n});</code></pre>"},{"location":"examples/presets/40_P_R_pie/","title":"Pie Chart","text":"Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport {\n    data\n} from 'https://lib.vizzuhq.com/0.7/assets/data/chart_types_eu.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data\n})</code></pre> <pre><code>chart.animate({\n    config: Vizzu.presets.pie({\n        \"angle\": \"Value 2 (+)\",\n        \"by\": \"Joy factors\",\n        \"title\": \"Pie Chart\"\n    })\n});</code></pre>"},{"location":"examples/presets/42_P_R_polar_column/","title":"Polar Column Chart","text":"Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport {\n    data\n} from 'https://lib.vizzuhq.com/0.7/assets/data/chart_types_eu.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data\n})</code></pre> <pre><code>chart.animate({\n    config: Vizzu.presets.polarColumn({\n        \"angle\": \"Joy factors\",\n        \"radius\": \"Value 2 (+)\",\n        \"title\": \"Polar Column Chart\"\n    })\n});</code></pre>"},{"location":"examples/presets/42a_P_R_polar_stacked_column/","title":"Polar Stacked Column Chart","text":"Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport {\n    data_6\n} from 'https://lib.vizzuhq.com/0.7/assets/data/chart_types_eu.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data_6\n})</code></pre> <pre><code>chart.animate({\n    config: Vizzu.presets.polarStackedColumn({\n        \"angle\": \"Country\",\n        \"radius\": \"Value 2 (+)\",\n        \"stackedBy\": \"Joy factors\",\n        \"title\": \"Polar Stacked Column Chart\"\n    })\n});</code></pre>"},{"location":"examples/presets/44_P_R_variable_radius_pie_chart/","title":"Variable Radius Pie Chart","text":"Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport {\n    data\n} from 'https://lib.vizzuhq.com/0.7/assets/data/chart_types_eu.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data\n})</code></pre> <pre><code>chart.animate({\n    config: Vizzu.presets.variableRadiusPie({\n        \"angle\": \"Value 2 (+)\",\n        \"radius\": \"Value 1 (+)\",\n        \"by\": \"Joy factors\",\n        \"title\": \"Variable Radius Pie Chart\"\n    })\n});</code></pre>"},{"location":"examples/presets/49_P_R_radial_bar/","title":"Radial Bar Chart","text":"Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport {\n    data_6\n} from 'https://lib.vizzuhq.com/0.7/assets/data/chart_types_eu.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data_6\n})</code></pre> <pre><code>chart.animate({\n    config: Vizzu.presets.radialBar({\n        \"angle\": \"Value 1 (+)\",\n        \"radius\": \"Country\",\n        \"title\": \"Radial Bar Chart\"\n    })\n});</code></pre>"},{"location":"examples/presets/50_P_R_radial_stacked_bar/","title":"Radial Stacked Bar Chart","text":"Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport {\n    data_6\n} from 'https://lib.vizzuhq.com/0.7/assets/data/chart_types_eu.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data_6\n})</code></pre> <pre><code>chart.animate({\n    config: Vizzu.presets.radialStackedBar({\n        \"angle\": \"Value 2 (+)\",\n        \"radius\": \"Country\",\n        \"stackedBy\": \"Joy factors\",\n        \"title\": \"Radial Stacked Bar Chart\"\n    })\n});</code></pre>"},{"location":"examples/presets/51_P_R_donut/","title":"Donut Chart","text":"Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport {\n    data\n} from 'https://lib.vizzuhq.com/0.7/assets/data/chart_types_eu.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data\n})</code></pre> <pre><code>chart.animate({\n    config: Vizzu.presets.donut({\n        \"angle\": \"Value 2 (+)\",\n        \"stackedBy\": \"Joy factors\",\n        \"title\": \"Donut Chart\"\n    })\n});</code></pre>"},{"location":"examples/presets/52_P_R_nested_donut/","title":"Nested Donut Chart","text":"Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport {\n    data_3\n} from 'https://lib.vizzuhq.com/0.7/assets/data/chart_types_eu.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data_3\n})</code></pre> <pre><code>chart.animate({\n    config: Vizzu.presets.nestedDonut({\n        \"angle\": \"Value 2 (+)\",\n        \"stackedBy\": \"Joy factors\",\n        \"radius\": \"Country\",\n        \"title\": \"Nested Donut Chart\"\n    }),\n    style: {\n        \"plot\": {\n            \"marker\": {\n                \"rectangleSpacing\": \"0\",\n                \"borderWidth\": 1,\n                \"borderOpacity\": 0\n            }\n        }\n    }\n});</code></pre>"},{"location":"examples/presets/53_P_C_polar_scatter/","title":"Polar Scatter Plot","text":"Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport {\n    data\n} from 'https://lib.vizzuhq.com/0.7/assets/data/chart_types_eu.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data\n})</code></pre> <pre><code>chart.animate({\n    config: Vizzu.presets.polarScatter({\n        \"angle\": \"Value 3 (+)\",\n        \"radius\": \"Value 2 (+)\",\n        \"dividedBy\": \"Country\",\n        \"title\": \"Polar Scatter Plot\"\n    })\n});</code></pre>"},{"location":"examples/presets/56_P_A_polar_line/","title":"Polar Line Chart","text":"Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport {\n    data_6\n} from 'https://lib.vizzuhq.com/0.7/assets/data/chart_types_eu.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data_6\n})</code></pre> <pre><code>chart.animate({\n    config: Vizzu.presets.polarLine({\n        \"angle\": \"Year\",\n        \"radius\": \"Value 2 (+)\",\n        \"dividedBy\": \"Country\",\n        \"title\": \"Polar Line Chart\"\n    })\n});</code></pre>"},{"location":"examples/presets/58_W_R_treemap/","title":"Treemap","text":"Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport {\n    data\n} from 'https://lib.vizzuhq.com/0.7/assets/data/chart_types_eu.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data\n})</code></pre> <pre><code>chart.animate({\n    config: Vizzu.presets.treemap({\n        \"size\": \"Value 2 (+)\",\n        \"color\": \"Country_code\",\n        \"title\": \"Treemap\"\n    })\n});</code></pre>"},{"location":"examples/presets/59_W_R_stacked_treemap/","title":"Stacked Treemap","text":"Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport {\n    data\n} from 'https://lib.vizzuhq.com/0.7/assets/data/chart_types_eu.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data\n})</code></pre> <pre><code>chart.animate({\n    config: Vizzu.presets.stackedTreemap({\n        \"size\": \"Value 2 (+)\",\n        \"color\": \"Joy factors\",\n        \"title\": \"Stacked Treemap\",\n        \"dividedBy\": \"Country_code\"\n    })\n});</code></pre>"},{"location":"examples/presets/60_W_R_heatmap/","title":"Heatmap","text":"Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport {\n    data_6\n} from 'https://lib.vizzuhq.com/0.7/assets/data/chart_types_eu.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data_6\n})</code></pre> <pre><code>chart.animate({\n    config: Vizzu.presets.heatmap({\n        \"x\": \"Year\",\n        \"y\": \"Country_code\",\n        \"lightness\": \"Value 3 (+)\",\n        \"title\": \"Heatmap\"\n    }),\n    style: {\n        \"plot\": {\n            \"marker\": {\n                \"rectangleSpacing\": 0\n            }\n        }\n    }\n});</code></pre>"},{"location":"examples/presets/61_W_R_bubble_chart/","title":"Bubble Chart","text":"Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport {\n    data\n} from 'https://lib.vizzuhq.com/0.7/assets/data/chart_types_eu.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data\n})</code></pre> <pre><code>chart.animate({\n    config: Vizzu.presets.bubble({\n        \"size\": \"Value 5 (+/-)\",\n        \"color\": \"Country_code\",\n        \"title\": \"Bubble Chart\"\n    })\n});</code></pre>"},{"location":"examples/presets/62_W_R_stacked_bubble/","title":"Stacked Bubble Chart","text":"Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport {\n    data\n} from 'https://lib.vizzuhq.com/0.7/assets/data/chart_types_eu.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data\n})</code></pre> <pre><code>chart.animate({\n    config: Vizzu.presets.stackedBubble({\n        \"size\": \"Value 2 (+)\",\n        \"color\": \"Joy factors\",\n        \"stackedBy\": \"Country_code\",\n        \"title\": \"Stacked Bubble Chart\"\n    })\n});</code></pre>"},{"location":"examples/static/","title":"Static charts","text":""},{"location":"examples/static/NO_spiderweb_line_2dis_1con/","title":"Polar Line Chart","text":"Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport {\n    data\n} from 'https://lib.vizzuhq.com/0.7/assets/data/chart_types_eu.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data\n})</code></pre> <pre><code>chart.animate({\n    config: {\n        \"channels\": {\n            \"x\": \"Year\",\n            \"y\": \"Value 2 (+)\",\n            \"color\": \"Country\"\n        },\n        \"title\": \"Polar Line Chart\",\n        \"geometry\": \"line\",\n        \"coordSystem\": \"polar\"\n    }\n});</code></pre>"},{"location":"examples/static/area_negative_1dis_1con/","title":"Area Chart with (-) Nums","text":"Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport {\n    data\n} from 'https://lib.vizzuhq.com/0.7/assets/data/chart_types_eu.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data\n})</code></pre> <pre><code>chart.animate({\n    config: {\n        \"channels\": {\n            \"x\": \"Year\",\n            \"y\": \"Value 5 (+/-)\",\n            \"label\": \"Value 5 (+/-)\"\n        },\n        \"title\": \"Area Chart with (-) Nums\",\n        \"geometry\": \"area\"\n    }\n});</code></pre>"},{"location":"examples/static/bar_rectangle_negative_1dis_1con/","title":"Bar Chart","text":"Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport {\n    data\n} from 'https://lib.vizzuhq.com/0.7/assets/data/chart_types_eu.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data\n})</code></pre> <pre><code>chart.animate({\n    config: {\n        \"channels\": {\n            \"x\": \"Value 5 (+/-)\",\n            \"y\": \"Country\",\n            \"color\": \"Country\",\n            \"label\": \"Value 5 (+/-)\"\n        },\n        \"title\": \"Bar Chart\"\n    }\n});</code></pre>"},{"location":"examples/static/bubble_circle_1dis_2con/","title":"Bubble Chart","text":"Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport {\n    data\n} from 'https://lib.vizzuhq.com/0.7/assets/data/chart_types_eu.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data\n})</code></pre> <pre><code>chart.animate({\n    config: {\n        \"channels\": {\n            \"color\": \"Country_code\",\n            \"label\": \"Country_code\",\n            \"size\": \"Value 5 (+/-)\"\n        },\n        \"title\": \"Bubble Chart\",\n        \"geometry\": \"circle\"\n    }\n});</code></pre>"},{"location":"examples/static/bubble_circle_2dis_2con/","title":"Stacked Bubble Chart","text":"Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport {\n    data\n} from 'https://lib.vizzuhq.com/0.7/assets/data/chart_types_eu.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data\n})</code></pre> <pre><code>chart.animate({\n    config: {\n        \"channels\": {\n            \"color\": \"Joy factors\",\n            \"size\": [\n                \"Country_code\",\n                \"Value 2 (+)\"\n            ],\n            \"label\": \"Country_code\"\n        },\n        \"title\": \"Stacked Bubble Chart\",\n        \"geometry\": \"circle\"\n    }\n});</code></pre>"},{"location":"examples/static/column/","title":"Column Chart","text":"Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport {\n    data\n} from 'https://lib.vizzuhq.com/0.7/assets/data/chart_types_eu.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data\n})</code></pre> <pre><code>chart.animate({\n    config: Vizzu.presets.column({\n        \"x\": \"Joy factors\",\n        \"y\": \"Value 2 (+)\",\n        \"title\": \"Column Chart\"\n    })\n});</code></pre>"},{"location":"examples/static/column_grouped_rectangle_negative_2dis_1con/","title":"Grouped Column Chart","text":"Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport {\n    data\n} from 'https://lib.vizzuhq.com/0.7/assets/data/chart_types_eu.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data\n})</code></pre> <pre><code>chart.animate({\n    config: {\n        \"channels\": {\n            \"x\": [\n                \"Joy factors\",\n                \"Country\"\n            ],\n            \"y\": \"Value 5 (+/-)\",\n            \"color\": \"Joy factors\",\n            \"label\": \"Value 5 (+/-)\"\n        },\n        \"title\": \"Grouped Column Chart\"\n    },\n    style: {\n        \"plot\": {\n            \"marker\": {\n                \"label\": {\n                    \"fontSize\": 6,\n                    \"orientation\": \"vertical\",\n                    \"angle\": -3.14\n                }\n            }\n        }\n    }\n});</code></pre>"},{"location":"examples/static/column_stacked_rectangle_1dis_1con/","title":"Single Stacked Column Chart","text":"Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport {\n    data\n} from 'https://lib.vizzuhq.com/0.7/assets/data/chart_types_eu.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data\n})</code></pre> <pre><code>chart.animate({\n    config: {\n        \"channels\": {\n            \"y\": [\n                \"Joy factors\",\n                \"Value 2 (+)\"\n            ],\n            \"color\": \"Joy factors\",\n            \"label\": \"Value 2 (+)\"\n        },\n        \"title\": \"Single Stacked Column Chart\"\n    }\n});</code></pre>"},{"location":"examples/static/column_stacked_rectangle_negative_2dis_1con/","title":"Stacked Column Chart","text":"Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport {\n    data\n} from 'https://lib.vizzuhq.com/0.7/assets/data/chart_types_eu.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data\n})</code></pre> <pre><code>chart.animate({\n    config: {\n        \"channels\": {\n            \"x\": \"Country\",\n            \"y\": [\n                \"Joy factors\",\n                \"Value 2 (+)\"\n            ],\n            \"color\": \"Joy factors\",\n            \"label\": \"Value 2 (+)\"\n        },\n        \"title\": \"Stacked Column Chart\"\n    },\n    style: {\n        \"plot\": {\n            \"xAxis\": {\n                \"label\": {\n                    \"angle\": 2.3\n                }\n            },\n            \"marker\": {\n                \"label\": {\n                    \"fontSize\": 7,\n                    \"orientation\": \"vertical\",\n                    \"angle\": -3.14\n                }\n            }\n        }\n    }\n});</code></pre>"},{"location":"examples/static/coxcomb_stacked_rectangle_2dis_1con/","title":"Coxcomb Chart","text":"Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport {\n    data\n} from 'https://lib.vizzuhq.com/0.7/assets/data/chart_types_eu.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data\n})</code></pre> <pre><code>chart.animate({\n    config: {\n        \"channels\": {\n            \"x\": \"Year\",\n            \"y\": [\n                \"Joy factors\",\n                \"Value 2 (+)\"\n            ],\n            \"color\": \"Joy factors\"\n        },\n        \"title\": \"Coxcomb Chart\",\n        \"coordSystem\": \"polar\"\n    }\n});</code></pre>"},{"location":"examples/static/donut_rectangle_1dis_1con/","title":"Donut Chart","text":"Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport {\n    data\n} from 'https://lib.vizzuhq.com/0.7/assets/data/chart_types_eu.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data\n})</code></pre> <pre><code>chart.animate({\n    config: {\n        \"channels\": {\n            \"x\": [\n                \"Joy factors\",\n                \"Value 2 (+)\"\n            ],\n            \"y\": {\n                \"range\": {\n                    \"min\": \"-200%\"\n                }\n            },\n            \"color\": \"Joy factors\",\n            \"label\": \"Value 2 (+)\"\n        },\n        \"title\": \"Donut Chart\",\n        \"coordSystem\": \"polar\"\n    }\n});</code></pre>"},{"location":"examples/static/dotplot_circle_negative_1dis_1con/","title":"Dot Plot","text":"Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport {\n    data\n} from 'https://lib.vizzuhq.com/0.7/assets/data/chart_types_eu.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data\n})</code></pre> <pre><code>chart.animate({\n    config: {\n        \"channels\": {\n            \"x\": [\n                \"Year\",\n                \"Value 5 (+/-)\"\n            ]\n        },\n        \"title\": \"Dot Plot\",\n        \"geometry\": \"circle\"\n    }\n});</code></pre>"},{"location":"examples/static/histogram_rectangle_negative_1dis_1con/","title":"Histogram","text":"Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport {\n    data\n} from 'https://lib.vizzuhq.com/0.7/assets/data/chart_types_eu.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data\n})</code></pre> <pre><code>chart.animate({\n    config: {\n        \"channels\": {\n            \"x\": \"Year\",\n            \"y\": \"Value 5 (+/-)\",\n            \"label\": \"Value 5 (+/-)\"\n        },\n        \"title\": \"Histogram\",\n        \"align\": \"none\"\n    },\n    style: {\n        \"plot.marker.rectangleSpacing\": 0.07\n    }\n});</code></pre>"},{"location":"examples/static/line_negative_1dis_1con/","title":"Single Line Chart","text":"Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport {\n    data\n} from 'https://lib.vizzuhq.com/0.7/assets/data/chart_types_eu.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data\n})</code></pre> <pre><code>chart.animate({\n    config: {\n        \"channels\": {\n            \"x\": \"Year\",\n            \"y\": \"Value 5 (+/-)\",\n            \"label\": \"Value 5 (+/-)\"\n        },\n        \"title\": \"Single Line Chart\",\n        \"geometry\": \"line\"\n    }\n});</code></pre>"},{"location":"examples/static/line_negative_2dis_1con/","title":"Line Chart","text":"Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport {\n    data\n} from 'https://lib.vizzuhq.com/0.7/assets/data/chart_types_eu.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data\n})</code></pre> <pre><code>chart.animate({\n    config: {\n        \"channels\": {\n            \"x\": \"Year\",\n            \"y\": \"Value 5 (+/-)\",\n            \"color\": \"Country\"\n        },\n        \"title\": \"Line Chart\",\n        \"geometry\": \"line\"\n    }\n});</code></pre>"},{"location":"examples/static/marimekko_rectangle_2dis_2con/","title":"Marimekko Chart","text":"Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport {\n    data_4\n} from 'https://lib.vizzuhq.com/0.7/assets/data/chart_types_eu.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data_4\n})</code></pre> <pre><code>chart.animate({\n    config: {\n        \"channels\": {\n            \"x\": [\n                \"Country\",\n                \"Value 2 (+)\"\n            ],\n            \"y\": [\n                \"Joy factors\",\n                \"Value 3 (+)\"\n            ],\n            \"color\": \"Joy factors\",\n            \"label\": [\n                \"Country\",\n                \"Value 2 (+)\"\n            ]\n        },\n        \"title\": \"Marimekko Chart\",\n        \"align\": \"stretch\",\n        \"orientation\": \"horizontal\"\n    },\n    style: {\n        \"plot\": {\n            \"marker\": {\n                \"label\": {\n                    \"format\": \"dimensionsFirst\",\n                    \"fontSize\": \"0.7em\"\n                }\n            }\n        }\n    }\n});</code></pre>"},{"location":"examples/static/mekko_rectangle_1dis_2con/","title":"Mekko Chart","text":"Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport {\n    data_4\n} from 'https://lib.vizzuhq.com/0.7/assets/data/chart_types_eu.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data_4\n})</code></pre> <pre><code>chart.animate({\n    config: {\n        \"channels\": {\n            \"x\": [\n                \"Country\",\n                \"Value 2 (+)\"\n            ],\n            \"y\": {\n                \"set\": [\n                    \"Value 1 (+)\"\n                ],\n                \"range\": {\n                    \"max\": \"110%\"\n                }\n            },\n            \"color\": \"Country\",\n            \"label\": [\n                \"Value 2 (+)\",\n                \"Country\"\n            ]\n        },\n        \"title\": \"Mekko Chart\"\n    }\n});</code></pre>"},{"location":"examples/static/pie_rectangle_1dis_1con/","title":"Pie Chart","text":"Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport {\n    data\n} from 'https://lib.vizzuhq.com/0.7/assets/data/chart_types_eu.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data\n})</code></pre> <pre><code>chart.animate({\n    config: {\n        \"channels\": {\n            \"x\": [\n                \"Joy factors\",\n                \"Value 2 (+)\"\n            ],\n            \"color\": \"Joy factors\",\n            \"label\": \"Value 2 (+)\"\n        },\n        \"title\": \"Pie Chart\",\n        \"coordSystem\": \"polar\"\n    }\n});</code></pre>"},{"location":"examples/static/radial_rectangle_1dis_1con/","title":"Radial Bar Chart","text":"Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport {\n    data\n} from 'https://lib.vizzuhq.com/0.7/assets/data/chart_types_eu.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data\n})</code></pre> <pre><code>chart.animate({\n    config: {\n        \"channels\": {\n            \"x\": \"Value 2 (+)\",\n            \"y\": {\n                \"set\": [\n                    \"Joy factors\"\n                ],\n                \"range\": {\n                    \"min\": \"-30%\"\n                }\n            },\n            \"color\": \"Joy factors\",\n            \"label\": \"Value 2 (+)\"\n        },\n        \"title\": \"Radial Bar Chart\",\n        \"coordSystem\": \"polar\"\n    }\n});</code></pre>"},{"location":"examples/static/radial_stacked_rectangle_2dis_1con/","title":"Stacked Radial Bar Chart","text":"Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport {\n    data\n} from 'https://lib.vizzuhq.com/0.7/assets/data/chart_types_eu.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data\n})</code></pre> <pre><code>chart.animate({\n    config: {\n        \"channels\": {\n            \"x\": [\n                \"Country\",\n                \"Value 2 (+)\"\n            ],\n            \"y\": {\n                \"set\": [\n                    \"Year\"\n                ],\n                \"range\": {\n                    \"min\": \"-20%\"\n                }\n            },\n            \"color\": \"Country\",\n            \"lightness\": \"Year\"\n        },\n        \"title\": \"Stacked Radial Bar Chart\",\n        \"coordSystem\": \"polar\"\n    }\n});</code></pre>"},{"location":"examples/static/scatterplot_circle_negative_1dis_2con/","title":"Scatter Plot","text":"Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport {\n    data\n} from 'https://lib.vizzuhq.com/0.7/assets/data/chart_types_eu.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data\n})</code></pre> <pre><code>chart.animate({\n    config: {\n        \"channels\": {\n            \"x\": \"Value 6 (+/-)\",\n            \"y\": \"Value 5 (+/-)\",\n            \"noop\": \"Year\",\n            \"label\": \"Year\"\n        },\n        \"title\": \"Scatter Plot\",\n        \"geometry\": \"circle\"\n    }\n});</code></pre>"},{"location":"examples/static/scatterplot_circle_negative_2dis_3con/","title":"Bubble Plot","text":"Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport {\n    data\n} from 'https://lib.vizzuhq.com/0.7/assets/data/chart_types_eu.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data\n})</code></pre> <pre><code>chart.animate({\n    config: {\n        \"channels\": {\n            \"x\": \"Value 6 (+/-)\",\n            \"y\": \"Value 5 (+/-)\",\n            \"color\": \"Country\",\n            \"size\": \"Value 4 (+/-)\",\n            \"label\": \"Value 5 (+/-)\"\n        },\n        \"title\": \"Bubble Plot\",\n        \"geometry\": \"circle\"\n    }\n});</code></pre>"},{"location":"examples/static/spiderweb_area_1dis_1con/","title":"Polar Area Chart","text":"Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport {\n    data\n} from 'https://lib.vizzuhq.com/0.7/assets/data/chart_types_eu.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data\n})</code></pre> <pre><code>chart.animate({\n    config: {\n        \"channels\": {\n            \"x\": \"Year\",\n            \"y\": {\n                \"set\": [\n                    \"Value 2 (+)\"\n                ],\n                \"range\": {\n                    \"max\": \"130%\"\n                }\n            },\n            \"label\": \"Value 2 (+)\"\n        },\n        \"title\": \"Polar Area Chart\",\n        \"geometry\": \"area\",\n        \"coordSystem\": \"polar\"\n    },\n    style: {\n        \"plot\": {\n            \"marker\": {\n                \"label\": {\n                    \"orientation\": \"tangential\",\n                    \"angle\": -1.57\n                }\n            }\n        }\n    }\n});</code></pre>"},{"location":"examples/static/spiderweb_line_1dis_1con/","title":"Polar Single Line Chart","text":"Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport {\n    data\n} from 'https://lib.vizzuhq.com/0.7/assets/data/chart_types_eu.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data\n})</code></pre> <pre><code>chart.animate({\n    config: {\n        \"channels\": {\n            \"x\": \"Year\",\n            \"y\": {\n                \"set\": [\n                    \"Value 2 (+)\"\n                ],\n                \"range\": {\n                    \"max\": \"130%\"\n                }\n            },\n            \"label\": \"Value 2 (+)\"\n        },\n        \"title\": \"Polar Single Line Chart\",\n        \"geometry\": \"line\",\n        \"coordSystem\": \"polar\"\n    },\n    style: {\n        \"plot\": {\n            \"marker\": {\n                \"label\": {\n                    \"orientation\": \"tangential\",\n                    \"angle\": -1.57\n                }\n            }\n        }\n    }\n});</code></pre>"},{"location":"examples/static/stacked_area_2dis_1con/","title":"Stacked Area Chart","text":"Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport {\n    data\n} from 'https://lib.vizzuhq.com/0.7/assets/data/chart_types_eu.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data\n})</code></pre> <pre><code>chart.animate({\n    config: {\n        \"channels\": {\n            \"x\": \"Year\",\n            \"y\": [\n                \"Country\",\n                \"Value 2 (+)\"\n            ],\n            \"color\": \"Country\"\n        },\n        \"title\": \"Stacked Area Chart\",\n        \"geometry\": \"area\"\n    }\n});</code></pre>"},{"location":"examples/static/stacked_mekko_rectangle_2dis_2con/","title":"Stacked Mekko Chart","text":"Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport {\n    data_4\n} from 'https://lib.vizzuhq.com/0.7/assets/data/chart_types_eu.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data_4\n})</code></pre> <pre><code>chart.animate({\n    config: {\n        \"channels\": {\n            \"x\": [\n                \"Country\",\n                \"Value 2 (+)\"\n            ],\n            \"y\": {\n                \"set\": [\n                    \"Joy factors\",\n                    \"Value 3 (+)\"\n                ],\n                \"range\": {\n                    \"max\": \"110%\"\n                }\n            },\n            \"color\": \"Joy factors\",\n            \"label\": [\n                \"Value 2 (+)\",\n                \"Country\"\n            ]\n        },\n        \"title\": \"Stacked Mekko Chart\",\n        \"orientation\": \"horizontal\"\n    }\n});</code></pre>"},{"location":"examples/static/stream_stacked_area_3dis_1con/","title":"Stacked Streamgraph","text":"Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport {\n    data\n} from 'https://lib.vizzuhq.com/0.7/assets/data/chart_types_eu.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data\n})</code></pre> <pre><code>chart.animate({\n    config: {\n        \"channels\": {\n            \"x\": [\n                \"Year\",\n                \"Joy factors\"\n            ],\n            \"y\": [\n                \"Value 3 (+)\",\n                \"Country_code\"\n            ],\n            \"color\": \"Country_code\"\n        },\n        \"title\": \"Stacked Streamgraph\",\n        \"geometry\": \"area\",\n        \"align\": \"center\"\n    }\n});</code></pre>"},{"location":"examples/static/treemap_rectangle_1dis_1con/","title":"Treemap","text":"Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport {\n    data\n} from 'https://lib.vizzuhq.com/0.7/assets/data/chart_types_eu.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data\n})</code></pre> <pre><code>chart.animate({\n    config: {\n        \"channels\": {\n            \"label\": \"Country_code\",\n            \"size\": \"Value 2 (+)\"\n        },\n        \"title\": \"Treemap\"\n    }\n});</code></pre>"},{"location":"examples/static/treemap_rectangle_2dis_2con/","title":"Stacked Treemap","text":"Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport {\n    data\n} from 'https://lib.vizzuhq.com/0.7/assets/data/chart_types_eu.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data\n})</code></pre> <pre><code>chart.animate({\n    config: {\n        \"channels\": {\n            \"color\": \"Joy factors\",\n            \"size\": [\n                \"Value 2 (+)\",\n                \"Country_code\"\n            ],\n            \"label\": \"Country_code\",\n            \"lightness\": \"Value 2 (+)\"\n        },\n        \"title\": \"Stacked Treemap\"\n    }\n});</code></pre>"},{"location":"examples/static/waterfall_rectangle_negative_1dis_1con/","title":"Waterfall Chart","text":"Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport {\n    data\n} from 'https://lib.vizzuhq.com/0.7/assets/data/chart_types_eu.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data\n})</code></pre> <pre><code>chart.animate({\n    config: {\n        \"channels\": {\n            \"x\": \"Year\",\n            \"y\": [\n                \"Year\",\n                \"Value 5 (+/-)\"\n            ],\n            \"label\": \"Value 5 (+/-)\"\n        },\n        \"title\": \"Waterfall Chart\",\n        \"legend\": null\n    },\n    style: {\n        \"plot\": {\n            \"marker\": {\n                \"label\": {\n                    \"position\": \"top\"\n                }\n            }\n        }\n    }\n});</code></pre>"},{"location":"reference/","title":"Code reference","text":"<p>Vizzu / Modules</p>"},{"location":"reference/#vizzu-js-library-reference","title":"Vizzu JS Library Reference","text":"<p>This is the API reference document of the <code>Vizzu</code> <code>JS</code> library. It provides information about every detail of the API. This works best for users who already have a basic understanding of the <code>Vizzu</code> library and its logic.</p> <p>In case you're just getting started with <code>Vizzu</code>, we strongly recommend visiting our Tutorial first.</p>"},{"location":"reference/#library-overview","title":"Library Overview","text":"<p>The main entry point of the library is the Vizzu class, and its most important component is the animate method:</p> <ul> <li>Vizzu class<ul> <li>constructor()</li> <li>animate (   Anim.Target ,   Anim.Options ) :   Anim.Completing</li> </ul> </li> </ul> <p>The <code>animate</code> method's main parameter is the Anim.Target interface, which contains the configuration of the chart, the underlying data, and the chart's style settings:</p> <ul> <li>Anim.Target<ul> <li>Data.Set</li> <li>Config.Chart<ul> <li>Config.Channels</li> </ul> </li> <li>Styles.Chart<ul> <li>Styles.Plot<ul> <li>Styles.Marker</li> <li>Styles.Axis</li> </ul> </li> <li>Styles.Legend</li> <li>Styles.Tooltip</li> </ul> </li> </ul> </li> </ul>"},{"location":"reference/#details","title":"Details","text":"<p>You can find all interface declarations and types under these namespaces.</p> <ul> <li>Data - Data structure and operations</li> <li>Config - Configuration settings of your charts</li> <li>Style - Style settings</li> <li>Anim - Animation settings</li> <li>Events - Event handling</li> <li>Presets - Preset chart configurations</li> </ul>"},{"location":"reference/modules/","title":"Modules","text":"<p>Vizzu / Modules</p>"},{"location":"reference/modules/#vizzu","title":"Vizzu","text":""},{"location":"reference/modules/#modules","title":"Modules","text":"<ul> <li>presets</li> <li>vizzu</li> </ul>"},{"location":"reference/classes/presets.Presets/","title":"presets.Presets","text":"<p>Vizzu / Modules / presets / Presets</p>"},{"location":"reference/classes/presets.Presets/#class-presets","title":"Class: Presets","text":"<p>presets.Presets</p> <p>Collection of factory functions for creating preset chart configs.</p>"},{"location":"reference/classes/presets.Presets/#constructors","title":"Constructors","text":""},{"location":"reference/classes/presets.Presets/#constructor","title":"constructor","text":"<p>\u2022 new Presets()</p>"},{"location":"reference/classes/presets.Presets/#methods","title":"Methods","text":""},{"location":"reference/classes/presets.Presets/#area","title":"area","text":"<p>\u25b8 area(<code>config</code>): <code>any</code></p> <p>Parameters</p> Name Type <code>config</code> <code>Area</code> <p>Returns</p> <p><code>any</code></p>"},{"location":"reference/classes/presets.Presets/#bar","title":"bar","text":"<p>\u25b8 bar(<code>config</code>): <code>any</code></p> <p>Parameters</p> Name Type <code>config</code> <code>Bar</code> <p>Returns</p> <p><code>any</code></p>"},{"location":"reference/classes/presets.Presets/#bubble","title":"bubble","text":"<p>\u25b8 bubble(<code>config</code>): <code>any</code></p> <p>Parameters</p> Name Type <code>config</code> <code>Bubble</code> <p>Returns</p> <p><code>any</code></p>"},{"location":"reference/classes/presets.Presets/#bubbleplot","title":"bubbleplot","text":"<p>\u25b8 bubbleplot(<code>config</code>): <code>any</code></p> <p>Parameters</p> Name Type <code>config</code> <code>Bubbleplot</code> <p>Returns</p> <p><code>any</code></p>"},{"location":"reference/classes/presets.Presets/#column","title":"column","text":"<p>\u25b8 column(<code>config</code>): <code>any</code></p> <p>Parameters</p> Name Type <code>config</code> <code>Column</code> <p>Returns</p> <p><code>any</code></p>"},{"location":"reference/classes/presets.Presets/#donut","title":"donut","text":"<p>\u25b8 donut(<code>config</code>): <code>any</code></p> <p>Parameters</p> Name Type <code>config</code> <code>Donut</code> <p>Returns</p> <p><code>any</code></p>"},{"location":"reference/classes/presets.Presets/#groupedbar","title":"groupedBar","text":"<p>\u25b8 groupedBar(<code>config</code>): <code>any</code></p> <p>Parameters</p> Name Type <code>config</code> <code>GroupedBar</code> <p>Returns</p> <p><code>any</code></p>"},{"location":"reference/classes/presets.Presets/#groupedcolumn","title":"groupedColumn","text":"<p>\u25b8 groupedColumn(<code>config</code>): <code>any</code></p> <p>Parameters</p> Name Type <code>config</code> <code>GroupedColumn</code> <p>Returns</p> <p><code>any</code></p>"},{"location":"reference/classes/presets.Presets/#heatmap","title":"heatmap","text":"<p>\u25b8 heatmap(<code>config</code>): <code>any</code></p> <p>Parameters</p> Name Type <code>config</code> <code>Heatmap</code> <p>Returns</p> <p><code>any</code></p>"},{"location":"reference/classes/presets.Presets/#line","title":"line","text":"<p>\u25b8 line(<code>config</code>): <code>any</code></p> <p>Parameters</p> Name Type <code>config</code> <code>Line</code> <p>Returns</p> <p><code>any</code></p>"},{"location":"reference/classes/presets.Presets/#lollipop","title":"lollipop","text":"<p>\u25b8 lollipop(<code>config</code>): <code>any</code></p> <p>Parameters</p> Name Type <code>config</code> <code>Lollipop</code> <p>Returns</p> <p><code>any</code></p>"},{"location":"reference/classes/presets.Presets/#marimekko","title":"marimekko","text":"<p>\u25b8 marimekko(<code>config</code>): <code>any</code></p> <p>Parameters</p> Name Type <code>config</code> <code>Marimekko</code> <p>Returns</p> <p><code>any</code></p>"},{"location":"reference/classes/presets.Presets/#mekko","title":"mekko","text":"<p>\u25b8 mekko(<code>config</code>): <code>any</code></p> <p>Parameters</p> Name Type <code>config</code> <code>Mekko</code> <p>Returns</p> <p><code>any</code></p>"},{"location":"reference/classes/presets.Presets/#nesteddonut","title":"nestedDonut","text":"<p>\u25b8 nestedDonut(<code>config</code>): <code>any</code></p> <p>Parameters</p> Name Type <code>config</code> <code>NestedDonut</code> <p>Returns</p> <p><code>any</code></p>"},{"location":"reference/classes/presets.Presets/#percentagearea","title":"percentageArea","text":"<p>\u25b8 percentageArea(<code>config</code>): <code>any</code></p> <p>Parameters</p> Name Type <code>config</code> <code>PercentageArea</code> <p>Returns</p> <p><code>any</code></p>"},{"location":"reference/classes/presets.Presets/#percentagebar","title":"percentageBar","text":"<p>\u25b8 percentageBar(<code>config</code>): <code>any</code></p> <p>Parameters</p> Name Type <code>config</code> <code>PercentageBar</code> <p>Returns</p> <p><code>any</code></p>"},{"location":"reference/classes/presets.Presets/#percentagecolumn","title":"percentageColumn","text":"<p>\u25b8 percentageColumn(<code>config</code>): <code>any</code></p> <p>Parameters</p> Name Type <code>config</code> <code>PercentageColumn</code> <p>Returns</p> <p><code>any</code></p>"},{"location":"reference/classes/presets.Presets/#pie","title":"pie","text":"<p>\u25b8 pie(<code>config</code>): <code>any</code></p> <p>Parameters</p> Name Type <code>config</code> <code>Pie</code> <p>Returns</p> <p><code>any</code></p>"},{"location":"reference/classes/presets.Presets/#polarcolumn","title":"polarColumn","text":"<p>\u25b8 polarColumn(<code>config</code>): <code>any</code></p> <p>Parameters</p> Name Type <code>config</code> <code>PolarColumn</code> <p>Returns</p> <p><code>any</code></p>"},{"location":"reference/classes/presets.Presets/#polarline","title":"polarLine","text":"<p>\u25b8 polarLine(<code>config</code>): <code>any</code></p> <p>Parameters</p> Name Type <code>config</code> <code>PolarLine</code> <p>Returns</p> <p><code>any</code></p>"},{"location":"reference/classes/presets.Presets/#polarscatter","title":"polarScatter","text":"<p>\u25b8 polarScatter(<code>config</code>): <code>any</code></p> <p>Parameters</p> Name Type <code>config</code> <code>PolarScatter</code> <p>Returns</p> <p><code>any</code></p>"},{"location":"reference/classes/presets.Presets/#polarstackedcolumn","title":"polarStackedColumn","text":"<p>\u25b8 polarStackedColumn(<code>config</code>): <code>any</code></p> <p>Parameters</p> Name Type <code>config</code> <code>PolarStackedColumn</code> <p>Returns</p> <p><code>any</code></p>"},{"location":"reference/classes/presets.Presets/#radialbar","title":"radialBar","text":"<p>\u25b8 radialBar(<code>config</code>): <code>any</code></p> <p>Parameters</p> Name Type <code>config</code> <code>RadialBar</code> <p>Returns</p> <p><code>any</code></p>"},{"location":"reference/classes/presets.Presets/#radialstackedbar","title":"radialStackedBar","text":"<p>\u25b8 radialStackedBar(<code>config</code>): <code>any</code></p> <p>Parameters</p> Name Type <code>config</code> <code>RadialStackedBar</code> <p>Returns</p> <p><code>any</code></p>"},{"location":"reference/classes/presets.Presets/#scatter","title":"scatter","text":"<p>\u25b8 scatter(<code>config</code>): <code>any</code></p> <p>Parameters</p> Name Type <code>config</code> <code>Scatter</code> <p>Returns</p> <p><code>any</code></p>"},{"location":"reference/classes/presets.Presets/#splittedarea","title":"splittedArea","text":"<p>\u25b8 splittedArea(<code>config</code>): <code>any</code></p> <p>Parameters</p> Name Type <code>config</code> <code>SplittedArea</code> <p>Returns</p> <p><code>any</code></p>"},{"location":"reference/classes/presets.Presets/#splittedbar","title":"splittedBar","text":"<p>\u25b8 splittedBar(<code>config</code>): <code>any</code></p> <p>Parameters</p> Name Type <code>config</code> <code>SplittedBar</code> <p>Returns</p> <p><code>any</code></p>"},{"location":"reference/classes/presets.Presets/#splittedcolumn","title":"splittedColumn","text":"<p>\u25b8 splittedColumn(<code>config</code>): <code>any</code></p> <p>Parameters</p> Name Type <code>config</code> <code>SplittedColumn</code> <p>Returns</p> <p><code>any</code></p>"},{"location":"reference/classes/presets.Presets/#stackedarea","title":"stackedArea","text":"<p>\u25b8 stackedArea(<code>config</code>): <code>any</code></p> <p>Parameters</p> Name Type <code>config</code> <code>StackedArea</code> <p>Returns</p> <p><code>any</code></p>"},{"location":"reference/classes/presets.Presets/#stackedbar","title":"stackedBar","text":"<p>\u25b8 stackedBar(<code>config</code>): <code>any</code></p> <p>Parameters</p> Name Type <code>config</code> <code>StackedBar</code> <p>Returns</p> <p><code>any</code></p>"},{"location":"reference/classes/presets.Presets/#stackedbubble","title":"stackedBubble","text":"<p>\u25b8 stackedBubble(<code>config</code>): <code>any</code></p> <p>Parameters</p> Name Type <code>config</code> <code>StackedBubble</code> <p>Returns</p> <p><code>any</code></p>"},{"location":"reference/classes/presets.Presets/#stackedcolumn","title":"stackedColumn","text":"<p>\u25b8 stackedColumn(<code>config</code>): <code>any</code></p> <p>Parameters</p> Name Type <code>config</code> <code>StackedColumn</code> <p>Returns</p> <p><code>any</code></p>"},{"location":"reference/classes/presets.Presets/#stackedtreemap","title":"stackedTreemap","text":"<p>\u25b8 stackedTreemap(<code>config</code>): <code>any</code></p> <p>Parameters</p> Name Type <code>config</code> <code>StackedTreemap</code> <p>Returns</p> <p><code>any</code></p>"},{"location":"reference/classes/presets.Presets/#stream","title":"stream","text":"<p>\u25b8 stream(<code>config</code>): <code>any</code></p> <p>Parameters</p> Name Type <code>config</code> <code>Stream</code> <p>Returns</p> <p><code>any</code></p>"},{"location":"reference/classes/presets.Presets/#treemap","title":"treemap","text":"<p>\u25b8 treemap(<code>config</code>): <code>any</code></p> <p>Parameters</p> Name Type <code>config</code> <code>Treemap</code> <p>Returns</p> <p><code>any</code></p>"},{"location":"reference/classes/presets.Presets/#variableradiuspie","title":"variableRadiusPie","text":"<p>\u25b8 variableRadiusPie(<code>config</code>): <code>any</code></p> <p>Parameters</p> Name Type <code>config</code> <code>VariableRadiusPie</code> <p>Returns</p> <p><code>any</code></p>"},{"location":"reference/classes/presets.Presets/#verticalline","title":"verticalLine","text":"<p>\u25b8 verticalLine(<code>config</code>): <code>any</code></p> <p>Parameters</p> Name Type <code>config</code> <code>VerticalLine</code> <p>Returns</p> <p><code>any</code></p>"},{"location":"reference/classes/presets.Presets/#verticalstream","title":"verticalStream","text":"<p>\u25b8 verticalStream(<code>config</code>): <code>any</code></p> <p>Parameters</p> Name Type <code>config</code> <code>VerticalStream</code> <p>Returns</p> <p><code>any</code></p>"},{"location":"reference/classes/presets.Presets/#verticalviolin","title":"verticalViolin","text":"<p>\u25b8 verticalViolin(<code>config</code>): <code>any</code></p> <p>Parameters</p> Name Type <code>config</code> <code>VerticalViolin</code> <p>Returns</p> <p><code>any</code></p>"},{"location":"reference/classes/presets.Presets/#violin","title":"violin","text":"<p>\u25b8 violin(<code>config</code>): <code>any</code></p> <p>Parameters</p> Name Type <code>config</code> <code>Violin</code> <p>Returns</p> <p><code>any</code></p>"},{"location":"reference/classes/presets.Presets/#waterfall","title":"waterfall","text":"<p>\u25b8 waterfall(<code>config</code>): <code>any</code></p> <p>Parameters</p> Name Type <code>config</code> <code>Waterfall</code> <p>Returns</p> <p><code>any</code></p>"},{"location":"reference/classes/vizzu.Vizzu/","title":"vizzu.Vizzu","text":"<p>Vizzu / Modules / vizzu / Vizzu</p>"},{"location":"reference/classes/vizzu.Vizzu/#class-vizzu","title":"Class: Vizzu","text":"<p>vizzu.Vizzu</p> <p>Class representing a single chart in Vizzu.</p>"},{"location":"reference/classes/vizzu.Vizzu/#constructors","title":"Constructors","text":""},{"location":"reference/classes/vizzu.Vizzu/#constructor","title":"constructor","text":"<p>\u2022 new Vizzu(<code>container</code>, <code>initState?</code>)</p> <p>Creates a new chart and connects it to the div or canvas HTML element specified by its ID or DOM object. The new chart is empty by default, but can be set to an initial state in the second optional parameter.</p> <p>Parameters</p> Name Type <code>container</code> <code>string</code> | <code>HTMLElement</code> <code>initState?</code> <code>Chart</code> | <code>Target</code>"},{"location":"reference/classes/vizzu.Vizzu/#properties","title":"Properties","text":""},{"location":"reference/classes/vizzu.Vizzu/#config","title":"config","text":"<p>\u2022 config: <code>Readonly</code>\\&lt;<code>Chart</code>&gt;</p> <p>Property for read-only access to chart parameter object.</p>"},{"location":"reference/classes/vizzu.Vizzu/#data","title":"data","text":"<p>\u2022 data: <code>Readonly</code>\\&lt;<code>Metainfo</code>&gt;</p> <p>Property for read-only access to data metainfo object.</p>"},{"location":"reference/classes/vizzu.Vizzu/#initializing","title":"initializing","text":"<p>\u2022 initializing: <code>Promise</code>\\&lt;<code>Vizzu</code>&gt;</p> <p>Promise representing the initialization will resolve when initialization is finished. Any API call will potentially cause an error before this promise is resolved.</p>"},{"location":"reference/classes/vizzu.Vizzu/#style","title":"style","text":"<p>\u2022 style: <code>Readonly</code>\\&lt;<code>Chart</code>&gt;</p> <p>Property for read-only access to style object without default values.</p>"},{"location":"reference/classes/vizzu.Vizzu/#accessors","title":"Accessors","text":""},{"location":"reference/classes/vizzu.Vizzu/#animation","title":"animation","text":"<p>\u2022 <code>get</code> animation(): <code>Control</code></p> <p>Returns controls for the ongoing animation, if any.</p> <p><code>Deprecated</code></p> <p>since version 0.4.0</p> <p>Returns</p> <p><code>Control</code></p>"},{"location":"reference/classes/vizzu.Vizzu/#presets","title":"presets","text":"<p>\u2022 <code>Static</code> <code>get</code> presets(): <code>Preset</code></p> <p>Returns the chart preset collection.</p> <p>Returns</p> <p><code>Preset</code></p>"},{"location":"reference/classes/vizzu.Vizzu/#methods","title":"Methods","text":""},{"location":"reference/classes/vizzu.Vizzu/#animate","title":"animate","text":"<p>\u25b8 animate(<code>animTarget</code>, <code>animOptions?</code>): <code>Completing</code></p> <p>Initiates the animation either to the new chart state passed as the first argument, or through a sequence of keyframe charts passed as the first argument. If there is a currently running animation, all subsequent calls will schedule the corresponding animation after the end of the previous one.</p> <p>The new chart state or keyframe can be a full state specifier object with data, config and style, or a single chart config object. It accepts also a chart snapshot acquired from a previous state using the store() method of this class or a whole previous animation acquired using the store() method of the Anim.Control object, which can be queried from the promise returned by the animate() method.</p> <p>The optional second parameter specifies the animation control options and also all the other animation options in case of only a single chart state passed as the first argument. This second option can be a scalar value, setting the overall animation duration. Passing explicit null as second parameter will result in no animation.</p> <p>The method returns a promise, which will resolve when the animation is finished. Since there can be multiple animations in the queue, the result promise provides a nested promise member activated, which resolves when the requested animation gets active.</p> <p>Parameters</p> Name Type <code>animTarget</code> <code>Animation</code> | <code>LazyTarget</code> | <code>Keyframes</code> <code>animOptions?</code> <code>ControlOptions</code> | <code>Object</code> <p>Returns</p> <p><code>Completing</code></p>"},{"location":"reference/classes/vizzu.Vizzu/#detach","title":"detach","text":"<p>\u25b8 detach(): <code>void</code></p> <p>Removes the reference of the chart from every place it attached itself, this method must be called in order to get the chart properly garbage collected.</p> <p>Returns</p> <p><code>void</code></p>"},{"location":"reference/classes/vizzu.Vizzu/#feature","title":"feature","text":"<p>\u25b8 feature(<code>name</code>, <code>enabled</code>): <code>void</code></p> <p>Enable/disable additional features.</p> <p>Parameters</p> Name Type <code>name</code> <code>Feature</code> <code>enabled</code> <code>boolean</code> <p>Returns</p> <p><code>void</code></p>"},{"location":"reference/classes/vizzu.Vizzu/#getcomputedstyle","title":"getComputedStyle","text":"<p>\u25b8 getComputedStyle(): <code>Readonly</code>\\&lt;<code>Chart</code>&gt;</p> <p>Property for read-only access to the style object after setting defaults.</p> <p>Returns</p> <p><code>Readonly</code>\\&lt;<code>Chart</code>&gt;</p>"},{"location":"reference/classes/vizzu.Vizzu/#off","title":"off","text":"<p>\u25b8 off(<code>eventName</code>, <code>handler</code>): <code>void</code></p> <p>Uninstalls the provided event handler from the event specified by name.</p> <p>Parameters</p> Name Type <code>eventName</code> <code>Type</code> <code>handler</code> (<code>event</code>: <code>Object</code>) =&gt; <code>void</code> <p>Returns</p> <p><code>void</code></p>"},{"location":"reference/classes/vizzu.Vizzu/#on","title":"on","text":"<p>\u25b8 on(<code>eventName</code>, <code>handler</code>): <code>void</code></p> <p>Installs the provided event handler to the event specified by name.</p> <p>Parameters</p> Name Type <code>eventName</code> <code>Type</code> <code>handler</code> (<code>event</code>: <code>Object</code>) =&gt; <code>void</code> <p>Returns</p> <p><code>void</code></p>"},{"location":"reference/classes/vizzu.Vizzu/#store","title":"store","text":"<p>\u25b8 store(): <code>Snapshot</code></p> <p>Returns a reference to the actual chart state for further reuse. This reference includes the chart config, style parameters and the data filter but does not include the actual data and the animation options.</p> <p>Returns</p> <p><code>Snapshot</code></p>"},{"location":"reference/classes/vizzu.Vizzu/#version","title":"version","text":"<p>\u25b8 version(): <code>string</code></p> <p>Returns the version number of the library.</p> <p>Returns</p> <p><code>string</code></p>"},{"location":"reference/classes/vizzu.Vizzu/#options","title":"options","text":"<p>\u25b8 <code>Static</code> options(<code>options</code>): <code>void</code></p> <p>Setter method for Library options.</p> <p>Parameters</p> Name Type <code>options</code> <code>Options</code> <p>Returns</p> <p><code>void</code></p>"},{"location":"reference/interfaces/presets.Area/","title":"presets.Area","text":"<p>Vizzu / Modules / presets / Area</p>"},{"location":"reference/interfaces/presets.Area/#interface-area","title":"Interface: Area","text":"<p>presets.Area</p>"},{"location":"reference/interfaces/presets.Area/#hierarchy","title":"Hierarchy","text":"<ul> <li> <p><code>Preset</code></p> <p>\u21b3 <code>Area</code></p> </li> </ul>"},{"location":"reference/interfaces/presets.Area/#properties","title":"Properties","text":""},{"location":"reference/interfaces/presets.Area/#legend","title":"legend","text":"<p>\u2022 <code>Optional</code> legend: <code>\"color\"</code> | <code>\"size\"</code> | <code>\"lightness\"</code></p> <p>Inherited from</p> <p>Preset.legend</p>"},{"location":"reference/interfaces/presets.Area/#reverse","title":"reverse","text":"<p>\u2022 <code>Optional</code> reverse: <code>boolean</code></p> <p>Inherited from</p> <p>Preset.reverse</p>"},{"location":"reference/interfaces/presets.Area/#sort","title":"sort","text":"<p>\u2022 <code>Optional</code> sort: <code>\"none\"</code> | <code>\"byValue\"</code></p> <p>Inherited from</p> <p>Preset.sort</p>"},{"location":"reference/interfaces/presets.Area/#title","title":"title","text":"<p>\u2022 <code>Optional</code> title: <code>string</code></p> <p>Inherited from</p> <p>Preset.title</p>"},{"location":"reference/interfaces/presets.Area/#x","title":"x","text":"<p>\u2022 x: <code>string</code> | <code>string</code>[]</p>"},{"location":"reference/interfaces/presets.Area/#y","title":"y","text":"<p>\u2022 y: <code>string</code> | <code>string</code>[]</p>"},{"location":"reference/interfaces/presets.Bar/","title":"presets.Bar","text":"<p>Vizzu / Modules / presets / Bar</p>"},{"location":"reference/interfaces/presets.Bar/#interface-bar","title":"Interface: Bar","text":"<p>presets.Bar</p>"},{"location":"reference/interfaces/presets.Bar/#hierarchy","title":"Hierarchy","text":"<ul> <li> <p><code>Preset</code></p> <p>\u21b3 <code>Bar</code></p> </li> </ul>"},{"location":"reference/interfaces/presets.Bar/#properties","title":"Properties","text":""},{"location":"reference/interfaces/presets.Bar/#legend","title":"legend","text":"<p>\u2022 <code>Optional</code> legend: <code>\"color\"</code> | <code>\"size\"</code> | <code>\"lightness\"</code></p> <p>Inherited from</p> <p>Preset.legend</p>"},{"location":"reference/interfaces/presets.Bar/#reverse","title":"reverse","text":"<p>\u2022 <code>Optional</code> reverse: <code>boolean</code></p> <p>Inherited from</p> <p>Preset.reverse</p>"},{"location":"reference/interfaces/presets.Bar/#sort","title":"sort","text":"<p>\u2022 <code>Optional</code> sort: <code>\"none\"</code> | <code>\"byValue\"</code></p> <p>Inherited from</p> <p>Preset.sort</p>"},{"location":"reference/interfaces/presets.Bar/#title","title":"title","text":"<p>\u2022 <code>Optional</code> title: <code>string</code></p> <p>Inherited from</p> <p>Preset.title</p>"},{"location":"reference/interfaces/presets.Bar/#x","title":"x","text":"<p>\u2022 x: <code>string</code> | <code>string</code>[]</p>"},{"location":"reference/interfaces/presets.Bar/#y","title":"y","text":"<p>\u2022 y: <code>string</code> | <code>string</code>[]</p>"},{"location":"reference/interfaces/presets.Bubble/","title":"presets.Bubble","text":"<p>Vizzu / Modules / presets / Bubble</p>"},{"location":"reference/interfaces/presets.Bubble/#interface-bubble","title":"Interface: Bubble","text":"<p>presets.Bubble</p>"},{"location":"reference/interfaces/presets.Bubble/#hierarchy","title":"Hierarchy","text":"<ul> <li> <p><code>Preset</code></p> <p>\u21b3 <code>Bubble</code></p> </li> </ul>"},{"location":"reference/interfaces/presets.Bubble/#properties","title":"Properties","text":""},{"location":"reference/interfaces/presets.Bubble/#color","title":"color","text":"<p>\u2022 color: <code>string</code> | <code>string</code>[]</p>"},{"location":"reference/interfaces/presets.Bubble/#legend","title":"legend","text":"<p>\u2022 <code>Optional</code> legend: <code>\"color\"</code> | <code>\"size\"</code> | <code>\"lightness\"</code></p> <p>Inherited from</p> <p>Preset.legend</p>"},{"location":"reference/interfaces/presets.Bubble/#reverse","title":"reverse","text":"<p>\u2022 <code>Optional</code> reverse: <code>boolean</code></p> <p>Inherited from</p> <p>Preset.reverse</p>"},{"location":"reference/interfaces/presets.Bubble/#size","title":"size","text":"<p>\u2022 size: <code>string</code> | <code>string</code>[]</p>"},{"location":"reference/interfaces/presets.Bubble/#sort","title":"sort","text":"<p>\u2022 <code>Optional</code> sort: <code>\"none\"</code> | <code>\"byValue\"</code></p> <p>Inherited from</p> <p>Preset.sort</p>"},{"location":"reference/interfaces/presets.Bubble/#title","title":"title","text":"<p>\u2022 <code>Optional</code> title: <code>string</code></p> <p>Inherited from</p> <p>Preset.title</p>"},{"location":"reference/interfaces/presets.Bubbleplot/","title":"presets.Bubbleplot","text":"<p>Vizzu / Modules / presets / Bubbleplot</p>"},{"location":"reference/interfaces/presets.Bubbleplot/#interface-bubbleplot","title":"Interface: Bubbleplot","text":"<p>presets.Bubbleplot</p>"},{"location":"reference/interfaces/presets.Bubbleplot/#hierarchy","title":"Hierarchy","text":"<ul> <li> <p><code>Preset</code></p> <p>\u21b3 <code>Bubbleplot</code></p> </li> </ul>"},{"location":"reference/interfaces/presets.Bubbleplot/#properties","title":"Properties","text":""},{"location":"reference/interfaces/presets.Bubbleplot/#color","title":"color","text":"<p>\u2022 color: <code>string</code> | <code>string</code>[]</p>"},{"location":"reference/interfaces/presets.Bubbleplot/#dividedby","title":"dividedBy","text":"<p>\u2022 dividedBy: <code>string</code> | <code>string</code>[]</p>"},{"location":"reference/interfaces/presets.Bubbleplot/#legend","title":"legend","text":"<p>\u2022 <code>Optional</code> legend: <code>\"color\"</code> | <code>\"size\"</code> | <code>\"lightness\"</code></p> <p>Inherited from</p> <p>Preset.legend</p>"},{"location":"reference/interfaces/presets.Bubbleplot/#reverse","title":"reverse","text":"<p>\u2022 <code>Optional</code> reverse: <code>boolean</code></p> <p>Inherited from</p> <p>Preset.reverse</p>"},{"location":"reference/interfaces/presets.Bubbleplot/#size","title":"size","text":"<p>\u2022 size: <code>string</code> | <code>string</code>[]</p>"},{"location":"reference/interfaces/presets.Bubbleplot/#sort","title":"sort","text":"<p>\u2022 <code>Optional</code> sort: <code>\"none\"</code> | <code>\"byValue\"</code></p> <p>Inherited from</p> <p>Preset.sort</p>"},{"location":"reference/interfaces/presets.Bubbleplot/#title","title":"title","text":"<p>\u2022 <code>Optional</code> title: <code>string</code></p> <p>Inherited from</p> <p>Preset.title</p>"},{"location":"reference/interfaces/presets.Bubbleplot/#x","title":"x","text":"<p>\u2022 x: <code>string</code> | <code>string</code>[]</p>"},{"location":"reference/interfaces/presets.Bubbleplot/#y","title":"y","text":"<p>\u2022 y: <code>string</code> | <code>string</code>[]</p>"},{"location":"reference/interfaces/presets.Column/","title":"presets.Column","text":"<p>Vizzu / Modules / presets / Column</p>"},{"location":"reference/interfaces/presets.Column/#interface-column","title":"Interface: Column","text":"<p>presets.Column</p>"},{"location":"reference/interfaces/presets.Column/#hierarchy","title":"Hierarchy","text":"<ul> <li> <p><code>Preset</code></p> <p>\u21b3 <code>Column</code></p> </li> </ul>"},{"location":"reference/interfaces/presets.Column/#properties","title":"Properties","text":""},{"location":"reference/interfaces/presets.Column/#legend","title":"legend","text":"<p>\u2022 <code>Optional</code> legend: <code>\"color\"</code> | <code>\"size\"</code> | <code>\"lightness\"</code></p> <p>Inherited from</p> <p>Preset.legend</p>"},{"location":"reference/interfaces/presets.Column/#reverse","title":"reverse","text":"<p>\u2022 <code>Optional</code> reverse: <code>boolean</code></p> <p>Inherited from</p> <p>Preset.reverse</p>"},{"location":"reference/interfaces/presets.Column/#sort","title":"sort","text":"<p>\u2022 <code>Optional</code> sort: <code>\"none\"</code> | <code>\"byValue\"</code></p> <p>Inherited from</p> <p>Preset.sort</p>"},{"location":"reference/interfaces/presets.Column/#title","title":"title","text":"<p>\u2022 <code>Optional</code> title: <code>string</code></p> <p>Inherited from</p> <p>Preset.title</p>"},{"location":"reference/interfaces/presets.Column/#x","title":"x","text":"<p>\u2022 x: <code>string</code> | <code>string</code>[]</p>"},{"location":"reference/interfaces/presets.Column/#y","title":"y","text":"<p>\u2022 y: <code>string</code> | <code>string</code>[]</p>"},{"location":"reference/interfaces/presets.Donut/","title":"presets.Donut","text":"<p>Vizzu / Modules / presets / Donut</p>"},{"location":"reference/interfaces/presets.Donut/#interface-donut","title":"Interface: Donut","text":"<p>presets.Donut</p>"},{"location":"reference/interfaces/presets.Donut/#hierarchy","title":"Hierarchy","text":"<ul> <li> <p><code>Preset</code></p> <p>\u21b3 <code>Donut</code></p> </li> </ul>"},{"location":"reference/interfaces/presets.Donut/#properties","title":"Properties","text":""},{"location":"reference/interfaces/presets.Donut/#angle","title":"angle","text":"<p>\u2022 angle: <code>string</code> | <code>string</code>[]</p>"},{"location":"reference/interfaces/presets.Donut/#legend","title":"legend","text":"<p>\u2022 <code>Optional</code> legend: <code>\"color\"</code> | <code>\"size\"</code> | <code>\"lightness\"</code></p> <p>Inherited from</p> <p>Preset.legend</p>"},{"location":"reference/interfaces/presets.Donut/#reverse","title":"reverse","text":"<p>\u2022 <code>Optional</code> reverse: <code>boolean</code></p> <p>Inherited from</p> <p>Preset.reverse</p>"},{"location":"reference/interfaces/presets.Donut/#sort","title":"sort","text":"<p>\u2022 <code>Optional</code> sort: <code>\"none\"</code> | <code>\"byValue\"</code></p> <p>Inherited from</p> <p>Preset.sort</p>"},{"location":"reference/interfaces/presets.Donut/#stackedby","title":"stackedBy","text":"<p>\u2022 stackedBy: <code>string</code> | <code>string</code>[]</p>"},{"location":"reference/interfaces/presets.Donut/#title","title":"title","text":"<p>\u2022 <code>Optional</code> title: <code>string</code></p> <p>Inherited from</p> <p>Preset.title</p>"},{"location":"reference/interfaces/presets.GroupedBar/","title":"presets.GroupedBar","text":"<p>Vizzu / Modules / presets / GroupedBar</p>"},{"location":"reference/interfaces/presets.GroupedBar/#interface-groupedbar","title":"Interface: GroupedBar","text":"<p>presets.GroupedBar</p>"},{"location":"reference/interfaces/presets.GroupedBar/#hierarchy","title":"Hierarchy","text":"<ul> <li> <p><code>Preset</code></p> <p>\u21b3 <code>GroupedBar</code></p> </li> </ul>"},{"location":"reference/interfaces/presets.GroupedBar/#properties","title":"Properties","text":""},{"location":"reference/interfaces/presets.GroupedBar/#groupedby","title":"groupedBy","text":"<p>\u2022 groupedBy: <code>string</code> | <code>string</code>[]</p>"},{"location":"reference/interfaces/presets.GroupedBar/#legend","title":"legend","text":"<p>\u2022 <code>Optional</code> legend: <code>\"color\"</code> | <code>\"size\"</code> | <code>\"lightness\"</code></p> <p>Inherited from</p> <p>Preset.legend</p>"},{"location":"reference/interfaces/presets.GroupedBar/#reverse","title":"reverse","text":"<p>\u2022 <code>Optional</code> reverse: <code>boolean</code></p> <p>Inherited from</p> <p>Preset.reverse</p>"},{"location":"reference/interfaces/presets.GroupedBar/#sort","title":"sort","text":"<p>\u2022 <code>Optional</code> sort: <code>\"none\"</code> | <code>\"byValue\"</code></p> <p>Inherited from</p> <p>Preset.sort</p>"},{"location":"reference/interfaces/presets.GroupedBar/#title","title":"title","text":"<p>\u2022 <code>Optional</code> title: <code>string</code></p> <p>Inherited from</p> <p>Preset.title</p>"},{"location":"reference/interfaces/presets.GroupedBar/#x","title":"x","text":"<p>\u2022 x: <code>string</code> | <code>string</code>[]</p>"},{"location":"reference/interfaces/presets.GroupedBar/#y","title":"y","text":"<p>\u2022 y: <code>string</code> | <code>string</code>[]</p>"},{"location":"reference/interfaces/presets.GroupedColumn/","title":"presets.GroupedColumn","text":"<p>Vizzu / Modules / presets / GroupedColumn</p>"},{"location":"reference/interfaces/presets.GroupedColumn/#interface-groupedcolumn","title":"Interface: GroupedColumn","text":"<p>presets.GroupedColumn</p>"},{"location":"reference/interfaces/presets.GroupedColumn/#hierarchy","title":"Hierarchy","text":"<ul> <li> <p><code>Preset</code></p> <p>\u21b3 <code>GroupedColumn</code></p> </li> </ul>"},{"location":"reference/interfaces/presets.GroupedColumn/#properties","title":"Properties","text":""},{"location":"reference/interfaces/presets.GroupedColumn/#groupedby","title":"groupedBy","text":"<p>\u2022 groupedBy: <code>string</code> | <code>string</code>[]</p>"},{"location":"reference/interfaces/presets.GroupedColumn/#legend","title":"legend","text":"<p>\u2022 <code>Optional</code> legend: <code>\"color\"</code> | <code>\"size\"</code> | <code>\"lightness\"</code></p> <p>Inherited from</p> <p>Preset.legend</p>"},{"location":"reference/interfaces/presets.GroupedColumn/#reverse","title":"reverse","text":"<p>\u2022 <code>Optional</code> reverse: <code>boolean</code></p> <p>Inherited from</p> <p>Preset.reverse</p>"},{"location":"reference/interfaces/presets.GroupedColumn/#sort","title":"sort","text":"<p>\u2022 <code>Optional</code> sort: <code>\"none\"</code> | <code>\"byValue\"</code></p> <p>Inherited from</p> <p>Preset.sort</p>"},{"location":"reference/interfaces/presets.GroupedColumn/#title","title":"title","text":"<p>\u2022 <code>Optional</code> title: <code>string</code></p> <p>Inherited from</p> <p>Preset.title</p>"},{"location":"reference/interfaces/presets.GroupedColumn/#x","title":"x","text":"<p>\u2022 x: <code>string</code> | <code>string</code>[]</p>"},{"location":"reference/interfaces/presets.GroupedColumn/#y","title":"y","text":"<p>\u2022 y: <code>string</code> | <code>string</code>[]</p>"},{"location":"reference/interfaces/presets.Heatmap/","title":"presets.Heatmap","text":"<p>Vizzu / Modules / presets / Heatmap</p>"},{"location":"reference/interfaces/presets.Heatmap/#interface-heatmap","title":"Interface: Heatmap","text":"<p>presets.Heatmap</p>"},{"location":"reference/interfaces/presets.Heatmap/#hierarchy","title":"Hierarchy","text":"<ul> <li> <p><code>Preset</code></p> <p>\u21b3 <code>Heatmap</code></p> </li> </ul>"},{"location":"reference/interfaces/presets.Heatmap/#properties","title":"Properties","text":""},{"location":"reference/interfaces/presets.Heatmap/#legend","title":"legend","text":"<p>\u2022 <code>Optional</code> legend: <code>\"color\"</code> | <code>\"size\"</code> | <code>\"lightness\"</code></p> <p>Inherited from</p> <p>Preset.legend</p>"},{"location":"reference/interfaces/presets.Heatmap/#lightness","title":"lightness","text":"<p>\u2022 lightness: <code>string</code> | <code>string</code>[]</p>"},{"location":"reference/interfaces/presets.Heatmap/#reverse","title":"reverse","text":"<p>\u2022 <code>Optional</code> reverse: <code>boolean</code></p> <p>Inherited from</p> <p>Preset.reverse</p>"},{"location":"reference/interfaces/presets.Heatmap/#sort","title":"sort","text":"<p>\u2022 <code>Optional</code> sort: <code>\"none\"</code> | <code>\"byValue\"</code></p> <p>Inherited from</p> <p>Preset.sort</p>"},{"location":"reference/interfaces/presets.Heatmap/#title","title":"title","text":"<p>\u2022 <code>Optional</code> title: <code>string</code></p> <p>Inherited from</p> <p>Preset.title</p>"},{"location":"reference/interfaces/presets.Heatmap/#x","title":"x","text":"<p>\u2022 x: <code>string</code> | <code>string</code>[]</p>"},{"location":"reference/interfaces/presets.Heatmap/#y","title":"y","text":"<p>\u2022 y: <code>string</code> | <code>string</code>[]</p>"},{"location":"reference/interfaces/presets.Line/","title":"presets.Line","text":"<p>Vizzu / Modules / presets / Line</p>"},{"location":"reference/interfaces/presets.Line/#interface-line","title":"Interface: Line","text":"<p>presets.Line</p>"},{"location":"reference/interfaces/presets.Line/#hierarchy","title":"Hierarchy","text":"<ul> <li> <p><code>Preset</code></p> <p>\u21b3 <code>Line</code></p> </li> </ul>"},{"location":"reference/interfaces/presets.Line/#properties","title":"Properties","text":""},{"location":"reference/interfaces/presets.Line/#dividedby","title":"dividedBy","text":"<p>\u2022 dividedBy: <code>string</code> | <code>string</code>[]</p>"},{"location":"reference/interfaces/presets.Line/#legend","title":"legend","text":"<p>\u2022 <code>Optional</code> legend: <code>\"color\"</code> | <code>\"size\"</code> | <code>\"lightness\"</code></p> <p>Inherited from</p> <p>Preset.legend</p>"},{"location":"reference/interfaces/presets.Line/#reverse","title":"reverse","text":"<p>\u2022 <code>Optional</code> reverse: <code>boolean</code></p> <p>Inherited from</p> <p>Preset.reverse</p>"},{"location":"reference/interfaces/presets.Line/#sort","title":"sort","text":"<p>\u2022 <code>Optional</code> sort: <code>\"none\"</code> | <code>\"byValue\"</code></p> <p>Inherited from</p> <p>Preset.sort</p>"},{"location":"reference/interfaces/presets.Line/#title","title":"title","text":"<p>\u2022 <code>Optional</code> title: <code>string</code></p> <p>Inherited from</p> <p>Preset.title</p>"},{"location":"reference/interfaces/presets.Line/#x","title":"x","text":"<p>\u2022 x: <code>string</code> | <code>string</code>[]</p>"},{"location":"reference/interfaces/presets.Line/#y","title":"y","text":"<p>\u2022 y: <code>string</code> | <code>string</code>[]</p>"},{"location":"reference/interfaces/presets.Lollipop/","title":"presets.Lollipop","text":"<p>Vizzu / Modules / presets / Lollipop</p>"},{"location":"reference/interfaces/presets.Lollipop/#interface-lollipop","title":"Interface: Lollipop","text":"<p>presets.Lollipop</p>"},{"location":"reference/interfaces/presets.Lollipop/#hierarchy","title":"Hierarchy","text":"<ul> <li> <p><code>Preset</code></p> <p>\u21b3 <code>Lollipop</code></p> </li> </ul>"},{"location":"reference/interfaces/presets.Lollipop/#properties","title":"Properties","text":""},{"location":"reference/interfaces/presets.Lollipop/#legend","title":"legend","text":"<p>\u2022 <code>Optional</code> legend: <code>\"color\"</code> | <code>\"size\"</code> | <code>\"lightness\"</code></p> <p>Inherited from</p> <p>Preset.legend</p>"},{"location":"reference/interfaces/presets.Lollipop/#reverse","title":"reverse","text":"<p>\u2022 <code>Optional</code> reverse: <code>boolean</code></p> <p>Inherited from</p> <p>Preset.reverse</p>"},{"location":"reference/interfaces/presets.Lollipop/#sort","title":"sort","text":"<p>\u2022 <code>Optional</code> sort: <code>\"none\"</code> | <code>\"byValue\"</code></p> <p>Inherited from</p> <p>Preset.sort</p>"},{"location":"reference/interfaces/presets.Lollipop/#title","title":"title","text":"<p>\u2022 <code>Optional</code> title: <code>string</code></p> <p>Inherited from</p> <p>Preset.title</p>"},{"location":"reference/interfaces/presets.Lollipop/#x","title":"x","text":"<p>\u2022 x: <code>string</code> | <code>string</code>[]</p>"},{"location":"reference/interfaces/presets.Lollipop/#y","title":"y","text":"<p>\u2022 y: <code>string</code> | <code>string</code>[]</p>"},{"location":"reference/interfaces/presets.Marimekko/","title":"presets.Marimekko","text":"<p>Vizzu / Modules / presets / Marimekko</p>"},{"location":"reference/interfaces/presets.Marimekko/#interface-marimekko","title":"Interface: Marimekko","text":"<p>presets.Marimekko</p>"},{"location":"reference/interfaces/presets.Marimekko/#hierarchy","title":"Hierarchy","text":"<ul> <li> <p><code>Preset</code></p> <p>\u21b3 <code>Marimekko</code></p> </li> </ul>"},{"location":"reference/interfaces/presets.Marimekko/#properties","title":"Properties","text":""},{"location":"reference/interfaces/presets.Marimekko/#groupedby","title":"groupedBy","text":"<p>\u2022 groupedBy: <code>string</code> | <code>string</code>[]</p>"},{"location":"reference/interfaces/presets.Marimekko/#legend","title":"legend","text":"<p>\u2022 <code>Optional</code> legend: <code>\"color\"</code> | <code>\"size\"</code> | <code>\"lightness\"</code></p> <p>Inherited from</p> <p>Preset.legend</p>"},{"location":"reference/interfaces/presets.Marimekko/#reverse","title":"reverse","text":"<p>\u2022 <code>Optional</code> reverse: <code>boolean</code></p> <p>Inherited from</p> <p>Preset.reverse</p>"},{"location":"reference/interfaces/presets.Marimekko/#sort","title":"sort","text":"<p>\u2022 <code>Optional</code> sort: <code>\"none\"</code> | <code>\"byValue\"</code></p> <p>Inherited from</p> <p>Preset.sort</p>"},{"location":"reference/interfaces/presets.Marimekko/#stackedby","title":"stackedBy","text":"<p>\u2022 stackedBy: <code>string</code> | <code>string</code>[]</p>"},{"location":"reference/interfaces/presets.Marimekko/#title","title":"title","text":"<p>\u2022 <code>Optional</code> title: <code>string</code></p> <p>Inherited from</p> <p>Preset.title</p>"},{"location":"reference/interfaces/presets.Marimekko/#x","title":"x","text":"<p>\u2022 x: <code>string</code> | <code>string</code>[]</p>"},{"location":"reference/interfaces/presets.Marimekko/#y","title":"y","text":"<p>\u2022 y: <code>string</code> | <code>string</code>[]</p>"},{"location":"reference/interfaces/presets.Mekko/","title":"presets.Mekko","text":"<p>Vizzu / Modules / presets / Mekko</p>"},{"location":"reference/interfaces/presets.Mekko/#interface-mekko","title":"Interface: Mekko","text":"<p>presets.Mekko</p>"},{"location":"reference/interfaces/presets.Mekko/#hierarchy","title":"Hierarchy","text":"<ul> <li> <p><code>Preset</code></p> <p>\u21b3 <code>Mekko</code></p> </li> </ul>"},{"location":"reference/interfaces/presets.Mekko/#properties","title":"Properties","text":""},{"location":"reference/interfaces/presets.Mekko/#groupedby","title":"groupedBy","text":"<p>\u2022 groupedBy: <code>string</code> | <code>string</code>[]</p>"},{"location":"reference/interfaces/presets.Mekko/#legend","title":"legend","text":"<p>\u2022 <code>Optional</code> legend: <code>\"color\"</code> | <code>\"size\"</code> | <code>\"lightness\"</code></p> <p>Inherited from</p> <p>Preset.legend</p>"},{"location":"reference/interfaces/presets.Mekko/#reverse","title":"reverse","text":"<p>\u2022 <code>Optional</code> reverse: <code>boolean</code></p> <p>Inherited from</p> <p>Preset.reverse</p>"},{"location":"reference/interfaces/presets.Mekko/#sort","title":"sort","text":"<p>\u2022 <code>Optional</code> sort: <code>\"none\"</code> | <code>\"byValue\"</code></p> <p>Inherited from</p> <p>Preset.sort</p>"},{"location":"reference/interfaces/presets.Mekko/#stackedby","title":"stackedBy","text":"<p>\u2022 stackedBy: <code>string</code> | <code>string</code>[]</p>"},{"location":"reference/interfaces/presets.Mekko/#title","title":"title","text":"<p>\u2022 <code>Optional</code> title: <code>string</code></p> <p>Inherited from</p> <p>Preset.title</p>"},{"location":"reference/interfaces/presets.Mekko/#x","title":"x","text":"<p>\u2022 x: <code>string</code> | <code>string</code>[]</p>"},{"location":"reference/interfaces/presets.Mekko/#y","title":"y","text":"<p>\u2022 y: <code>string</code> | <code>string</code>[]</p>"},{"location":"reference/interfaces/presets.NestedDonut/","title":"presets.NestedDonut","text":"<p>Vizzu / Modules / presets / NestedDonut</p>"},{"location":"reference/interfaces/presets.NestedDonut/#interface-nesteddonut","title":"Interface: NestedDonut","text":"<p>presets.NestedDonut</p>"},{"location":"reference/interfaces/presets.NestedDonut/#hierarchy","title":"Hierarchy","text":"<ul> <li> <p><code>Preset</code></p> <p>\u21b3 <code>NestedDonut</code></p> </li> </ul>"},{"location":"reference/interfaces/presets.NestedDonut/#properties","title":"Properties","text":""},{"location":"reference/interfaces/presets.NestedDonut/#angle","title":"angle","text":"<p>\u2022 angle: <code>string</code> | <code>string</code>[]</p>"},{"location":"reference/interfaces/presets.NestedDonut/#legend","title":"legend","text":"<p>\u2022 <code>Optional</code> legend: <code>\"color\"</code> | <code>\"size\"</code> | <code>\"lightness\"</code></p> <p>Inherited from</p> <p>Preset.legend</p>"},{"location":"reference/interfaces/presets.NestedDonut/#radius","title":"radius","text":"<p>\u2022 radius: <code>string</code> | <code>string</code>[]</p>"},{"location":"reference/interfaces/presets.NestedDonut/#reverse","title":"reverse","text":"<p>\u2022 <code>Optional</code> reverse: <code>boolean</code></p> <p>Inherited from</p> <p>Preset.reverse</p>"},{"location":"reference/interfaces/presets.NestedDonut/#sort","title":"sort","text":"<p>\u2022 <code>Optional</code> sort: <code>\"none\"</code> | <code>\"byValue\"</code></p> <p>Inherited from</p> <p>Preset.sort</p>"},{"location":"reference/interfaces/presets.NestedDonut/#stackedby","title":"stackedBy","text":"<p>\u2022 stackedBy: <code>string</code> | <code>string</code>[]</p>"},{"location":"reference/interfaces/presets.NestedDonut/#title","title":"title","text":"<p>\u2022 <code>Optional</code> title: <code>string</code></p> <p>Inherited from</p> <p>Preset.title</p>"},{"location":"reference/interfaces/presets.PercentageArea/","title":"presets.PercentageArea","text":"<p>Vizzu / Modules / presets / PercentageArea</p>"},{"location":"reference/interfaces/presets.PercentageArea/#interface-percentagearea","title":"Interface: PercentageArea","text":"<p>presets.PercentageArea</p>"},{"location":"reference/interfaces/presets.PercentageArea/#hierarchy","title":"Hierarchy","text":"<ul> <li> <p><code>Preset</code></p> <p>\u21b3 <code>PercentageArea</code></p> </li> </ul>"},{"location":"reference/interfaces/presets.PercentageArea/#properties","title":"Properties","text":""},{"location":"reference/interfaces/presets.PercentageArea/#legend","title":"legend","text":"<p>\u2022 <code>Optional</code> legend: <code>\"color\"</code> | <code>\"size\"</code> | <code>\"lightness\"</code></p> <p>Inherited from</p> <p>Preset.legend</p>"},{"location":"reference/interfaces/presets.PercentageArea/#reverse","title":"reverse","text":"<p>\u2022 <code>Optional</code> reverse: <code>boolean</code></p> <p>Inherited from</p> <p>Preset.reverse</p>"},{"location":"reference/interfaces/presets.PercentageArea/#sort","title":"sort","text":"<p>\u2022 <code>Optional</code> sort: <code>\"none\"</code> | <code>\"byValue\"</code></p> <p>Inherited from</p> <p>Preset.sort</p>"},{"location":"reference/interfaces/presets.PercentageArea/#stackedby","title":"stackedBy","text":"<p>\u2022 stackedBy: <code>string</code> | <code>string</code>[]</p>"},{"location":"reference/interfaces/presets.PercentageArea/#title","title":"title","text":"<p>\u2022 <code>Optional</code> title: <code>string</code></p> <p>Inherited from</p> <p>Preset.title</p>"},{"location":"reference/interfaces/presets.PercentageArea/#x","title":"x","text":"<p>\u2022 x: <code>string</code> | <code>string</code>[]</p>"},{"location":"reference/interfaces/presets.PercentageArea/#y","title":"y","text":"<p>\u2022 y: <code>string</code> | <code>string</code>[]</p>"},{"location":"reference/interfaces/presets.PercentageBar/","title":"presets.PercentageBar","text":"<p>Vizzu / Modules / presets / PercentageBar</p>"},{"location":"reference/interfaces/presets.PercentageBar/#interface-percentagebar","title":"Interface: PercentageBar","text":"<p>presets.PercentageBar</p>"},{"location":"reference/interfaces/presets.PercentageBar/#hierarchy","title":"Hierarchy","text":"<ul> <li> <p><code>Preset</code></p> <p>\u21b3 <code>PercentageBar</code></p> </li> </ul>"},{"location":"reference/interfaces/presets.PercentageBar/#properties","title":"Properties","text":""},{"location":"reference/interfaces/presets.PercentageBar/#legend","title":"legend","text":"<p>\u2022 <code>Optional</code> legend: <code>\"color\"</code> | <code>\"size\"</code> | <code>\"lightness\"</code></p> <p>Inherited from</p> <p>Preset.legend</p>"},{"location":"reference/interfaces/presets.PercentageBar/#reverse","title":"reverse","text":"<p>\u2022 <code>Optional</code> reverse: <code>boolean</code></p> <p>Inherited from</p> <p>Preset.reverse</p>"},{"location":"reference/interfaces/presets.PercentageBar/#sort","title":"sort","text":"<p>\u2022 <code>Optional</code> sort: <code>\"none\"</code> | <code>\"byValue\"</code></p> <p>Inherited from</p> <p>Preset.sort</p>"},{"location":"reference/interfaces/presets.PercentageBar/#stackedby","title":"stackedBy","text":"<p>\u2022 stackedBy: <code>string</code> | <code>string</code>[]</p>"},{"location":"reference/interfaces/presets.PercentageBar/#title","title":"title","text":"<p>\u2022 <code>Optional</code> title: <code>string</code></p> <p>Inherited from</p> <p>Preset.title</p>"},{"location":"reference/interfaces/presets.PercentageBar/#x","title":"x","text":"<p>\u2022 x: <code>string</code> | <code>string</code>[]</p>"},{"location":"reference/interfaces/presets.PercentageBar/#y","title":"y","text":"<p>\u2022 y: <code>string</code> | <code>string</code>[]</p>"},{"location":"reference/interfaces/presets.PercentageColumn/","title":"presets.PercentageColumn","text":"<p>Vizzu / Modules / presets / PercentageColumn</p>"},{"location":"reference/interfaces/presets.PercentageColumn/#interface-percentagecolumn","title":"Interface: PercentageColumn","text":"<p>presets.PercentageColumn</p>"},{"location":"reference/interfaces/presets.PercentageColumn/#hierarchy","title":"Hierarchy","text":"<ul> <li> <p><code>Preset</code></p> <p>\u21b3 <code>PercentageColumn</code></p> </li> </ul>"},{"location":"reference/interfaces/presets.PercentageColumn/#properties","title":"Properties","text":""},{"location":"reference/interfaces/presets.PercentageColumn/#legend","title":"legend","text":"<p>\u2022 <code>Optional</code> legend: <code>\"color\"</code> | <code>\"size\"</code> | <code>\"lightness\"</code></p> <p>Inherited from</p> <p>Preset.legend</p>"},{"location":"reference/interfaces/presets.PercentageColumn/#reverse","title":"reverse","text":"<p>\u2022 <code>Optional</code> reverse: <code>boolean</code></p> <p>Inherited from</p> <p>Preset.reverse</p>"},{"location":"reference/interfaces/presets.PercentageColumn/#sort","title":"sort","text":"<p>\u2022 <code>Optional</code> sort: <code>\"none\"</code> | <code>\"byValue\"</code></p> <p>Inherited from</p> <p>Preset.sort</p>"},{"location":"reference/interfaces/presets.PercentageColumn/#stackedby","title":"stackedBy","text":"<p>\u2022 stackedBy: <code>string</code> | <code>string</code>[]</p>"},{"location":"reference/interfaces/presets.PercentageColumn/#title","title":"title","text":"<p>\u2022 <code>Optional</code> title: <code>string</code></p> <p>Inherited from</p> <p>Preset.title</p>"},{"location":"reference/interfaces/presets.PercentageColumn/#x","title":"x","text":"<p>\u2022 x: <code>string</code> | <code>string</code>[]</p>"},{"location":"reference/interfaces/presets.PercentageColumn/#y","title":"y","text":"<p>\u2022 y: <code>string</code> | <code>string</code>[]</p>"},{"location":"reference/interfaces/presets.Pie/","title":"presets.Pie","text":"<p>Vizzu / Modules / presets / Pie</p>"},{"location":"reference/interfaces/presets.Pie/#interface-pie","title":"Interface: Pie","text":"<p>presets.Pie</p>"},{"location":"reference/interfaces/presets.Pie/#hierarchy","title":"Hierarchy","text":"<ul> <li> <p><code>Preset</code></p> <p>\u21b3 <code>Pie</code></p> </li> </ul>"},{"location":"reference/interfaces/presets.Pie/#properties","title":"Properties","text":""},{"location":"reference/interfaces/presets.Pie/#angle","title":"angle","text":"<p>\u2022 angle: <code>string</code> | <code>string</code>[]</p>"},{"location":"reference/interfaces/presets.Pie/#by","title":"by","text":"<p>\u2022 by: <code>string</code> | <code>string</code>[]</p>"},{"location":"reference/interfaces/presets.Pie/#legend","title":"legend","text":"<p>\u2022 <code>Optional</code> legend: <code>\"color\"</code> | <code>\"size\"</code> | <code>\"lightness\"</code></p> <p>Inherited from</p> <p>Preset.legend</p>"},{"location":"reference/interfaces/presets.Pie/#reverse","title":"reverse","text":"<p>\u2022 <code>Optional</code> reverse: <code>boolean</code></p> <p>Inherited from</p> <p>Preset.reverse</p>"},{"location":"reference/interfaces/presets.Pie/#sort","title":"sort","text":"<p>\u2022 <code>Optional</code> sort: <code>\"none\"</code> | <code>\"byValue\"</code></p> <p>Inherited from</p> <p>Preset.sort</p>"},{"location":"reference/interfaces/presets.Pie/#title","title":"title","text":"<p>\u2022 <code>Optional</code> title: <code>string</code></p> <p>Inherited from</p> <p>Preset.title</p>"},{"location":"reference/interfaces/presets.PolarColumn/","title":"presets.PolarColumn","text":"<p>Vizzu / Modules / presets / PolarColumn</p>"},{"location":"reference/interfaces/presets.PolarColumn/#interface-polarcolumn","title":"Interface: PolarColumn","text":"<p>presets.PolarColumn</p>"},{"location":"reference/interfaces/presets.PolarColumn/#hierarchy","title":"Hierarchy","text":"<ul> <li> <p><code>Preset</code></p> <p>\u21b3 <code>PolarColumn</code></p> </li> </ul>"},{"location":"reference/interfaces/presets.PolarColumn/#properties","title":"Properties","text":""},{"location":"reference/interfaces/presets.PolarColumn/#angle","title":"angle","text":"<p>\u2022 angle: <code>string</code> | <code>string</code>[]</p>"},{"location":"reference/interfaces/presets.PolarColumn/#legend","title":"legend","text":"<p>\u2022 <code>Optional</code> legend: <code>\"color\"</code> | <code>\"size\"</code> | <code>\"lightness\"</code></p> <p>Inherited from</p> <p>Preset.legend</p>"},{"location":"reference/interfaces/presets.PolarColumn/#radius","title":"radius","text":"<p>\u2022 radius: <code>string</code> | <code>string</code>[]</p>"},{"location":"reference/interfaces/presets.PolarColumn/#reverse","title":"reverse","text":"<p>\u2022 <code>Optional</code> reverse: <code>boolean</code></p> <p>Inherited from</p> <p>Preset.reverse</p>"},{"location":"reference/interfaces/presets.PolarColumn/#sort","title":"sort","text":"<p>\u2022 <code>Optional</code> sort: <code>\"none\"</code> | <code>\"byValue\"</code></p> <p>Inherited from</p> <p>Preset.sort</p>"},{"location":"reference/interfaces/presets.PolarColumn/#title","title":"title","text":"<p>\u2022 <code>Optional</code> title: <code>string</code></p> <p>Inherited from</p> <p>Preset.title</p>"},{"location":"reference/interfaces/presets.PolarLine/","title":"presets.PolarLine","text":"<p>Vizzu / Modules / presets / PolarLine</p>"},{"location":"reference/interfaces/presets.PolarLine/#interface-polarline","title":"Interface: PolarLine","text":"<p>presets.PolarLine</p>"},{"location":"reference/interfaces/presets.PolarLine/#hierarchy","title":"Hierarchy","text":"<ul> <li> <p><code>Preset</code></p> <p>\u21b3 <code>PolarLine</code></p> </li> </ul>"},{"location":"reference/interfaces/presets.PolarLine/#properties","title":"Properties","text":""},{"location":"reference/interfaces/presets.PolarLine/#angle","title":"angle","text":"<p>\u2022 angle: <code>string</code> | <code>string</code>[]</p>"},{"location":"reference/interfaces/presets.PolarLine/#dividedby","title":"dividedBy","text":"<p>\u2022 dividedBy: <code>string</code> | <code>string</code>[]</p>"},{"location":"reference/interfaces/presets.PolarLine/#legend","title":"legend","text":"<p>\u2022 <code>Optional</code> legend: <code>\"color\"</code> | <code>\"size\"</code> | <code>\"lightness\"</code></p> <p>Inherited from</p> <p>Preset.legend</p>"},{"location":"reference/interfaces/presets.PolarLine/#radius","title":"radius","text":"<p>\u2022 radius: <code>string</code> | <code>string</code>[]</p>"},{"location":"reference/interfaces/presets.PolarLine/#reverse","title":"reverse","text":"<p>\u2022 <code>Optional</code> reverse: <code>boolean</code></p> <p>Inherited from</p> <p>Preset.reverse</p>"},{"location":"reference/interfaces/presets.PolarLine/#sort","title":"sort","text":"<p>\u2022 <code>Optional</code> sort: <code>\"none\"</code> | <code>\"byValue\"</code></p> <p>Inherited from</p> <p>Preset.sort</p>"},{"location":"reference/interfaces/presets.PolarLine/#title","title":"title","text":"<p>\u2022 <code>Optional</code> title: <code>string</code></p> <p>Inherited from</p> <p>Preset.title</p>"},{"location":"reference/interfaces/presets.PolarScatter/","title":"presets.PolarScatter","text":"<p>Vizzu / Modules / presets / PolarScatter</p>"},{"location":"reference/interfaces/presets.PolarScatter/#interface-polarscatter","title":"Interface: PolarScatter","text":"<p>presets.PolarScatter</p>"},{"location":"reference/interfaces/presets.PolarScatter/#hierarchy","title":"Hierarchy","text":"<ul> <li> <p><code>Preset</code></p> <p>\u21b3 <code>PolarScatter</code></p> </li> </ul>"},{"location":"reference/interfaces/presets.PolarScatter/#properties","title":"Properties","text":""},{"location":"reference/interfaces/presets.PolarScatter/#angle","title":"angle","text":"<p>\u2022 angle: <code>string</code> | <code>string</code>[]</p>"},{"location":"reference/interfaces/presets.PolarScatter/#dividedby","title":"dividedBy","text":"<p>\u2022 dividedBy: <code>string</code> | <code>string</code>[]</p>"},{"location":"reference/interfaces/presets.PolarScatter/#legend","title":"legend","text":"<p>\u2022 <code>Optional</code> legend: <code>\"color\"</code> | <code>\"size\"</code> | <code>\"lightness\"</code></p> <p>Inherited from</p> <p>Preset.legend</p>"},{"location":"reference/interfaces/presets.PolarScatter/#radius","title":"radius","text":"<p>\u2022 radius: <code>string</code> | <code>string</code>[]</p>"},{"location":"reference/interfaces/presets.PolarScatter/#reverse","title":"reverse","text":"<p>\u2022 <code>Optional</code> reverse: <code>boolean</code></p> <p>Inherited from</p> <p>Preset.reverse</p>"},{"location":"reference/interfaces/presets.PolarScatter/#sort","title":"sort","text":"<p>\u2022 <code>Optional</code> sort: <code>\"none\"</code> | <code>\"byValue\"</code></p> <p>Inherited from</p> <p>Preset.sort</p>"},{"location":"reference/interfaces/presets.PolarScatter/#title","title":"title","text":"<p>\u2022 <code>Optional</code> title: <code>string</code></p> <p>Inherited from</p> <p>Preset.title</p>"},{"location":"reference/interfaces/presets.PolarStackedColumn/","title":"presets.PolarStackedColumn","text":"<p>Vizzu / Modules / presets / PolarStackedColumn</p>"},{"location":"reference/interfaces/presets.PolarStackedColumn/#interface-polarstackedcolumn","title":"Interface: PolarStackedColumn","text":"<p>presets.PolarStackedColumn</p>"},{"location":"reference/interfaces/presets.PolarStackedColumn/#hierarchy","title":"Hierarchy","text":"<ul> <li> <p><code>Preset</code></p> <p>\u21b3 <code>PolarStackedColumn</code></p> </li> </ul>"},{"location":"reference/interfaces/presets.PolarStackedColumn/#properties","title":"Properties","text":""},{"location":"reference/interfaces/presets.PolarStackedColumn/#angle","title":"angle","text":"<p>\u2022 angle: <code>string</code> | <code>string</code>[]</p>"},{"location":"reference/interfaces/presets.PolarStackedColumn/#legend","title":"legend","text":"<p>\u2022 <code>Optional</code> legend: <code>\"color\"</code> | <code>\"size\"</code> | <code>\"lightness\"</code></p> <p>Inherited from</p> <p>Preset.legend</p>"},{"location":"reference/interfaces/presets.PolarStackedColumn/#radius","title":"radius","text":"<p>\u2022 radius: <code>string</code> | <code>string</code>[]</p>"},{"location":"reference/interfaces/presets.PolarStackedColumn/#reverse","title":"reverse","text":"<p>\u2022 <code>Optional</code> reverse: <code>boolean</code></p> <p>Inherited from</p> <p>Preset.reverse</p>"},{"location":"reference/interfaces/presets.PolarStackedColumn/#sort","title":"sort","text":"<p>\u2022 <code>Optional</code> sort: <code>\"none\"</code> | <code>\"byValue\"</code></p> <p>Inherited from</p> <p>Preset.sort</p>"},{"location":"reference/interfaces/presets.PolarStackedColumn/#stackedby","title":"stackedBy","text":"<p>\u2022 stackedBy: <code>string</code> | <code>string</code>[]</p>"},{"location":"reference/interfaces/presets.PolarStackedColumn/#title","title":"title","text":"<p>\u2022 <code>Optional</code> title: <code>string</code></p> <p>Inherited from</p> <p>Preset.title</p>"},{"location":"reference/interfaces/presets.Preset/","title":"presets.Preset","text":"<p>Vizzu / Modules / presets / Preset</p>"},{"location":"reference/interfaces/presets.Preset/#interface-preset","title":"Interface: Preset","text":"<p>presets.Preset</p>"},{"location":"reference/interfaces/presets.Preset/#hierarchy","title":"Hierarchy","text":"<ul> <li> <p><code>Preset</code></p> <p>\u21b3 <code>Column</code></p> <p>\u21b3 <code>GroupedColumn</code></p> <p>\u21b3 <code>StackedColumn</code></p> <p>\u21b3 <code>SplittedColumn</code></p> <p>\u21b3 <code>PercentageColumn</code></p> <p>\u21b3 <code>Waterfall</code></p> <p>\u21b3 <code>Mekko</code></p> <p>\u21b3 <code>Marimekko</code></p> <p>\u21b3 <code>Bar</code></p> <p>\u21b3 <code>GroupedBar</code></p> <p>\u21b3 <code>StackedBar</code></p> <p>\u21b3 <code>SplittedBar</code></p> <p>\u21b3 <code>PercentageBar</code></p> <p>\u21b3 <code>Lollipop</code></p> <p>\u21b3 <code>Scatter</code></p> <p>\u21b3 <code>Bubbleplot</code></p> <p>\u21b3 <code>Area</code></p> <p>\u21b3 <code>StackedArea</code></p> <p>\u21b3 <code>PercentageArea</code></p> <p>\u21b3 <code>SplittedArea</code></p> <p>\u21b3 <code>Stream</code></p> <p>\u21b3 <code>VerticalStream</code></p> <p>\u21b3 <code>Violin</code></p> <p>\u21b3 <code>VerticalViolin</code></p> <p>\u21b3 <code>Line</code></p> <p>\u21b3 <code>VerticalLine</code></p> <p>\u21b3 <code>Pie</code></p> <p>\u21b3 <code>PolarColumn</code></p> <p>\u21b3 <code>PolarStackedColumn</code></p> <p>\u21b3 <code>VariableRadiusPie</code></p> <p>\u21b3 <code>RadialBar</code></p> <p>\u21b3 <code>RadialStackedBar</code></p> <p>\u21b3 <code>Donut</code></p> <p>\u21b3 <code>NestedDonut</code></p> <p>\u21b3 <code>PolarScatter</code></p> <p>\u21b3 <code>PolarLine</code></p> <p>\u21b3 <code>Treemap</code></p> <p>\u21b3 <code>StackedTreemap</code></p> <p>\u21b3 <code>Heatmap</code></p> <p>\u21b3 <code>Bubble</code></p> <p>\u21b3 <code>StackedBubble</code></p> </li> </ul>"},{"location":"reference/interfaces/presets.Preset/#properties","title":"Properties","text":""},{"location":"reference/interfaces/presets.Preset/#legend","title":"legend","text":"<p>\u2022 <code>Optional</code> legend: <code>\"color\"</code> | <code>\"size\"</code> | <code>\"lightness\"</code></p>"},{"location":"reference/interfaces/presets.Preset/#reverse","title":"reverse","text":"<p>\u2022 <code>Optional</code> reverse: <code>boolean</code></p>"},{"location":"reference/interfaces/presets.Preset/#sort","title":"sort","text":"<p>\u2022 <code>Optional</code> sort: <code>\"none\"</code> | <code>\"byValue\"</code></p>"},{"location":"reference/interfaces/presets.Preset/#title","title":"title","text":"<p>\u2022 <code>Optional</code> title: <code>string</code></p>"},{"location":"reference/interfaces/presets.RadialBar/","title":"presets.RadialBar","text":"<p>Vizzu / Modules / presets / RadialBar</p>"},{"location":"reference/interfaces/presets.RadialBar/#interface-radialbar","title":"Interface: RadialBar","text":"<p>presets.RadialBar</p>"},{"location":"reference/interfaces/presets.RadialBar/#hierarchy","title":"Hierarchy","text":"<ul> <li> <p><code>Preset</code></p> <p>\u21b3 <code>RadialBar</code></p> </li> </ul>"},{"location":"reference/interfaces/presets.RadialBar/#properties","title":"Properties","text":""},{"location":"reference/interfaces/presets.RadialBar/#angle","title":"angle","text":"<p>\u2022 angle: <code>string</code> | <code>string</code>[]</p>"},{"location":"reference/interfaces/presets.RadialBar/#legend","title":"legend","text":"<p>\u2022 <code>Optional</code> legend: <code>\"color\"</code> | <code>\"size\"</code> | <code>\"lightness\"</code></p> <p>Inherited from</p> <p>Preset.legend</p>"},{"location":"reference/interfaces/presets.RadialBar/#radius","title":"radius","text":"<p>\u2022 radius: <code>string</code> | <code>string</code>[]</p>"},{"location":"reference/interfaces/presets.RadialBar/#reverse","title":"reverse","text":"<p>\u2022 <code>Optional</code> reverse: <code>boolean</code></p> <p>Inherited from</p> <p>Preset.reverse</p>"},{"location":"reference/interfaces/presets.RadialBar/#sort","title":"sort","text":"<p>\u2022 <code>Optional</code> sort: <code>\"none\"</code> | <code>\"byValue\"</code></p> <p>Inherited from</p> <p>Preset.sort</p>"},{"location":"reference/interfaces/presets.RadialBar/#title","title":"title","text":"<p>\u2022 <code>Optional</code> title: <code>string</code></p> <p>Inherited from</p> <p>Preset.title</p>"},{"location":"reference/interfaces/presets.RadialStackedBar/","title":"presets.RadialStackedBar","text":"<p>Vizzu / Modules / presets / RadialStackedBar</p>"},{"location":"reference/interfaces/presets.RadialStackedBar/#interface-radialstackedbar","title":"Interface: RadialStackedBar","text":"<p>presets.RadialStackedBar</p>"},{"location":"reference/interfaces/presets.RadialStackedBar/#hierarchy","title":"Hierarchy","text":"<ul> <li> <p><code>Preset</code></p> <p>\u21b3 <code>RadialStackedBar</code></p> </li> </ul>"},{"location":"reference/interfaces/presets.RadialStackedBar/#properties","title":"Properties","text":""},{"location":"reference/interfaces/presets.RadialStackedBar/#angle","title":"angle","text":"<p>\u2022 angle: <code>string</code> | <code>string</code>[]</p>"},{"location":"reference/interfaces/presets.RadialStackedBar/#legend","title":"legend","text":"<p>\u2022 <code>Optional</code> legend: <code>\"color\"</code> | <code>\"size\"</code> | <code>\"lightness\"</code></p> <p>Inherited from</p> <p>Preset.legend</p>"},{"location":"reference/interfaces/presets.RadialStackedBar/#radius","title":"radius","text":"<p>\u2022 radius: <code>string</code> | <code>string</code>[]</p>"},{"location":"reference/interfaces/presets.RadialStackedBar/#reverse","title":"reverse","text":"<p>\u2022 <code>Optional</code> reverse: <code>boolean</code></p> <p>Inherited from</p> <p>Preset.reverse</p>"},{"location":"reference/interfaces/presets.RadialStackedBar/#sort","title":"sort","text":"<p>\u2022 <code>Optional</code> sort: <code>\"none\"</code> | <code>\"byValue\"</code></p> <p>Inherited from</p> <p>Preset.sort</p>"},{"location":"reference/interfaces/presets.RadialStackedBar/#stackedby","title":"stackedBy","text":"<p>\u2022 stackedBy: <code>string</code> | <code>string</code>[]</p>"},{"location":"reference/interfaces/presets.RadialStackedBar/#title","title":"title","text":"<p>\u2022 <code>Optional</code> title: <code>string</code></p> <p>Inherited from</p> <p>Preset.title</p>"},{"location":"reference/interfaces/presets.Scatter/","title":"presets.Scatter","text":"<p>Vizzu / Modules / presets / Scatter</p>"},{"location":"reference/interfaces/presets.Scatter/#interface-scatter","title":"Interface: Scatter","text":"<p>presets.Scatter</p>"},{"location":"reference/interfaces/presets.Scatter/#hierarchy","title":"Hierarchy","text":"<ul> <li> <p><code>Preset</code></p> <p>\u21b3 <code>Scatter</code></p> </li> </ul>"},{"location":"reference/interfaces/presets.Scatter/#properties","title":"Properties","text":""},{"location":"reference/interfaces/presets.Scatter/#dividedby","title":"dividedBy","text":"<p>\u2022 dividedBy: <code>string</code> | <code>string</code>[]</p>"},{"location":"reference/interfaces/presets.Scatter/#legend","title":"legend","text":"<p>\u2022 <code>Optional</code> legend: <code>\"color\"</code> | <code>\"size\"</code> | <code>\"lightness\"</code></p> <p>Inherited from</p> <p>Preset.legend</p>"},{"location":"reference/interfaces/presets.Scatter/#reverse","title":"reverse","text":"<p>\u2022 <code>Optional</code> reverse: <code>boolean</code></p> <p>Inherited from</p> <p>Preset.reverse</p>"},{"location":"reference/interfaces/presets.Scatter/#sort","title":"sort","text":"<p>\u2022 <code>Optional</code> sort: <code>\"none\"</code> | <code>\"byValue\"</code></p> <p>Inherited from</p> <p>Preset.sort</p>"},{"location":"reference/interfaces/presets.Scatter/#title","title":"title","text":"<p>\u2022 <code>Optional</code> title: <code>string</code></p> <p>Inherited from</p> <p>Preset.title</p>"},{"location":"reference/interfaces/presets.Scatter/#x","title":"x","text":"<p>\u2022 x: <code>string</code> | <code>string</code>[]</p>"},{"location":"reference/interfaces/presets.Scatter/#y","title":"y","text":"<p>\u2022 y: <code>string</code> | <code>string</code>[]</p>"},{"location":"reference/interfaces/presets.SplittedArea/","title":"presets.SplittedArea","text":"<p>Vizzu / Modules / presets / SplittedArea</p>"},{"location":"reference/interfaces/presets.SplittedArea/#interface-splittedarea","title":"Interface: SplittedArea","text":"<p>presets.SplittedArea</p>"},{"location":"reference/interfaces/presets.SplittedArea/#hierarchy","title":"Hierarchy","text":"<ul> <li> <p><code>Preset</code></p> <p>\u21b3 <code>SplittedArea</code></p> </li> </ul>"},{"location":"reference/interfaces/presets.SplittedArea/#properties","title":"Properties","text":""},{"location":"reference/interfaces/presets.SplittedArea/#legend","title":"legend","text":"<p>\u2022 <code>Optional</code> legend: <code>\"color\"</code> | <code>\"size\"</code> | <code>\"lightness\"</code></p> <p>Inherited from</p> <p>Preset.legend</p>"},{"location":"reference/interfaces/presets.SplittedArea/#reverse","title":"reverse","text":"<p>\u2022 <code>Optional</code> reverse: <code>boolean</code></p> <p>Inherited from</p> <p>Preset.reverse</p>"},{"location":"reference/interfaces/presets.SplittedArea/#sort","title":"sort","text":"<p>\u2022 <code>Optional</code> sort: <code>\"none\"</code> | <code>\"byValue\"</code></p> <p>Inherited from</p> <p>Preset.sort</p>"},{"location":"reference/interfaces/presets.SplittedArea/#splittedby","title":"splittedBy","text":"<p>\u2022 splittedBy: <code>string</code> | <code>string</code>[]</p>"},{"location":"reference/interfaces/presets.SplittedArea/#title","title":"title","text":"<p>\u2022 <code>Optional</code> title: <code>string</code></p> <p>Inherited from</p> <p>Preset.title</p>"},{"location":"reference/interfaces/presets.SplittedArea/#x","title":"x","text":"<p>\u2022 x: <code>string</code> | <code>string</code>[]</p>"},{"location":"reference/interfaces/presets.SplittedArea/#y","title":"y","text":"<p>\u2022 y: <code>string</code> | <code>string</code>[]</p>"},{"location":"reference/interfaces/presets.SplittedBar/","title":"presets.SplittedBar","text":"<p>Vizzu / Modules / presets / SplittedBar</p>"},{"location":"reference/interfaces/presets.SplittedBar/#interface-splittedbar","title":"Interface: SplittedBar","text":"<p>presets.SplittedBar</p>"},{"location":"reference/interfaces/presets.SplittedBar/#hierarchy","title":"Hierarchy","text":"<ul> <li> <p><code>Preset</code></p> <p>\u21b3 <code>SplittedBar</code></p> </li> </ul>"},{"location":"reference/interfaces/presets.SplittedBar/#properties","title":"Properties","text":""},{"location":"reference/interfaces/presets.SplittedBar/#legend","title":"legend","text":"<p>\u2022 <code>Optional</code> legend: <code>\"color\"</code> | <code>\"size\"</code> | <code>\"lightness\"</code></p> <p>Inherited from</p> <p>Preset.legend</p>"},{"location":"reference/interfaces/presets.SplittedBar/#reverse","title":"reverse","text":"<p>\u2022 <code>Optional</code> reverse: <code>boolean</code></p> <p>Inherited from</p> <p>Preset.reverse</p>"},{"location":"reference/interfaces/presets.SplittedBar/#sort","title":"sort","text":"<p>\u2022 <code>Optional</code> sort: <code>\"none\"</code> | <code>\"byValue\"</code></p> <p>Inherited from</p> <p>Preset.sort</p>"},{"location":"reference/interfaces/presets.SplittedBar/#splittedby","title":"splittedBy","text":"<p>\u2022 splittedBy: <code>string</code> | <code>string</code>[]</p>"},{"location":"reference/interfaces/presets.SplittedBar/#title","title":"title","text":"<p>\u2022 <code>Optional</code> title: <code>string</code></p> <p>Inherited from</p> <p>Preset.title</p>"},{"location":"reference/interfaces/presets.SplittedBar/#x","title":"x","text":"<p>\u2022 x: <code>string</code> | <code>string</code>[]</p>"},{"location":"reference/interfaces/presets.SplittedBar/#y","title":"y","text":"<p>\u2022 y: <code>string</code> | <code>string</code>[]</p>"},{"location":"reference/interfaces/presets.SplittedColumn/","title":"presets.SplittedColumn","text":"<p>Vizzu / Modules / presets / SplittedColumn</p>"},{"location":"reference/interfaces/presets.SplittedColumn/#interface-splittedcolumn","title":"Interface: SplittedColumn","text":"<p>presets.SplittedColumn</p>"},{"location":"reference/interfaces/presets.SplittedColumn/#hierarchy","title":"Hierarchy","text":"<ul> <li> <p><code>Preset</code></p> <p>\u21b3 <code>SplittedColumn</code></p> </li> </ul>"},{"location":"reference/interfaces/presets.SplittedColumn/#properties","title":"Properties","text":""},{"location":"reference/interfaces/presets.SplittedColumn/#legend","title":"legend","text":"<p>\u2022 <code>Optional</code> legend: <code>\"color\"</code> | <code>\"size\"</code> | <code>\"lightness\"</code></p> <p>Inherited from</p> <p>Preset.legend</p>"},{"location":"reference/interfaces/presets.SplittedColumn/#reverse","title":"reverse","text":"<p>\u2022 <code>Optional</code> reverse: <code>boolean</code></p> <p>Inherited from</p> <p>Preset.reverse</p>"},{"location":"reference/interfaces/presets.SplittedColumn/#sort","title":"sort","text":"<p>\u2022 <code>Optional</code> sort: <code>\"none\"</code> | <code>\"byValue\"</code></p> <p>Inherited from</p> <p>Preset.sort</p>"},{"location":"reference/interfaces/presets.SplittedColumn/#splittedby","title":"splittedBy","text":"<p>\u2022 splittedBy: <code>string</code> | <code>string</code>[]</p>"},{"location":"reference/interfaces/presets.SplittedColumn/#title","title":"title","text":"<p>\u2022 <code>Optional</code> title: <code>string</code></p> <p>Inherited from</p> <p>Preset.title</p>"},{"location":"reference/interfaces/presets.SplittedColumn/#x","title":"x","text":"<p>\u2022 x: <code>string</code> | <code>string</code>[]</p>"},{"location":"reference/interfaces/presets.SplittedColumn/#y","title":"y","text":"<p>\u2022 y: <code>string</code> | <code>string</code>[]</p>"},{"location":"reference/interfaces/presets.StackedArea/","title":"presets.StackedArea","text":"<p>Vizzu / Modules / presets / StackedArea</p>"},{"location":"reference/interfaces/presets.StackedArea/#interface-stackedarea","title":"Interface: StackedArea","text":"<p>presets.StackedArea</p>"},{"location":"reference/interfaces/presets.StackedArea/#hierarchy","title":"Hierarchy","text":"<ul> <li> <p><code>Preset</code></p> <p>\u21b3 <code>StackedArea</code></p> </li> </ul>"},{"location":"reference/interfaces/presets.StackedArea/#properties","title":"Properties","text":""},{"location":"reference/interfaces/presets.StackedArea/#legend","title":"legend","text":"<p>\u2022 <code>Optional</code> legend: <code>\"color\"</code> | <code>\"size\"</code> | <code>\"lightness\"</code></p> <p>Inherited from</p> <p>Preset.legend</p>"},{"location":"reference/interfaces/presets.StackedArea/#reverse","title":"reverse","text":"<p>\u2022 <code>Optional</code> reverse: <code>boolean</code></p> <p>Inherited from</p> <p>Preset.reverse</p>"},{"location":"reference/interfaces/presets.StackedArea/#sort","title":"sort","text":"<p>\u2022 <code>Optional</code> sort: <code>\"none\"</code> | <code>\"byValue\"</code></p> <p>Inherited from</p> <p>Preset.sort</p>"},{"location":"reference/interfaces/presets.StackedArea/#stackedby","title":"stackedBy","text":"<p>\u2022 stackedBy: <code>string</code> | <code>string</code>[]</p>"},{"location":"reference/interfaces/presets.StackedArea/#title","title":"title","text":"<p>\u2022 <code>Optional</code> title: <code>string</code></p> <p>Inherited from</p> <p>Preset.title</p>"},{"location":"reference/interfaces/presets.StackedArea/#x","title":"x","text":"<p>\u2022 x: <code>string</code> | <code>string</code>[]</p>"},{"location":"reference/interfaces/presets.StackedArea/#y","title":"y","text":"<p>\u2022 y: <code>string</code> | <code>string</code>[]</p>"},{"location":"reference/interfaces/presets.StackedBar/","title":"presets.StackedBar","text":"<p>Vizzu / Modules / presets / StackedBar</p>"},{"location":"reference/interfaces/presets.StackedBar/#interface-stackedbar","title":"Interface: StackedBar","text":"<p>presets.StackedBar</p>"},{"location":"reference/interfaces/presets.StackedBar/#hierarchy","title":"Hierarchy","text":"<ul> <li> <p><code>Preset</code></p> <p>\u21b3 <code>StackedBar</code></p> </li> </ul>"},{"location":"reference/interfaces/presets.StackedBar/#properties","title":"Properties","text":""},{"location":"reference/interfaces/presets.StackedBar/#legend","title":"legend","text":"<p>\u2022 <code>Optional</code> legend: <code>\"color\"</code> | <code>\"size\"</code> | <code>\"lightness\"</code></p> <p>Inherited from</p> <p>Preset.legend</p>"},{"location":"reference/interfaces/presets.StackedBar/#reverse","title":"reverse","text":"<p>\u2022 <code>Optional</code> reverse: <code>boolean</code></p> <p>Inherited from</p> <p>Preset.reverse</p>"},{"location":"reference/interfaces/presets.StackedBar/#sort","title":"sort","text":"<p>\u2022 <code>Optional</code> sort: <code>\"none\"</code> | <code>\"byValue\"</code></p> <p>Inherited from</p> <p>Preset.sort</p>"},{"location":"reference/interfaces/presets.StackedBar/#stackedby","title":"stackedBy","text":"<p>\u2022 stackedBy: <code>string</code> | <code>string</code>[]</p>"},{"location":"reference/interfaces/presets.StackedBar/#title","title":"title","text":"<p>\u2022 <code>Optional</code> title: <code>string</code></p> <p>Inherited from</p> <p>Preset.title</p>"},{"location":"reference/interfaces/presets.StackedBar/#x","title":"x","text":"<p>\u2022 x: <code>string</code> | <code>string</code>[]</p>"},{"location":"reference/interfaces/presets.StackedBar/#y","title":"y","text":"<p>\u2022 y: <code>string</code> | <code>string</code>[]</p>"},{"location":"reference/interfaces/presets.StackedBubble/","title":"presets.StackedBubble","text":"<p>Vizzu / Modules / presets / StackedBubble</p>"},{"location":"reference/interfaces/presets.StackedBubble/#interface-stackedbubble","title":"Interface: StackedBubble","text":"<p>presets.StackedBubble</p>"},{"location":"reference/interfaces/presets.StackedBubble/#hierarchy","title":"Hierarchy","text":"<ul> <li> <p><code>Preset</code></p> <p>\u21b3 <code>StackedBubble</code></p> </li> </ul>"},{"location":"reference/interfaces/presets.StackedBubble/#properties","title":"Properties","text":""},{"location":"reference/interfaces/presets.StackedBubble/#color","title":"color","text":"<p>\u2022 color: <code>string</code> | <code>string</code>[]</p>"},{"location":"reference/interfaces/presets.StackedBubble/#legend","title":"legend","text":"<p>\u2022 <code>Optional</code> legend: <code>\"color\"</code> | <code>\"size\"</code> | <code>\"lightness\"</code></p> <p>Inherited from</p> <p>Preset.legend</p>"},{"location":"reference/interfaces/presets.StackedBubble/#reverse","title":"reverse","text":"<p>\u2022 <code>Optional</code> reverse: <code>boolean</code></p> <p>Inherited from</p> <p>Preset.reverse</p>"},{"location":"reference/interfaces/presets.StackedBubble/#size","title":"size","text":"<p>\u2022 size: <code>string</code> | <code>string</code>[]</p>"},{"location":"reference/interfaces/presets.StackedBubble/#sort","title":"sort","text":"<p>\u2022 <code>Optional</code> sort: <code>\"none\"</code> | <code>\"byValue\"</code></p> <p>Inherited from</p> <p>Preset.sort</p>"},{"location":"reference/interfaces/presets.StackedBubble/#stackedby","title":"stackedBy","text":"<p>\u2022 stackedBy: <code>string</code> | <code>string</code>[]</p>"},{"location":"reference/interfaces/presets.StackedBubble/#title","title":"title","text":"<p>\u2022 <code>Optional</code> title: <code>string</code></p> <p>Inherited from</p> <p>Preset.title</p>"},{"location":"reference/interfaces/presets.StackedColumn/","title":"presets.StackedColumn","text":"<p>Vizzu / Modules / presets / StackedColumn</p>"},{"location":"reference/interfaces/presets.StackedColumn/#interface-stackedcolumn","title":"Interface: StackedColumn","text":"<p>presets.StackedColumn</p>"},{"location":"reference/interfaces/presets.StackedColumn/#hierarchy","title":"Hierarchy","text":"<ul> <li> <p><code>Preset</code></p> <p>\u21b3 <code>StackedColumn</code></p> </li> </ul>"},{"location":"reference/interfaces/presets.StackedColumn/#properties","title":"Properties","text":""},{"location":"reference/interfaces/presets.StackedColumn/#legend","title":"legend","text":"<p>\u2022 <code>Optional</code> legend: <code>\"color\"</code> | <code>\"size\"</code> | <code>\"lightness\"</code></p> <p>Inherited from</p> <p>Preset.legend</p>"},{"location":"reference/interfaces/presets.StackedColumn/#reverse","title":"reverse","text":"<p>\u2022 <code>Optional</code> reverse: <code>boolean</code></p> <p>Inherited from</p> <p>Preset.reverse</p>"},{"location":"reference/interfaces/presets.StackedColumn/#sort","title":"sort","text":"<p>\u2022 <code>Optional</code> sort: <code>\"none\"</code> | <code>\"byValue\"</code></p> <p>Inherited from</p> <p>Preset.sort</p>"},{"location":"reference/interfaces/presets.StackedColumn/#stackedby","title":"stackedBy","text":"<p>\u2022 stackedBy: <code>string</code> | <code>string</code>[]</p>"},{"location":"reference/interfaces/presets.StackedColumn/#title","title":"title","text":"<p>\u2022 <code>Optional</code> title: <code>string</code></p> <p>Inherited from</p> <p>Preset.title</p>"},{"location":"reference/interfaces/presets.StackedColumn/#x","title":"x","text":"<p>\u2022 x: <code>string</code> | <code>string</code>[]</p>"},{"location":"reference/interfaces/presets.StackedColumn/#y","title":"y","text":"<p>\u2022 y: <code>string</code> | <code>string</code>[]</p>"},{"location":"reference/interfaces/presets.StackedTreemap/","title":"presets.StackedTreemap","text":"<p>Vizzu / Modules / presets / StackedTreemap</p>"},{"location":"reference/interfaces/presets.StackedTreemap/#interface-stackedtreemap","title":"Interface: StackedTreemap","text":"<p>presets.StackedTreemap</p>"},{"location":"reference/interfaces/presets.StackedTreemap/#hierarchy","title":"Hierarchy","text":"<ul> <li> <p><code>Preset</code></p> <p>\u21b3 <code>StackedTreemap</code></p> </li> </ul>"},{"location":"reference/interfaces/presets.StackedTreemap/#properties","title":"Properties","text":""},{"location":"reference/interfaces/presets.StackedTreemap/#color","title":"color","text":"<p>\u2022 color: <code>string</code> | <code>string</code>[]</p>"},{"location":"reference/interfaces/presets.StackedTreemap/#dividedby","title":"dividedBy","text":"<p>\u2022 dividedBy: <code>string</code> | <code>string</code>[]</p>"},{"location":"reference/interfaces/presets.StackedTreemap/#legend","title":"legend","text":"<p>\u2022 <code>Optional</code> legend: <code>\"color\"</code> | <code>\"size\"</code> | <code>\"lightness\"</code></p> <p>Inherited from</p> <p>Preset.legend</p>"},{"location":"reference/interfaces/presets.StackedTreemap/#reverse","title":"reverse","text":"<p>\u2022 <code>Optional</code> reverse: <code>boolean</code></p> <p>Inherited from</p> <p>Preset.reverse</p>"},{"location":"reference/interfaces/presets.StackedTreemap/#size","title":"size","text":"<p>\u2022 size: <code>string</code> | <code>string</code>[]</p>"},{"location":"reference/interfaces/presets.StackedTreemap/#sort","title":"sort","text":"<p>\u2022 <code>Optional</code> sort: <code>\"none\"</code> | <code>\"byValue\"</code></p> <p>Inherited from</p> <p>Preset.sort</p>"},{"location":"reference/interfaces/presets.StackedTreemap/#title","title":"title","text":"<p>\u2022 <code>Optional</code> title: <code>string</code></p> <p>Inherited from</p> <p>Preset.title</p>"},{"location":"reference/interfaces/presets.Stream/","title":"presets.Stream","text":"<p>Vizzu / Modules / presets / Stream</p>"},{"location":"reference/interfaces/presets.Stream/#interface-stream","title":"Interface: Stream","text":"<p>presets.Stream</p>"},{"location":"reference/interfaces/presets.Stream/#hierarchy","title":"Hierarchy","text":"<ul> <li> <p><code>Preset</code></p> <p>\u21b3 <code>Stream</code></p> </li> </ul>"},{"location":"reference/interfaces/presets.Stream/#properties","title":"Properties","text":""},{"location":"reference/interfaces/presets.Stream/#legend","title":"legend","text":"<p>\u2022 <code>Optional</code> legend: <code>\"color\"</code> | <code>\"size\"</code> | <code>\"lightness\"</code></p> <p>Inherited from</p> <p>Preset.legend</p>"},{"location":"reference/interfaces/presets.Stream/#reverse","title":"reverse","text":"<p>\u2022 <code>Optional</code> reverse: <code>boolean</code></p> <p>Inherited from</p> <p>Preset.reverse</p>"},{"location":"reference/interfaces/presets.Stream/#sort","title":"sort","text":"<p>\u2022 <code>Optional</code> sort: <code>\"none\"</code> | <code>\"byValue\"</code></p> <p>Inherited from</p> <p>Preset.sort</p>"},{"location":"reference/interfaces/presets.Stream/#stackedby","title":"stackedBy","text":"<p>\u2022 stackedBy: <code>string</code> | <code>string</code>[]</p>"},{"location":"reference/interfaces/presets.Stream/#title","title":"title","text":"<p>\u2022 <code>Optional</code> title: <code>string</code></p> <p>Inherited from</p> <p>Preset.title</p>"},{"location":"reference/interfaces/presets.Stream/#x","title":"x","text":"<p>\u2022 x: <code>string</code> | <code>string</code>[]</p>"},{"location":"reference/interfaces/presets.Stream/#y","title":"y","text":"<p>\u2022 y: <code>string</code> | <code>string</code>[]</p>"},{"location":"reference/interfaces/presets.Treemap/","title":"presets.Treemap","text":"<p>Vizzu / Modules / presets / Treemap</p>"},{"location":"reference/interfaces/presets.Treemap/#interface-treemap","title":"Interface: Treemap","text":"<p>presets.Treemap</p>"},{"location":"reference/interfaces/presets.Treemap/#hierarchy","title":"Hierarchy","text":"<ul> <li> <p><code>Preset</code></p> <p>\u21b3 <code>Treemap</code></p> </li> </ul>"},{"location":"reference/interfaces/presets.Treemap/#properties","title":"Properties","text":""},{"location":"reference/interfaces/presets.Treemap/#color","title":"color","text":"<p>\u2022 color: <code>string</code> | <code>string</code>[]</p>"},{"location":"reference/interfaces/presets.Treemap/#legend","title":"legend","text":"<p>\u2022 <code>Optional</code> legend: <code>\"color\"</code> | <code>\"size\"</code> | <code>\"lightness\"</code></p> <p>Inherited from</p> <p>Preset.legend</p>"},{"location":"reference/interfaces/presets.Treemap/#reverse","title":"reverse","text":"<p>\u2022 <code>Optional</code> reverse: <code>boolean</code></p> <p>Inherited from</p> <p>Preset.reverse</p>"},{"location":"reference/interfaces/presets.Treemap/#size","title":"size","text":"<p>\u2022 size: <code>string</code> | <code>string</code>[]</p>"},{"location":"reference/interfaces/presets.Treemap/#sort","title":"sort","text":"<p>\u2022 <code>Optional</code> sort: <code>\"none\"</code> | <code>\"byValue\"</code></p> <p>Inherited from</p> <p>Preset.sort</p>"},{"location":"reference/interfaces/presets.Treemap/#title","title":"title","text":"<p>\u2022 <code>Optional</code> title: <code>string</code></p> <p>Inherited from</p> <p>Preset.title</p>"},{"location":"reference/interfaces/presets.VariableRadiusPie/","title":"presets.VariableRadiusPie","text":"<p>Vizzu / Modules / presets / VariableRadiusPie</p>"},{"location":"reference/interfaces/presets.VariableRadiusPie/#interface-variableradiuspie","title":"Interface: VariableRadiusPie","text":"<p>presets.VariableRadiusPie</p>"},{"location":"reference/interfaces/presets.VariableRadiusPie/#hierarchy","title":"Hierarchy","text":"<ul> <li> <p><code>Preset</code></p> <p>\u21b3 <code>VariableRadiusPie</code></p> </li> </ul>"},{"location":"reference/interfaces/presets.VariableRadiusPie/#properties","title":"Properties","text":""},{"location":"reference/interfaces/presets.VariableRadiusPie/#angle","title":"angle","text":"<p>\u2022 angle: <code>string</code> | <code>string</code>[]</p>"},{"location":"reference/interfaces/presets.VariableRadiusPie/#by","title":"by","text":"<p>\u2022 by: <code>string</code> | <code>string</code>[]</p>"},{"location":"reference/interfaces/presets.VariableRadiusPie/#legend","title":"legend","text":"<p>\u2022 <code>Optional</code> legend: <code>\"color\"</code> | <code>\"size\"</code> | <code>\"lightness\"</code></p> <p>Inherited from</p> <p>Preset.legend</p>"},{"location":"reference/interfaces/presets.VariableRadiusPie/#radius","title":"radius","text":"<p>\u2022 radius: <code>string</code> | <code>string</code>[]</p>"},{"location":"reference/interfaces/presets.VariableRadiusPie/#reverse","title":"reverse","text":"<p>\u2022 <code>Optional</code> reverse: <code>boolean</code></p> <p>Inherited from</p> <p>Preset.reverse</p>"},{"location":"reference/interfaces/presets.VariableRadiusPie/#sort","title":"sort","text":"<p>\u2022 <code>Optional</code> sort: <code>\"none\"</code> | <code>\"byValue\"</code></p> <p>Inherited from</p> <p>Preset.sort</p>"},{"location":"reference/interfaces/presets.VariableRadiusPie/#title","title":"title","text":"<p>\u2022 <code>Optional</code> title: <code>string</code></p> <p>Inherited from</p> <p>Preset.title</p>"},{"location":"reference/interfaces/presets.VerticalLine/","title":"presets.VerticalLine","text":"<p>Vizzu / Modules / presets / VerticalLine</p>"},{"location":"reference/interfaces/presets.VerticalLine/#interface-verticalline","title":"Interface: VerticalLine","text":"<p>presets.VerticalLine</p>"},{"location":"reference/interfaces/presets.VerticalLine/#hierarchy","title":"Hierarchy","text":"<ul> <li> <p><code>Preset</code></p> <p>\u21b3 <code>VerticalLine</code></p> </li> </ul>"},{"location":"reference/interfaces/presets.VerticalLine/#properties","title":"Properties","text":""},{"location":"reference/interfaces/presets.VerticalLine/#dividedby","title":"dividedBy","text":"<p>\u2022 dividedBy: <code>string</code> | <code>string</code>[]</p>"},{"location":"reference/interfaces/presets.VerticalLine/#legend","title":"legend","text":"<p>\u2022 <code>Optional</code> legend: <code>\"color\"</code> | <code>\"size\"</code> | <code>\"lightness\"</code></p> <p>Inherited from</p> <p>Preset.legend</p>"},{"location":"reference/interfaces/presets.VerticalLine/#reverse","title":"reverse","text":"<p>\u2022 <code>Optional</code> reverse: <code>boolean</code></p> <p>Inherited from</p> <p>Preset.reverse</p>"},{"location":"reference/interfaces/presets.VerticalLine/#sort","title":"sort","text":"<p>\u2022 <code>Optional</code> sort: <code>\"none\"</code> | <code>\"byValue\"</code></p> <p>Inherited from</p> <p>Preset.sort</p>"},{"location":"reference/interfaces/presets.VerticalLine/#title","title":"title","text":"<p>\u2022 <code>Optional</code> title: <code>string</code></p> <p>Inherited from</p> <p>Preset.title</p>"},{"location":"reference/interfaces/presets.VerticalLine/#x","title":"x","text":"<p>\u2022 x: <code>string</code> | <code>string</code>[]</p>"},{"location":"reference/interfaces/presets.VerticalLine/#y","title":"y","text":"<p>\u2022 y: <code>string</code> | <code>string</code>[]</p>"},{"location":"reference/interfaces/presets.VerticalStream/","title":"presets.VerticalStream","text":"<p>Vizzu / Modules / presets / VerticalStream</p>"},{"location":"reference/interfaces/presets.VerticalStream/#interface-verticalstream","title":"Interface: VerticalStream","text":"<p>presets.VerticalStream</p>"},{"location":"reference/interfaces/presets.VerticalStream/#hierarchy","title":"Hierarchy","text":"<ul> <li> <p><code>Preset</code></p> <p>\u21b3 <code>VerticalStream</code></p> </li> </ul>"},{"location":"reference/interfaces/presets.VerticalStream/#properties","title":"Properties","text":""},{"location":"reference/interfaces/presets.VerticalStream/#legend","title":"legend","text":"<p>\u2022 <code>Optional</code> legend: <code>\"color\"</code> | <code>\"size\"</code> | <code>\"lightness\"</code></p> <p>Inherited from</p> <p>Preset.legend</p>"},{"location":"reference/interfaces/presets.VerticalStream/#reverse","title":"reverse","text":"<p>\u2022 <code>Optional</code> reverse: <code>boolean</code></p> <p>Inherited from</p> <p>Preset.reverse</p>"},{"location":"reference/interfaces/presets.VerticalStream/#sort","title":"sort","text":"<p>\u2022 <code>Optional</code> sort: <code>\"none\"</code> | <code>\"byValue\"</code></p> <p>Inherited from</p> <p>Preset.sort</p>"},{"location":"reference/interfaces/presets.VerticalStream/#stackedby","title":"stackedBy","text":"<p>\u2022 stackedBy: <code>string</code> | <code>string</code>[]</p>"},{"location":"reference/interfaces/presets.VerticalStream/#title","title":"title","text":"<p>\u2022 <code>Optional</code> title: <code>string</code></p> <p>Inherited from</p> <p>Preset.title</p>"},{"location":"reference/interfaces/presets.VerticalStream/#x","title":"x","text":"<p>\u2022 x: <code>string</code> | <code>string</code>[]</p>"},{"location":"reference/interfaces/presets.VerticalStream/#y","title":"y","text":"<p>\u2022 y: <code>string</code> | <code>string</code>[]</p>"},{"location":"reference/interfaces/presets.VerticalViolin/","title":"presets.VerticalViolin","text":"<p>Vizzu / Modules / presets / VerticalViolin</p>"},{"location":"reference/interfaces/presets.VerticalViolin/#interface-verticalviolin","title":"Interface: VerticalViolin","text":"<p>presets.VerticalViolin</p>"},{"location":"reference/interfaces/presets.VerticalViolin/#hierarchy","title":"Hierarchy","text":"<ul> <li> <p><code>Preset</code></p> <p>\u21b3 <code>VerticalViolin</code></p> </li> </ul>"},{"location":"reference/interfaces/presets.VerticalViolin/#properties","title":"Properties","text":""},{"location":"reference/interfaces/presets.VerticalViolin/#legend","title":"legend","text":"<p>\u2022 <code>Optional</code> legend: <code>\"color\"</code> | <code>\"size\"</code> | <code>\"lightness\"</code></p> <p>Inherited from</p> <p>Preset.legend</p>"},{"location":"reference/interfaces/presets.VerticalViolin/#reverse","title":"reverse","text":"<p>\u2022 <code>Optional</code> reverse: <code>boolean</code></p> <p>Inherited from</p> <p>Preset.reverse</p>"},{"location":"reference/interfaces/presets.VerticalViolin/#sort","title":"sort","text":"<p>\u2022 <code>Optional</code> sort: <code>\"none\"</code> | <code>\"byValue\"</code></p> <p>Inherited from</p> <p>Preset.sort</p>"},{"location":"reference/interfaces/presets.VerticalViolin/#splittedby","title":"splittedBy","text":"<p>\u2022 splittedBy: <code>string</code> | <code>string</code>[]</p>"},{"location":"reference/interfaces/presets.VerticalViolin/#title","title":"title","text":"<p>\u2022 <code>Optional</code> title: <code>string</code></p> <p>Inherited from</p> <p>Preset.title</p>"},{"location":"reference/interfaces/presets.VerticalViolin/#x","title":"x","text":"<p>\u2022 x: <code>string</code> | <code>string</code>[]</p>"},{"location":"reference/interfaces/presets.VerticalViolin/#y","title":"y","text":"<p>\u2022 y: <code>string</code> | <code>string</code>[]</p>"},{"location":"reference/interfaces/presets.Violin/","title":"presets.Violin","text":"<p>Vizzu / Modules / presets / Violin</p>"},{"location":"reference/interfaces/presets.Violin/#interface-violin","title":"Interface: Violin","text":"<p>presets.Violin</p>"},{"location":"reference/interfaces/presets.Violin/#hierarchy","title":"Hierarchy","text":"<ul> <li> <p><code>Preset</code></p> <p>\u21b3 <code>Violin</code></p> </li> </ul>"},{"location":"reference/interfaces/presets.Violin/#properties","title":"Properties","text":""},{"location":"reference/interfaces/presets.Violin/#legend","title":"legend","text":"<p>\u2022 <code>Optional</code> legend: <code>\"color\"</code> | <code>\"size\"</code> | <code>\"lightness\"</code></p> <p>Inherited from</p> <p>Preset.legend</p>"},{"location":"reference/interfaces/presets.Violin/#reverse","title":"reverse","text":"<p>\u2022 <code>Optional</code> reverse: <code>boolean</code></p> <p>Inherited from</p> <p>Preset.reverse</p>"},{"location":"reference/interfaces/presets.Violin/#sort","title":"sort","text":"<p>\u2022 <code>Optional</code> sort: <code>\"none\"</code> | <code>\"byValue\"</code></p> <p>Inherited from</p> <p>Preset.sort</p>"},{"location":"reference/interfaces/presets.Violin/#splittedby","title":"splittedBy","text":"<p>\u2022 splittedBy: <code>string</code> | <code>string</code>[]</p>"},{"location":"reference/interfaces/presets.Violin/#title","title":"title","text":"<p>\u2022 <code>Optional</code> title: <code>string</code></p> <p>Inherited from</p> <p>Preset.title</p>"},{"location":"reference/interfaces/presets.Violin/#x","title":"x","text":"<p>\u2022 x: <code>string</code> | <code>string</code>[]</p>"},{"location":"reference/interfaces/presets.Violin/#y","title":"y","text":"<p>\u2022 y: <code>string</code> | <code>string</code>[]</p>"},{"location":"reference/interfaces/presets.Waterfall/","title":"presets.Waterfall","text":"<p>Vizzu / Modules / presets / Waterfall</p>"},{"location":"reference/interfaces/presets.Waterfall/#interface-waterfall","title":"Interface: Waterfall","text":"<p>presets.Waterfall</p>"},{"location":"reference/interfaces/presets.Waterfall/#hierarchy","title":"Hierarchy","text":"<ul> <li> <p><code>Preset</code></p> <p>\u21b3 <code>Waterfall</code></p> </li> </ul>"},{"location":"reference/interfaces/presets.Waterfall/#properties","title":"Properties","text":""},{"location":"reference/interfaces/presets.Waterfall/#legend","title":"legend","text":"<p>\u2022 <code>Optional</code> legend: <code>\"color\"</code> | <code>\"size\"</code> | <code>\"lightness\"</code></p> <p>Inherited from</p> <p>Preset.legend</p>"},{"location":"reference/interfaces/presets.Waterfall/#reverse","title":"reverse","text":"<p>\u2022 <code>Optional</code> reverse: <code>boolean</code></p> <p>Inherited from</p> <p>Preset.reverse</p>"},{"location":"reference/interfaces/presets.Waterfall/#sort","title":"sort","text":"<p>\u2022 <code>Optional</code> sort: <code>\"none\"</code> | <code>\"byValue\"</code></p> <p>Inherited from</p> <p>Preset.sort</p>"},{"location":"reference/interfaces/presets.Waterfall/#title","title":"title","text":"<p>\u2022 <code>Optional</code> title: <code>string</code></p> <p>Inherited from</p> <p>Preset.title</p>"},{"location":"reference/interfaces/presets.Waterfall/#x","title":"x","text":"<p>\u2022 x: <code>string</code> | <code>string</code>[]</p>"},{"location":"reference/interfaces/presets.Waterfall/#y","title":"y","text":"<p>\u2022 y: <code>string</code> | <code>string</code>[]</p>"},{"location":"reference/interfaces/vizzu.Anim.Animation/","title":"vizzu.Anim.Animation","text":"<p>Vizzu / Modules / vizzu / Anim / Animation</p>"},{"location":"reference/interfaces/vizzu.Anim.Animation/#interface-animation","title":"Interface: Animation","text":"<p>vizzu.Anim.Animation</p> <p>Stored Animation object.</p>"},{"location":"reference/interfaces/vizzu.Anim.Animation/#properties","title":"Properties","text":""},{"location":"reference/interfaces/vizzu.Anim.Animation/#id","title":"id","text":"<p>\u2022 id: <code>number</code></p>"},{"location":"reference/interfaces/vizzu.Anim.Completing/","title":"vizzu.Anim.Completing","text":"<p>Vizzu / Modules / vizzu / Anim / Completing</p>"},{"location":"reference/interfaces/vizzu.Anim.Completing/#interface-completing","title":"Interface: Completing","text":"<p>vizzu.Anim.Completing</p> <p>Promise resolves to the Vizzu object when the animation completed.</p>"},{"location":"reference/interfaces/vizzu.Anim.Completing/#hierarchy","title":"Hierarchy","text":"<ul> <li> <p><code>Promise</code>\\&lt;<code>Vizzu</code>&gt;</p> <p>\u21b3 <code>Completing</code></p> </li> </ul>"},{"location":"reference/interfaces/vizzu.Anim.Completing/#properties","title":"Properties","text":""},{"location":"reference/interfaces/vizzu.Anim.Completing/#tostringtag","title":"[toStringTag]","text":"<p>\u2022 <code>Readonly</code> [toStringTag]: <code>string</code></p> <p>Inherited from</p> <p>Promise.__@toStringTag@23</p>"},{"location":"reference/interfaces/vizzu.Anim.Completing/#activated","title":"activated","text":"<p>\u2022 activated: <code>Promise</code>\\&lt;<code>Control</code>&gt;</p> <p>Promise resolves to the animation controller object when the animation starts.</p>"},{"location":"reference/interfaces/vizzu.Anim.Completing/#methods","title":"Methods","text":""},{"location":"reference/interfaces/vizzu.Anim.Completing/#catch","title":"catch","text":"<p>\u25b8 catch\\&lt;<code>TResult</code>&gt;(<code>onrejected?</code>): <code>Promise</code>\\&lt;<code>Vizzu</code> | <code>TResult</code>&gt;</p> <p>Attaches a callback for only the rejection of the Promise.</p> <p>Type parameters</p> Name Type <code>TResult</code> <code>never</code> <p>Parameters</p> Name Type Description <code>onrejected?</code> (<code>reason</code>: <code>any</code>) =&gt; <code>TResult</code> | <code>PromiseLike</code>\\&lt;<code>TResult</code>&gt; The callback to execute when the Promise is rejected. <p>Returns</p> <p><code>Promise</code>\\&lt;<code>Vizzu</code> | <code>TResult</code>&gt;</p> <p>A Promise for the completion of the callback.</p> <p>Inherited from</p> <p>Promise.catch</p>"},{"location":"reference/interfaces/vizzu.Anim.Completing/#finally","title":"finally","text":"<p>\u25b8 finally(<code>onfinally?</code>): <code>Promise</code>\\&lt;<code>Vizzu</code>&gt;</p> <p>Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The resolved value cannot be modified from the callback.</p> <p>Parameters</p> Name Type Description <code>onfinally?</code> () =&gt; <code>void</code> The callback to execute when the Promise is settled (fulfilled or rejected). <p>Returns</p> <p><code>Promise</code>\\&lt;<code>Vizzu</code>&gt;</p> <p>A Promise for the completion of the callback.</p> <p>Inherited from</p> <p>Promise.finally</p>"},{"location":"reference/interfaces/vizzu.Anim.Completing/#then","title":"then","text":"<p>\u25b8 then\\&lt;<code>TResult1</code>, <code>TResult2</code>&gt;(<code>onfulfilled?</code>, <code>onrejected?</code>): <code>Promise</code>\\&lt;<code>TResult1</code> | <code>TResult2</code>&gt;</p> <p>Attaches callbacks for the resolution and/or rejection of the Promise.</p> <p>Type parameters</p> Name Type <code>TResult1</code> <code>Vizzu</code> <code>TResult2</code> <code>never</code> <p>Parameters</p> Name Type Description <code>onfulfilled?</code> (<code>value</code>: <code>Vizzu</code>) =&gt; <code>TResult1</code> | <code>PromiseLike</code>\\&lt;<code>TResult1</code>&gt; The callback to execute when the Promise is resolved. <code>onrejected?</code> (<code>reason</code>: <code>any</code>) =&gt; <code>TResult2</code> | <code>PromiseLike</code>\\&lt;<code>TResult2</code>&gt; The callback to execute when the Promise is rejected. <p>Returns</p> <p><code>Promise</code>\\&lt;<code>TResult1</code> | <code>TResult2</code>&gt;</p> <p>A Promise for the completion of which ever callback is executed.</p> <p>Inherited from</p> <p>Promise.then</p>"},{"location":"reference/interfaces/vizzu.Anim.Control/","title":"vizzu.Anim.Control","text":"<p>Vizzu / Modules / vizzu / Anim / Control</p>"},{"location":"reference/interfaces/vizzu.Anim.Control/#interface-control","title":"Interface: Control","text":"<p>vizzu.Anim.Control</p> <p>Control object for animation.</p>"},{"location":"reference/interfaces/vizzu.Anim.Control/#methods","title":"Methods","text":""},{"location":"reference/interfaces/vizzu.Anim.Control/#cancel","title":"cancel","text":"<p>\u25b8 cancel(): <code>void</code></p> <p>Cancels the animation, will reject the animation promise.</p> <p>Returns</p> <p><code>void</code></p>"},{"location":"reference/interfaces/vizzu.Anim.Control/#pause","title":"pause","text":"<p>\u25b8 pause(): <code>void</code></p> <p>Pauses the controlled animation.</p> <p>Returns</p> <p><code>void</code></p>"},{"location":"reference/interfaces/vizzu.Anim.Control/#play","title":"play","text":"<p>\u25b8 play(): <code>void</code></p> <p>Plays/resumes playing of the controlled animation.</p> <p>Returns</p> <p><code>void</code></p>"},{"location":"reference/interfaces/vizzu.Anim.Control/#reverse","title":"reverse","text":"<p>\u25b8 reverse(): <code>void</code></p> <p>Changes the direction of the controlled animation.</p> <p>Returns</p> <p><code>void</code></p>"},{"location":"reference/interfaces/vizzu.Anim.Control/#seek","title":"seek","text":"<p>\u25b8 seek(<code>value</code>): <code>void</code></p> <p>Seeks the animation to the position specified by time or progress percentage. Seeking the animation to the end position will not trigger the animation promise to resolve.</p> <p>Parameters</p> Name Type <code>value</code> `${number}%` | <code>Duration</code> <p>Returns</p> <p><code>void</code></p>"},{"location":"reference/interfaces/vizzu.Anim.Control/#stop","title":"stop","text":"<p>\u25b8 stop(): <code>void</code></p> <p>Stops the current animation seeking it back to its start position.</p> <p>Returns</p> <p><code>void</code></p>"},{"location":"reference/interfaces/vizzu.Anim.Control/#store","title":"store","text":"<p>\u25b8 store(): <code>Animation</code></p> <p>Returns a reference to the actual animation for further reuse.</p> <p>Returns</p> <p><code>Animation</code></p>"},{"location":"reference/interfaces/vizzu.Anim.ControlOptions/","title":"vizzu.Anim.ControlOptions","text":"<p>Vizzu / Modules / vizzu / Anim / ControlOptions</p>"},{"location":"reference/interfaces/vizzu.Anim.ControlOptions/#interface-controloptions","title":"Interface: ControlOptions","text":"<p>vizzu.Anim.ControlOptions</p>"},{"location":"reference/interfaces/vizzu.Anim.ControlOptions/#properties","title":"Properties","text":""},{"location":"reference/interfaces/vizzu.Anim.ControlOptions/#direction","title":"direction","text":"<p>\u2022 <code>Optional</code> direction: <code>\"reverse\"</code> | <code>\"normal\"</code></p> <p>Play direction of the animation.</p>"},{"location":"reference/interfaces/vizzu.Anim.ControlOptions/#playstate","title":"playState","text":"<p>\u2022 <code>Optional</code> playState: <code>\"paused\"</code> | <code>\"running\"</code></p> <p>Determines if the animation should start automatically after the animate() call.</p>"},{"location":"reference/interfaces/vizzu.Anim.ControlOptions/#position","title":"position","text":"<p>\u2022 <code>Optional</code> position: <code>number</code></p> <p>The starting position of the animation.</p>"},{"location":"reference/interfaces/vizzu.Anim.GroupOptions/","title":"vizzu.Anim.GroupOptions","text":"<p>Vizzu / Modules / vizzu / Anim / GroupOptions</p>"},{"location":"reference/interfaces/vizzu.Anim.GroupOptions/#interface-groupoptions","title":"Interface: GroupOptions","text":"<p>vizzu.Anim.GroupOptions</p> <p>Animation parameters for an animation group.</p>"},{"location":"reference/interfaces/vizzu.Anim.GroupOptions/#hierarchy","title":"Hierarchy","text":"<ul> <li> <p><code>GroupOptions</code></p> <p>\u21b3 <code>Options</code></p> </li> </ul>"},{"location":"reference/interfaces/vizzu.Anim.GroupOptions/#properties","title":"Properties","text":""},{"location":"reference/interfaces/vizzu.Anim.GroupOptions/#delay","title":"delay","text":"<p>\u2022 <code>Optional</code> delay: <code>Duration</code></p> <p>Waiting time interval before the animation starts.</p>"},{"location":"reference/interfaces/vizzu.Anim.GroupOptions/#duration","title":"duration","text":"<p>\u2022 <code>Optional</code> duration: <code>Duration</code></p> <p>The length of time an animation should take to complete.</p>"},{"location":"reference/interfaces/vizzu.Anim.GroupOptions/#easing","title":"easing","text":"<p>\u2022 <code>Optional</code> easing: <code>Easing</code></p> <p>Sets the easing used for the animation.</p>"},{"location":"reference/interfaces/vizzu.Anim.Keyframe/","title":"vizzu.Anim.Keyframe","text":"<p>Vizzu / Modules / vizzu / Anim / Keyframe</p>"},{"location":"reference/interfaces/vizzu.Anim.Keyframe/#interface-keyframe","title":"Interface: Keyframe","text":"<p>vizzu.Anim.Keyframe</p> <p>Object for describing a single animation target chart state and the options of the animation to this chart state.</p>"},{"location":"reference/interfaces/vizzu.Anim.Keyframe/#properties","title":"Properties","text":""},{"location":"reference/interfaces/vizzu.Anim.Keyframe/#options","title":"options","text":"<p>\u2022 <code>Optional</code> options: <code>LazyOptions</code></p>"},{"location":"reference/interfaces/vizzu.Anim.Keyframe/#target","title":"target","text":"<p>\u2022 target: <code>LazyTarget</code></p>"},{"location":"reference/interfaces/vizzu.Anim.Options/","title":"vizzu.Anim.Options","text":"<p>Vizzu / Modules / vizzu / Anim / Options</p>"},{"location":"reference/interfaces/vizzu.Anim.Options/#interface-options","title":"Interface: Options","text":"<p>vizzu.Anim.Options</p> <p>If no animation settings are passed to Vizzu, it will use an automatic setting depending on the actual configuration of the chart. This behavior can be overridden via the animation setting parameter.</p> <p>The animation between two states of the chart can require the transitioning of several different chart properties. These properties are grouped into separately configurable animation groups.</p> <p>The parameters can also be set for the animation as a whole. These settings rescale the durations and delays of the animation groups to the specified total delay and duration.</p>"},{"location":"reference/interfaces/vizzu.Anim.Options/#hierarchy","title":"Hierarchy","text":"<ul> <li> <p><code>GroupOptions</code></p> <p>\u21b3 <code>Options</code></p> </li> </ul>"},{"location":"reference/interfaces/vizzu.Anim.Options/#properties","title":"Properties","text":""},{"location":"reference/interfaces/vizzu.Anim.Options/#color","title":"color","text":"<p>\u2022 <code>Optional</code> color: <code>GroupOptions</code></p> <p>Marker color animation group.</p>"},{"location":"reference/interfaces/vizzu.Anim.Options/#coordsystem","title":"coordSystem","text":"<p>\u2022 <code>Optional</code> coordSystem: <code>GroupOptions</code></p> <p>Coordinate system transformations animation group.</p>"},{"location":"reference/interfaces/vizzu.Anim.Options/#delay","title":"delay","text":"<p>\u2022 <code>Optional</code> delay: <code>Duration</code></p> <p>Waiting time interval before the animation starts.</p> <p>Inherited from</p> <p>GroupOptions.delay</p>"},{"location":"reference/interfaces/vizzu.Anim.Options/#duration","title":"duration","text":"<p>\u2022 <code>Optional</code> duration: <code>Duration</code></p> <p>The length of time an animation should take to complete.</p> <p>Inherited from</p> <p>GroupOptions.duration</p>"},{"location":"reference/interfaces/vizzu.Anim.Options/#easing","title":"easing","text":"<p>\u2022 <code>Optional</code> easing: <code>Easing</code></p> <p>Sets the easing used for the animation.</p> <p>Inherited from</p> <p>GroupOptions.easing</p>"},{"location":"reference/interfaces/vizzu.Anim.Options/#geometry","title":"geometry","text":"<p>\u2022 <code>Optional</code> geometry: <code>GroupOptions</code></p> <p>Marker geometry morph animation group.</p>"},{"location":"reference/interfaces/vizzu.Anim.Options/#hide","title":"hide","text":"<p>\u2022 <code>Optional</code> hide: <code>GroupOptions</code></p> <p>Animation group for markers fading out (due to filtering or added/removed data series).</p>"},{"location":"reference/interfaces/vizzu.Anim.Options/#legend","title":"legend","text":"<p>\u2022 <code>Optional</code> legend: <code>GroupOptions</code></p> <p>Legend animation parameters.</p>"},{"location":"reference/interfaces/vizzu.Anim.Options/#regroupstrategy","title":"regroupStrategy","text":"<p>\u2022 <code>Optional</code> regroupStrategy: <code>RegroupStrategy</code></p> <p>Selects the algorithm for transition in case of data grouped differently on the source and target chart.</p>"},{"location":"reference/interfaces/vizzu.Anim.Options/#show","title":"show","text":"<p>\u2022 <code>Optional</code> show: <code>GroupOptions</code></p> <p>Animation group for new markers fading in (due to filtering or added/removed data series).</p>"},{"location":"reference/interfaces/vizzu.Anim.Options/#style","title":"style","text":"<p>\u2022 <code>Optional</code> style: <code>GroupOptions</code></p> <p>Animation group for style parameters.</p>"},{"location":"reference/interfaces/vizzu.Anim.Options/#title","title":"title","text":"<p>\u2022 <code>Optional</code> title: <code>GroupOptions</code></p> <p>Title animation parameters.</p>"},{"location":"reference/interfaces/vizzu.Anim.Options/#tooltip","title":"tooltip","text":"<p>\u2022 <code>Optional</code> tooltip: <code>GroupOptions</code></p> <p>Animation group for tooltip transitions.</p>"},{"location":"reference/interfaces/vizzu.Anim.Options/#x","title":"x","text":"<p>\u2022 <code>Optional</code> x: <code>GroupOptions</code></p> <p>Animation group for marker transitions in the direction of the x-axis.</p>"},{"location":"reference/interfaces/vizzu.Anim.Options/#y","title":"y","text":"<p>\u2022 <code>Optional</code> y: <code>GroupOptions</code></p> <p>Animation group for marker transitions in the direction of the y-axis.</p>"},{"location":"reference/interfaces/vizzu.Anim.Target/","title":"vizzu.Anim.Target","text":"<p>Vizzu / Modules / vizzu / Anim / Target</p>"},{"location":"reference/interfaces/vizzu.Anim.Target/#interface-target","title":"Interface: Target","text":"<p>vizzu.Anim.Target</p> <p>Represents a state in the animation describing the data, the chart, and the style parameters to be changed from the actual state. Passing null as style will reset every style parameter to default.</p>"},{"location":"reference/interfaces/vizzu.Anim.Target/#properties","title":"Properties","text":""},{"location":"reference/interfaces/vizzu.Anim.Target/#config","title":"config","text":"<p>\u2022 <code>Optional</code> config: <code>Chart</code></p> <p>Chart configuration changes.</p>"},{"location":"reference/interfaces/vizzu.Anim.Target/#data","title":"data","text":"<p>\u2022 <code>Optional</code> data: <code>Set</code></p> <p>Data set.</p>"},{"location":"reference/interfaces/vizzu.Anim.Target/#style","title":"style","text":"<p>\u2022 <code>Optional</code> style: <code>Chart</code></p> <p>Style changes.</p>"},{"location":"reference/interfaces/vizzu.Config.Channel/","title":"vizzu.Config.Channel","text":"<p>Vizzu / Modules / vizzu / Config / Channel</p>"},{"location":"reference/interfaces/vizzu.Config.Channel/#interface-channel","title":"Interface: Channel","text":"<p>vizzu.Config.Channel</p> <p>Channels are the main building blocks of the chart. Each channel describes a particular aspect of the markers (vertical &amp; horizontal position, color, etc.) and connects them to the underlying data. A single measure and an ordered list of dimensions can be on each channel. The dimensions will recursively slice the measure on the channel. The channels are represented on the chart as an axis or legend.</p>"},{"location":"reference/interfaces/vizzu.Config.Channel/#properties","title":"Properties","text":""},{"location":"reference/interfaces/vizzu.Config.Channel/#attach","title":"attach","text":"<p>\u2022 <code>Optional</code> attach: <code>SeriesList</code></p> <p>List of data series names to be added to the channel beside the ones already added.</p>"},{"location":"reference/interfaces/vizzu.Config.Channel/#axis","title":"axis","text":"<p>\u2022 <code>Optional</code> axis: <code>boolean</code> | <code>\"auto\"</code></p> <p>Enables the axis line on axis channels.</p>"},{"location":"reference/interfaces/vizzu.Config.Channel/#detach","title":"detach","text":"<p>\u2022 <code>Optional</code> detach: <code>SeriesList</code></p> <p>List of data series names to be removed from the channel.</p>"},{"location":"reference/interfaces/vizzu.Config.Channel/#guides","title":"guides","text":"<p>\u2022 <code>Optional</code> guides: <code>boolean</code> | <code>\"auto\"</code></p> <p>Enables the grid lines on axis channels showing dimension data.</p>"},{"location":"reference/interfaces/vizzu.Config.Channel/#interlacing","title":"interlacing","text":"<p>\u2022 <code>Optional</code> interlacing: <code>boolean</code> | <code>\"auto\"</code></p> <p>Enables the interlacing on axis channels showing measure data.</p>"},{"location":"reference/interfaces/vizzu.Config.Channel/#labellevel","title":"labelLevel","text":"<p>\u2022 <code>Optional</code> labelLevel: <code>number</code></p> <p>Only one dimension can be shown on an axis or legend by name. This index specifies which attached series should be used.</p>"},{"location":"reference/interfaces/vizzu.Config.Channel/#labels","title":"labels","text":"<p>\u2022 <code>Optional</code> labels: <code>boolean</code> | <code>\"auto\"</code></p> <p>Enables the axis labels on axis channels.</p>"},{"location":"reference/interfaces/vizzu.Config.Channel/#markerguides","title":"markerGuides","text":"<p>\u2022 <code>Optional</code> markerGuides: <code>boolean</code> | <code>\"auto\"</code></p> <p>Enables the guide lines on axis channels showing measure data for all marker positions.</p>"},{"location":"reference/interfaces/vizzu.Config.Channel/#range","title":"range","text":"<p>\u2022 <code>Optional</code> range: <code>ChannelRange</code></p> <p>Specifies the range that determines how the represented data scales on the channel.</p>"},{"location":"reference/interfaces/vizzu.Config.Channel/#set","title":"set","text":"<p>\u2022 <code>Optional</code> set: <code>SeriesList</code></p> <p>List of data series names on the channel.</p>"},{"location":"reference/interfaces/vizzu.Config.Channel/#ticks","title":"ticks","text":"<p>\u2022 <code>Optional</code> ticks: <code>boolean</code> | <code>\"auto\"</code></p> <p>Enables the axis ticks on axis channels showing measure data.</p>"},{"location":"reference/interfaces/vizzu.Config.Channel/#title","title":"title","text":"<p>\u2022 <code>Optional</code> title: <code>string</code></p> <p>This title is shown on the axis or legend corresponding to the channel. If 'auto', the title will be the name of the measure attached to that channel.</p>"},{"location":"reference/interfaces/vizzu.Config.ChannelRange/","title":"vizzu.Config.ChannelRange","text":"<p>Vizzu / Modules / vizzu / Config / ChannelRange</p>"},{"location":"reference/interfaces/vizzu.Config.ChannelRange/#interface-channelrange","title":"Interface: ChannelRange","text":"<p>vizzu.Config.ChannelRange</p> <p>Channel range specifies how to scale the represented data.</p>"},{"location":"reference/interfaces/vizzu.Config.ChannelRange/#properties","title":"Properties","text":""},{"location":"reference/interfaces/vizzu.Config.ChannelRange/#max","title":"max","text":"<p>\u2022 <code>Optional</code> max: <code>ChannelExtrema</code></p>"},{"location":"reference/interfaces/vizzu.Config.ChannelRange/#min","title":"min","text":"<p>\u2022 <code>Optional</code> min: <code>ChannelExtrema</code></p>"},{"location":"reference/interfaces/vizzu.Config.Channels/","title":"vizzu.Config.Channels","text":"<p>Vizzu / Modules / vizzu / Config / Channels</p>"},{"location":"reference/interfaces/vizzu.Config.Channels/#interface-channels","title":"Interface: Channels","text":"<p>vizzu.Config.Channels</p> <p>Channel configuration. A data series' name or a list of the data series' names can be used as a short-hand - instead of the channel object - to set data series for the channel. Setting a channel to null will remove all data series from it.</p>"},{"location":"reference/interfaces/vizzu.Config.Channels/#hierarchy","title":"Hierarchy","text":"<ul> <li> <p><code>Channels</code></p> <p>\u21b3 <code>Chart</code></p> </li> </ul>"},{"location":"reference/interfaces/vizzu.Config.Channels/#properties","title":"Properties","text":""},{"location":"reference/interfaces/vizzu.Config.Channels/#color","title":"color","text":"<p>\u2022 <code>Optional</code> color: <code>SeriesList</code> | <code>Channel</code></p> <p>Parameters for the markers' base color. The markers' actual color can also be affected by the lightness channel.</p>"},{"location":"reference/interfaces/vizzu.Config.Channels/#label","title":"label","text":"<p>\u2022 <code>Optional</code> label: <code>SeriesList</code> | <code>Channel</code></p> <p>Parameters for the content of the labels that appear on the markers.</p>"},{"location":"reference/interfaces/vizzu.Config.Channels/#lightness","title":"lightness","text":"<p>\u2022 <code>Optional</code> lightness: <code>SeriesList</code> | <code>Channel</code></p> <p>Parameters for markers' lightness.</p>"},{"location":"reference/interfaces/vizzu.Config.Channels/#noop","title":"noop","text":"<p>\u2022 <code>Optional</code> noop: <code>SeriesList</code> | <code>Channel</code></p> <p>Splits the markers as all the other channels, but have no effect on the markers' appearance. Thus, it only works with dimensions.</p>"},{"location":"reference/interfaces/vizzu.Config.Channels/#size","title":"size","text":"<p>\u2022 <code>Optional</code> size: <code>SeriesList</code> | <code>Channel</code></p> <p>Parameters for the markers' size. Effective only for circle and line geometry affecting the circle area or the line width respectively.</p>"},{"location":"reference/interfaces/vizzu.Config.Channels/#x","title":"x","text":"<p>\u2022 <code>Optional</code> x: <code>SeriesList</code> | <code>Channel</code></p> <p>Parameters for the X-axis, determining the position of the markers on the x-axis - or their angle when using polar coordinates. Note: leaving x and y channels empty will result in a chart \"without coordinates\" like a Treemap or a Bubble Chart.</p>"},{"location":"reference/interfaces/vizzu.Config.Channels/#y","title":"y","text":"<p>\u2022 <code>Optional</code> y: <code>SeriesList</code> | <code>Channel</code></p> <p>Parameters for the Y-axis, determining the position of the markers on the y-axis - or their radius when using polar coordinates) .</p>"},{"location":"reference/interfaces/vizzu.Config.Chart/","title":"vizzu.Config.Chart","text":"<p>Vizzu / Modules / vizzu / Config / Chart</p>"},{"location":"reference/interfaces/vizzu.Config.Chart/#interface-chart","title":"Interface: Chart","text":"<p>vizzu.Config.Chart</p> <p>The config contains all of the parameters needed to render a particular static chart or a state of an animated chart.</p>"},{"location":"reference/interfaces/vizzu.Config.Chart/#hierarchy","title":"Hierarchy","text":"<ul> <li> <p><code>Channels</code></p> <p>\u21b3 <code>Chart</code></p> </li> </ul>"},{"location":"reference/interfaces/vizzu.Config.Chart/#properties","title":"Properties","text":""},{"location":"reference/interfaces/vizzu.Config.Chart/#align","title":"align","text":"<p>\u2022 <code>Optional</code> align: <code>\"max\"</code> | <code>\"none\"</code> | <code>\"center\"</code> | <code>\"min\"</code> | <code>\"stretch\"</code></p> <p>Sets the alignment of the markers with relation to the x- or the y-axis depending on where the measure is. In case both axes have measures on them, this is determined by the orientation of the chart.</p>"},{"location":"reference/interfaces/vizzu.Config.Chart/#channels","title":"channels","text":"<p>\u2022 <code>Optional</code> channels: <code>Channels</code></p> <p>List of the chart's channels' configuration. The chart object also extends the channels object as a configuration shorthand.</p>"},{"location":"reference/interfaces/vizzu.Config.Chart/#color","title":"color","text":"<p>\u2022 <code>Optional</code> color: <code>SeriesList</code> | <code>Channel</code></p> <p>Parameters for the markers' base color. The markers' actual color can also be affected by the lightness channel.</p> <p>Inherited from</p> <p>Channels.color</p>"},{"location":"reference/interfaces/vizzu.Config.Chart/#coordsystem","title":"coordSystem","text":"<p>\u2022 <code>Optional</code> coordSystem: <code>\"cartesian\"</code> | <code>\"polar\"</code></p> <p>Sets the coordinate system for the chart. Switch to the 'polar' coordinate system to create a chart from the pie/radial chart family.</p>"},{"location":"reference/interfaces/vizzu.Config.Chart/#geometry","title":"geometry","text":"<p>\u2022 <code>Optional</code> geometry: <code>\"area\"</code> | <code>\"circle\"</code> | <code>\"line\"</code> | <code>\"rectangle\"</code></p> <p>Sets the geometric elements used for the markers to represent the data.</p>"},{"location":"reference/interfaces/vizzu.Config.Chart/#label","title":"label","text":"<p>\u2022 <code>Optional</code> label: <code>SeriesList</code> | <code>Channel</code></p> <p>Parameters for the content of the labels that appear on the markers.</p> <p>Inherited from</p> <p>Channels.label</p>"},{"location":"reference/interfaces/vizzu.Config.Chart/#legend","title":"legend","text":"<p>\u2022 <code>Optional</code> legend: <code>\"auto\"</code> | <code>\"color\"</code> | <code>\"size\"</code> | <code>\"lightness\"</code></p> <p>Specifies which channel should be shown on the legend. If set to null, the legend will not be shown and will not take up any space in the chart layout. If set to auto, the internal logic will select the most suitable channel for the legend.</p>"},{"location":"reference/interfaces/vizzu.Config.Chart/#lightness","title":"lightness","text":"<p>\u2022 <code>Optional</code> lightness: <code>SeriesList</code> | <code>Channel</code></p> <p>Parameters for markers' lightness.</p> <p>Inherited from</p> <p>Channels.lightness</p>"},{"location":"reference/interfaces/vizzu.Config.Chart/#noop","title":"noop","text":"<p>\u2022 <code>Optional</code> noop: <code>SeriesList</code> | <code>Channel</code></p> <p>Splits the markers as all the other channels, but have no effect on the markers' appearance. Thus, it only works with dimensions.</p> <p>Inherited from</p> <p>Channels.noop</p>"},{"location":"reference/interfaces/vizzu.Config.Chart/#orientation","title":"orientation","text":"<p>\u2022 <code>Optional</code> orientation: <code>\"horizontal\"</code> | <code>\"vertical\"</code></p> <p>If both axes have measures on them, this parameter sets the orientation of the chart, meaning to which axis the graphical elements are oriented to.</p>"},{"location":"reference/interfaces/vizzu.Config.Chart/#reverse","title":"reverse","text":"<p>\u2022 <code>Optional</code> reverse: <code>boolean</code></p> <p>Reverts the order of the markers if set.</p>"},{"location":"reference/interfaces/vizzu.Config.Chart/#rotate","title":"rotate","text":"<p>\u2022 <code>Optional</code> rotate: <code>number</code></p> <p>Rotates the plot area by the specified angle in degree. Note: this is an experimental, not tested feature.</p>"},{"location":"reference/interfaces/vizzu.Config.Chart/#size","title":"size","text":"<p>\u2022 <code>Optional</code> size: <code>SeriesList</code> | <code>Channel</code></p> <p>Parameters for the markers' size. Effective only for circle and line geometry affecting the circle area or the line width respectively.</p> <p>Inherited from</p> <p>Channels.size</p>"},{"location":"reference/interfaces/vizzu.Config.Chart/#sort","title":"sort","text":"<p>\u2022 <code>Optional</code> sort: <code>\"none\"</code> | <code>\"byValue\"</code></p> <ul> <li>'none': markers are sorted in the order as the corresponding data appear in   the data set.</li> <li>'byValue': markers will be sorted by the corresponding measure (if present) in   decreasing order.</li> </ul>"},{"location":"reference/interfaces/vizzu.Config.Chart/#split","title":"split","text":"<p>\u2022 <code>Optional</code> split: <code>boolean</code></p> <p>If set to true, markers will be split by the dimension(s) along the axis. This works if you have at least one dimension and a measure on the same axis.In case both axes have measures and dimension(s) on them, this is determined by the orientation of the chart.</p>"},{"location":"reference/interfaces/vizzu.Config.Chart/#title","title":"title","text":"<p>\u2022 <code>Optional</code> title: <code>string</code></p> <p>This is the title shown on the top of the chart. If set to null, the title will not be shown and will not take up any space in the chart layout.</p>"},{"location":"reference/interfaces/vizzu.Config.Chart/#x","title":"x","text":"<p>\u2022 <code>Optional</code> x: <code>SeriesList</code> | <code>Channel</code></p> <p>Parameters for the X-axis, determining the position of the markers on the x-axis - or their angle when using polar coordinates. Note: leaving x and y channels empty will result in a chart \"without coordinates\" like a Treemap or a Bubble Chart.</p> <p>Inherited from</p> <p>Channels.x</p>"},{"location":"reference/interfaces/vizzu.Config.Chart/#y","title":"y","text":"<p>\u2022 <code>Optional</code> y: <code>SeriesList</code> | <code>Channel</code></p> <p>Parameters for the Y-axis, determining the position of the markers on the y-axis - or their radius when using polar coordinates) .</p> <p>Inherited from</p> <p>Channels.y</p>"},{"location":"reference/interfaces/vizzu.Data.AbstractSeriesInfo/","title":"vizzu.Data.AbstractSeriesInfo","text":"<p>Vizzu / Modules / vizzu / Data / AbstractSeriesInfo</p>"},{"location":"reference/interfaces/vizzu.Data.AbstractSeriesInfo/#interface-abstractseriesinfo","title":"Interface: AbstractSeriesInfo","text":"<p>vizzu.Data.AbstractSeriesInfo</p> <p>Additional info about a data series besides the contained data.</p>"},{"location":"reference/interfaces/vizzu.Data.AbstractSeriesInfo/#hierarchy","title":"Hierarchy","text":"<ul> <li> <p><code>SeriesMetaInfo</code></p> <p>\u21b3 <code>AbstractSeriesInfo</code></p> <p>\u21b3\u21b3 <code>DimensionSeriesInfo</code></p> <p>\u21b3\u21b3 <code>MeasureSeriesInfo</code></p> </li> </ul>"},{"location":"reference/interfaces/vizzu.Data.AbstractSeriesInfo/#properties","title":"Properties","text":""},{"location":"reference/interfaces/vizzu.Data.AbstractSeriesInfo/#length","title":"length","text":"<p>\u2022 length: <code>number</code></p> <p>Count of values in the series.</p>"},{"location":"reference/interfaces/vizzu.Data.AbstractSeriesInfo/#name","title":"name","text":"<p>\u2022 name: <code>string</code></p> <p>Name of the data series. It will be the unique id of the series to reference it in various parts of the API, mainly in Channel and Record. This name will also be used by default for Axis and Legend title.</p> <p>Inherited from</p> <p>SeriesMetaInfo.name</p>"},{"location":"reference/interfaces/vizzu.Data.AbstractSeriesInfo/#type","title":"type","text":"<p>\u2022 <code>Optional</code> type: <code>\"dimension\"</code> | <code>\"measure\"</code></p> <p>Type of the data series:</p> <ul> <li>'dimension' - categorical data containing strings (dates should also be added   as strings);</li> <li>'measure' - continuous data containing numbers. If not set, the library will   attempt to determine the type based on the type of the first value. Number   type will result in measure, string type will result in dimension.</li> </ul> <p>Inherited from</p> <p>SeriesMetaInfo.type</p>"},{"location":"reference/interfaces/vizzu.Data.AbstractSeriesInfo/#unit","title":"unit","text":"<p>\u2022 <code>Optional</code> unit: <code>string</code></p> <p>Unit of the data series</p> <p>Inherited from</p> <p>SeriesMetaInfo.unit</p>"},{"location":"reference/interfaces/vizzu.Data.Cube/","title":"vizzu.Data.Cube","text":"<p>Vizzu / Modules / vizzu / Data / Cube</p>"},{"location":"reference/interfaces/vizzu.Data.Cube/#interface-cube","title":"Interface: Cube","text":"<p>vizzu.Data.Cube</p> <p>N dimensional data cude</p>"},{"location":"reference/interfaces/vizzu.Data.Cube/#hierarchy","title":"Hierarchy","text":"<ul> <li> <p><code>Filter</code></p> <p>\u21b3 <code>Cube</code></p> </li> </ul>"},{"location":"reference/interfaces/vizzu.Data.Cube/#properties","title":"Properties","text":""},{"location":"reference/interfaces/vizzu.Data.Cube/#dimensions","title":"dimensions","text":"<p>\u2022 <code>Optional</code> dimensions: <code>Series</code>[]</p> <p>The list of the dimensions of the data cube.</p>"},{"location":"reference/interfaces/vizzu.Data.Cube/#filter","title":"filter","text":"<p>\u2022 <code>Optional</code> filter: <code>FilterCallback</code></p> <p>A filter callback is called on each record of the dataset on chart generation. If the callback returns false, the record will not be shown on the chart.</p> <p>Inherited from</p> <p>Filter.filter</p>"},{"location":"reference/interfaces/vizzu.Data.Cube/#measures","title":"measures","text":"<p>\u2022 <code>Optional</code> measures: <code>CubeData</code>[]</p> <p>The list of measures of the data cube.</p>"},{"location":"reference/interfaces/vizzu.Data.CubeData/","title":"vizzu.Data.CubeData","text":"<p>Vizzu / Modules / vizzu / Data / CubeData</p>"},{"location":"reference/interfaces/vizzu.Data.CubeData/#interface-cubedata","title":"Interface: CubeData","text":"<p>vizzu.Data.CubeData</p> <p>Defines a data series of the data cube, and contains a particular variable's values in the data cube and meta info about that variable.</p>"},{"location":"reference/interfaces/vizzu.Data.CubeData/#hierarchy","title":"Hierarchy","text":"<ul> <li> <p><code>SeriesMetaInfo</code></p> <p>\u21b3 <code>CubeData</code></p> </li> </ul>"},{"location":"reference/interfaces/vizzu.Data.CubeData/#properties","title":"Properties","text":""},{"location":"reference/interfaces/vizzu.Data.CubeData/#name","title":"name","text":"<p>\u2022 name: <code>string</code></p> <p>Name of the data series. It will be the unique id of the series to reference it in various parts of the API, mainly in Channel and Record. This name will also be used by default for Axis and Legend title.</p> <p>Inherited from</p> <p>SeriesMetaInfo.name</p>"},{"location":"reference/interfaces/vizzu.Data.CubeData/#type","title":"type","text":"<p>\u2022 <code>Optional</code> type: <code>\"dimension\"</code> | <code>\"measure\"</code></p> <p>Type of the data series:</p> <ul> <li>'dimension' - categorical data containing strings (dates should also be added   as strings);</li> <li>'measure' - continuous data containing numbers. If not set, the library will   attempt to determine the type based on the type of the first value. Number   type will result in measure, string type will result in dimension.</li> </ul> <p>Inherited from</p> <p>SeriesMetaInfo.type</p>"},{"location":"reference/interfaces/vizzu.Data.CubeData/#unit","title":"unit","text":"<p>\u2022 <code>Optional</code> unit: <code>string</code></p> <p>Unit of the data series</p> <p>Inherited from</p> <p>SeriesMetaInfo.unit</p>"},{"location":"reference/interfaces/vizzu.Data.CubeData/#values","title":"values","text":"<p>\u2022 values: <code>CubeRow</code></p> <p>A nested array that contains the values of the data series. Nesting level should match the number of dimensions.</p>"},{"location":"reference/interfaces/vizzu.Data.DimensionSeriesInfo/","title":"vizzu.Data.DimensionSeriesInfo","text":"<p>Vizzu / Modules / vizzu / Data / DimensionSeriesInfo</p>"},{"location":"reference/interfaces/vizzu.Data.DimensionSeriesInfo/#interface-dimensionseriesinfo","title":"Interface: DimensionSeriesInfo","text":"<p>vizzu.Data.DimensionSeriesInfo</p> <p>Meta data about dimension data series</p>"},{"location":"reference/interfaces/vizzu.Data.DimensionSeriesInfo/#hierarchy","title":"Hierarchy","text":"<ul> <li> <p><code>AbstractSeriesInfo</code></p> <p>\u21b3 <code>DimensionSeriesInfo</code></p> </li> </ul>"},{"location":"reference/interfaces/vizzu.Data.DimensionSeriesInfo/#properties","title":"Properties","text":""},{"location":"reference/interfaces/vizzu.Data.DimensionSeriesInfo/#categories","title":"categories","text":"<p>\u2022 categories: <code>string</code>[]</p> <p>Distinct values in the series</p>"},{"location":"reference/interfaces/vizzu.Data.DimensionSeriesInfo/#length","title":"length","text":"<p>\u2022 length: <code>number</code></p> <p>Count of values in the series.</p> <p>Inherited from</p> <p>AbstractSeriesInfo.length</p>"},{"location":"reference/interfaces/vizzu.Data.DimensionSeriesInfo/#name","title":"name","text":"<p>\u2022 name: <code>string</code></p> <p>Name of the data series. It will be the unique id of the series to reference it in various parts of the API, mainly in Channel and Record. This name will also be used by default for Axis and Legend title.</p> <p>Inherited from</p> <p>AbstractSeriesInfo.name</p>"},{"location":"reference/interfaces/vizzu.Data.DimensionSeriesInfo/#type","title":"type","text":"<p>\u2022 <code>Optional</code> type: <code>\"dimension\"</code> | <code>\"measure\"</code></p> <p>Type of the data series:</p> <ul> <li>'dimension' - categorical data containing strings (dates should also be added   as strings);</li> <li>'measure' - continuous data containing numbers. If not set, the library will   attempt to determine the type based on the type of the first value. Number   type will result in measure, string type will result in dimension.</li> </ul> <p>Inherited from</p> <p>AbstractSeriesInfo.type</p>"},{"location":"reference/interfaces/vizzu.Data.DimensionSeriesInfo/#unit","title":"unit","text":"<p>\u2022 <code>Optional</code> unit: <code>string</code></p> <p>Unit of the data series</p> <p>Inherited from</p> <p>AbstractSeriesInfo.unit</p>"},{"location":"reference/interfaces/vizzu.Data.Filter/","title":"vizzu.Data.Filter","text":"<p>Vizzu / Modules / vizzu / Data / Filter</p>"},{"location":"reference/interfaces/vizzu.Data.Filter/#interface-filter","title":"Interface: Filter","text":"<p>vizzu.Data.Filter</p>"},{"location":"reference/interfaces/vizzu.Data.Filter/#hierarchy","title":"Hierarchy","text":"<ul> <li> <p><code>Filter</code></p> <p>\u21b3 <code>TableBySeries</code></p> <p>\u21b3 <code>TableByRecords</code></p> <p>\u21b3 <code>Cube</code></p> </li> </ul>"},{"location":"reference/interfaces/vizzu.Data.Filter/#properties","title":"Properties","text":""},{"location":"reference/interfaces/vizzu.Data.Filter/#filter","title":"filter","text":"<p>\u2022 <code>Optional</code> filter: <code>FilterCallback</code></p> <p>A filter callback is called on each record of the dataset on chart generation. If the callback returns false, the record will not be shown on the chart.</p>"},{"location":"reference/interfaces/vizzu.Data.MeasureSeriesInfo/","title":"vizzu.Data.MeasureSeriesInfo","text":"<p>Vizzu / Modules / vizzu / Data / MeasureSeriesInfo</p>"},{"location":"reference/interfaces/vizzu.Data.MeasureSeriesInfo/#interface-measureseriesinfo","title":"Interface: MeasureSeriesInfo","text":"<p>vizzu.Data.MeasureSeriesInfo</p> <p>Meta data about measure data series</p>"},{"location":"reference/interfaces/vizzu.Data.MeasureSeriesInfo/#hierarchy","title":"Hierarchy","text":"<ul> <li> <p><code>AbstractSeriesInfo</code></p> <p>\u21b3 <code>MeasureSeriesInfo</code></p> </li> </ul>"},{"location":"reference/interfaces/vizzu.Data.MeasureSeriesInfo/#properties","title":"Properties","text":""},{"location":"reference/interfaces/vizzu.Data.MeasureSeriesInfo/#length","title":"length","text":"<p>\u2022 length: <code>number</code></p> <p>Count of values in the series.</p> <p>Inherited from</p> <p>AbstractSeriesInfo.length</p>"},{"location":"reference/interfaces/vizzu.Data.MeasureSeriesInfo/#name","title":"name","text":"<p>\u2022 name: <code>string</code></p> <p>Name of the data series. It will be the unique id of the series to reference it in various parts of the API, mainly in Channel and Record. This name will also be used by default for Axis and Legend title.</p> <p>Inherited from</p> <p>AbstractSeriesInfo.name</p>"},{"location":"reference/interfaces/vizzu.Data.MeasureSeriesInfo/#range","title":"range","text":"<p>\u2022 range: <code>Object</code></p> <p>Type declaration</p> Name Type Description <code>max</code> <code>number</code> Maximal value in the series <code>min</code> <code>number</code> Minimal value in the series"},{"location":"reference/interfaces/vizzu.Data.MeasureSeriesInfo/#type","title":"type","text":"<p>\u2022 <code>Optional</code> type: <code>\"dimension\"</code> | <code>\"measure\"</code></p> <p>Type of the data series:</p> <ul> <li>'dimension' - categorical data containing strings (dates should also be added   as strings);</li> <li>'measure' - continuous data containing numbers. If not set, the library will   attempt to determine the type based on the type of the first value. Number   type will result in measure, string type will result in dimension.</li> </ul> <p>Inherited from</p> <p>AbstractSeriesInfo.type</p>"},{"location":"reference/interfaces/vizzu.Data.MeasureSeriesInfo/#unit","title":"unit","text":"<p>\u2022 <code>Optional</code> unit: <code>string</code></p> <p>Unit of the data series</p> <p>Inherited from</p> <p>AbstractSeriesInfo.unit</p>"},{"location":"reference/interfaces/vizzu.Data.Metainfo/","title":"vizzu.Data.Metainfo","text":"<p>Vizzu / Modules / vizzu / Data / Metainfo</p>"},{"location":"reference/interfaces/vizzu.Data.Metainfo/#interface-metainfo","title":"Interface: Metainfo","text":"<p>vizzu.Data.Metainfo</p> <p>Meta data about the data set</p>"},{"location":"reference/interfaces/vizzu.Data.Metainfo/#properties","title":"Properties","text":""},{"location":"reference/interfaces/vizzu.Data.Metainfo/#series","title":"series","text":"<p>\u2022 series: <code>SeriesInfo</code>[]</p>"},{"location":"reference/interfaces/vizzu.Data.Record/","title":"vizzu.Data.Record","text":"<p>Vizzu / Modules / vizzu / Data / Record</p>"},{"location":"reference/interfaces/vizzu.Data.Record/#interface-record","title":"Interface: Record","text":"<p>vizzu.Data.Record</p> <p>A record of the data set, containing one value of each data series corresponding to the same index.</p>"},{"location":"reference/interfaces/vizzu.Data.Record/#indexable","title":"Indexable","text":"<p>\u25aa [seriesName: <code>Series</code>[<code>\"name\"</code>]]: <code>Value</code></p>"},{"location":"reference/interfaces/vizzu.Data.Series/","title":"vizzu.Data.Series","text":"<p>Vizzu / Modules / vizzu / Data / Series</p>"},{"location":"reference/interfaces/vizzu.Data.Series/#interface-series","title":"Interface: Series","text":"<p>vizzu.Data.Series</p> <p>Defines a data series of the data set, and contains a particular variable's values in the data set and meta info about the variable.</p>"},{"location":"reference/interfaces/vizzu.Data.Series/#hierarchy","title":"Hierarchy","text":"<ul> <li> <p><code>SeriesMetaInfo</code></p> <p>\u21b3 <code>Series</code></p> </li> </ul>"},{"location":"reference/interfaces/vizzu.Data.Series/#properties","title":"Properties","text":""},{"location":"reference/interfaces/vizzu.Data.Series/#name","title":"name","text":"<p>\u2022 name: <code>string</code></p> <p>Name of the data series. It will be the unique id of the series to reference it in various parts of the API, mainly in Channel and Record. This name will also be used by default for Axis and Legend title.</p> <p>Inherited from</p> <p>SeriesMetaInfo.name</p>"},{"location":"reference/interfaces/vizzu.Data.Series/#type","title":"type","text":"<p>\u2022 <code>Optional</code> type: <code>\"dimension\"</code> | <code>\"measure\"</code></p> <p>Type of the data series:</p> <ul> <li>'dimension' - categorical data containing strings (dates should also be added   as strings);</li> <li>'measure' - continuous data containing numbers. If not set, the library will   attempt to determine the type based on the type of the first value. Number   type will result in measure, string type will result in dimension.</li> </ul> <p>Inherited from</p> <p>SeriesMetaInfo.type</p>"},{"location":"reference/interfaces/vizzu.Data.Series/#unit","title":"unit","text":"<p>\u2022 <code>Optional</code> unit: <code>string</code></p> <p>Unit of the data series</p> <p>Inherited from</p> <p>SeriesMetaInfo.unit</p>"},{"location":"reference/interfaces/vizzu.Data.Series/#values","title":"values","text":"<p>\u2022 values: <code>Values</code></p> <p>The array that contains the values of the data series. The value types should match type. If the data series is shorter than the longest data series defined, it will be internally extended with empty values.</p>"},{"location":"reference/interfaces/vizzu.Data.SeriesMetaInfo/","title":"vizzu.Data.SeriesMetaInfo","text":"<p>Vizzu / Modules / vizzu / Data / SeriesMetaInfo</p>"},{"location":"reference/interfaces/vizzu.Data.SeriesMetaInfo/#interface-seriesmetainfo","title":"Interface: SeriesMetaInfo","text":"<p>vizzu.Data.SeriesMetaInfo</p> <p>Additional info about a data series besides the contained data.</p>"},{"location":"reference/interfaces/vizzu.Data.SeriesMetaInfo/#hierarchy","title":"Hierarchy","text":"<ul> <li> <p><code>SeriesMetaInfo</code></p> <p>\u21b3 <code>AbstractSeriesInfo</code></p> <p>\u21b3 <code>Series</code></p> <p>\u21b3 <code>CubeData</code></p> </li> </ul>"},{"location":"reference/interfaces/vizzu.Data.SeriesMetaInfo/#properties","title":"Properties","text":""},{"location":"reference/interfaces/vizzu.Data.SeriesMetaInfo/#name","title":"name","text":"<p>\u2022 name: <code>string</code></p> <p>Name of the data series. It will be the unique id of the series to reference it in various parts of the API, mainly in Channel and Record. This name will also be used by default for Axis and Legend title.</p>"},{"location":"reference/interfaces/vizzu.Data.SeriesMetaInfo/#type","title":"type","text":"<p>\u2022 <code>Optional</code> type: <code>\"dimension\"</code> | <code>\"measure\"</code></p> <p>Type of the data series:</p> <ul> <li>'dimension' - categorical data containing strings (dates should also be added   as strings);</li> <li>'measure' - continuous data containing numbers. If not set, the library will   attempt to determine the type based on the type of the first value. Number   type will result in measure, string type will result in dimension.</li> </ul>"},{"location":"reference/interfaces/vizzu.Data.SeriesMetaInfo/#unit","title":"unit","text":"<p>\u2022 <code>Optional</code> unit: <code>string</code></p> <p>Unit of the data series</p>"},{"location":"reference/interfaces/vizzu.Data.TableByRecords/","title":"vizzu.Data.TableByRecords","text":"<p>Vizzu / Modules / vizzu / Data / TableByRecords</p>"},{"location":"reference/interfaces/vizzu.Data.TableByRecords/#interface-tablebyrecords","title":"Interface: TableByRecords","text":"<p>vizzu.Data.TableByRecords</p> <p>Data table specified by records.</p>"},{"location":"reference/interfaces/vizzu.Data.TableByRecords/#hierarchy","title":"Hierarchy","text":"<ul> <li> <p><code>Filter</code></p> <p>\u21b3 <code>TableByRecords</code></p> </li> </ul>"},{"location":"reference/interfaces/vizzu.Data.TableByRecords/#properties","title":"Properties","text":""},{"location":"reference/interfaces/vizzu.Data.TableByRecords/#filter","title":"filter","text":"<p>\u2022 <code>Optional</code> filter: <code>FilterCallback</code></p> <p>A filter callback is called on each record of the dataset on chart generation. If the callback returns false, the record will not be shown on the chart.</p> <p>Inherited from</p> <p>Filter.filter</p>"},{"location":"reference/interfaces/vizzu.Data.TableByRecords/#records","title":"records","text":"<p>\u2022 records: <code>Value</code>[][]</p> <p>The array of data records that make up the data set.</p>"},{"location":"reference/interfaces/vizzu.Data.TableByRecords/#series","title":"series","text":"<p>\u2022 <code>Optional</code> series: <code>SeriesMetaInfo</code>[]</p> <p>The information about the data series in the records of the data set. Note: not needed if it was previously specified.</p>"},{"location":"reference/interfaces/vizzu.Data.TableBySeries/","title":"vizzu.Data.TableBySeries","text":"<p>Vizzu / Modules / vizzu / Data / TableBySeries</p>"},{"location":"reference/interfaces/vizzu.Data.TableBySeries/#interface-tablebyseries","title":"Interface: TableBySeries","text":"<p>vizzu.Data.TableBySeries</p> <p>Data table specified by series.</p>"},{"location":"reference/interfaces/vizzu.Data.TableBySeries/#hierarchy","title":"Hierarchy","text":"<ul> <li> <p><code>Filter</code></p> <p>\u21b3 <code>TableBySeries</code></p> </li> </ul>"},{"location":"reference/interfaces/vizzu.Data.TableBySeries/#properties","title":"Properties","text":""},{"location":"reference/interfaces/vizzu.Data.TableBySeries/#filter","title":"filter","text":"<p>\u2022 <code>Optional</code> filter: <code>FilterCallback</code></p> <p>A filter callback is called on each record of the dataset on chart generation. If the callback returns false, the record will not be shown on the chart.</p> <p>Inherited from</p> <p>Filter.filter</p>"},{"location":"reference/interfaces/vizzu.Data.TableBySeries/#series","title":"series","text":"<p>\u2022 series: <code>Series</code>[]</p> <p>The series that make up the the data set.</p>"},{"location":"reference/interfaces/vizzu.Event.Object/","title":"vizzu.Event.Object","text":"<p>Vizzu / Modules / vizzu / Event / Object</p>"},{"location":"reference/interfaces/vizzu.Event.Object/#interface-object","title":"Interface: Object","text":"<p>vizzu.Event.Object</p> <p>The interface of the event object is passed to event handlers by the library. Additional properties will vary by event type.</p>"},{"location":"reference/interfaces/vizzu.Event.Object/#properties","title":"Properties","text":""},{"location":"reference/interfaces/vizzu.Event.Object/#preventdefault","title":"preventDefault","text":"<p>\u2022 preventDefault: () =&gt; <code>void</code></p> <p>Type declaration</p> <p>\u25b8 (): <code>void</code></p> <p>If called, the default action of the event will be canceled.</p> <p>Returns</p> <p><code>void</code></p>"},{"location":"reference/interfaces/vizzu.Lib.Options/","title":"vizzu.Lib.Options","text":"<p>Vizzu / Modules / vizzu / Lib / Options</p>"},{"location":"reference/interfaces/vizzu.Lib.Options/#interface-options","title":"Interface: Options","text":"<p>vizzu.Lib.Options</p> <p>Options for the library.</p>"},{"location":"reference/interfaces/vizzu.Lib.Options/#properties","title":"Properties","text":""},{"location":"reference/interfaces/vizzu.Lib.Options/#wasmurl","title":"wasmUrl","text":"<p>\u2022 <code>Optional</code> wasmUrl: <code>string</code></p> <p>The URL for the webassembly binary (cvizzu.wasm).</p>"},{"location":"reference/interfaces/vizzu.Snapshot/","title":"vizzu.Snapshot","text":"<p>Vizzu / Modules / vizzu / Snapshot</p>"},{"location":"reference/interfaces/vizzu.Snapshot/#interface-snapshot","title":"Interface: Snapshot","text":"<p>vizzu.Snapshot</p> <p>Stored Chart object.</p>"},{"location":"reference/interfaces/vizzu.Snapshot/#properties","title":"Properties","text":""},{"location":"reference/interfaces/vizzu.Snapshot/#id","title":"id","text":"<p>\u2022 id: <code>number</code></p>"},{"location":"reference/interfaces/vizzu.Styles.Axis/","title":"vizzu.Styles.Axis","text":"<p>Vizzu / Modules / vizzu / Styles / Axis</p>"},{"location":"reference/interfaces/vizzu.Styles.Axis/#interface-axis","title":"Interface: Axis","text":"<p>vizzu.Styles.Axis</p>"},{"location":"reference/interfaces/vizzu.Styles.Axis/#properties","title":"Properties","text":""},{"location":"reference/interfaces/vizzu.Styles.Axis/#color","title":"color","text":"<p>\u2022 <code>Optional</code> color: <code>Color</code></p> <p>Color of the axis line.</p>"},{"location":"reference/interfaces/vizzu.Styles.Axis/#guides","title":"guides","text":"<p>\u2022 <code>Optional</code> guides: <code>Guides</code></p>"},{"location":"reference/interfaces/vizzu.Styles.Axis/#interlacing","title":"interlacing","text":"<p>\u2022 <code>Optional</code> interlacing: <code>Interlacing</code></p>"},{"location":"reference/interfaces/vizzu.Styles.Axis/#label","title":"label","text":"<p>\u2022 <code>Optional</code> label: <code>AxisLabel</code></p> <p>Style parameters of the axis labels.</p>"},{"location":"reference/interfaces/vizzu.Styles.Axis/#ticks","title":"ticks","text":"<p>\u2022 <code>Optional</code> ticks: <code>Ticks</code></p>"},{"location":"reference/interfaces/vizzu.Styles.Axis/#title","title":"title","text":"<p>\u2022 <code>Optional</code> title: <code>AxisTitle</code></p> <p>Style parameters of the axis title.</p>"},{"location":"reference/interfaces/vizzu.Styles.AxisLabel/","title":"vizzu.Styles.AxisLabel","text":"<p>Vizzu / Modules / vizzu / Styles / AxisLabel</p>"},{"location":"reference/interfaces/vizzu.Styles.AxisLabel/#interface-axislabel","title":"Interface: AxisLabel","text":"<p>vizzu.Styles.AxisLabel</p> <p>Style settings for the values shown on the axis to display the scale being used or the categories along the axis. Note: textAlign has no effect on the Axis label.</p>"},{"location":"reference/interfaces/vizzu.Styles.AxisLabel/#hierarchy","title":"Hierarchy","text":"<ul> <li> <p><code>OrientedLabel</code></p> <p>\u21b3 <code>AxisLabel</code></p> </li> </ul>"},{"location":"reference/interfaces/vizzu.Styles.AxisLabel/#properties","title":"Properties","text":""},{"location":"reference/interfaces/vizzu.Styles.AxisLabel/#angle","title":"angle","text":"<p>\u2022 <code>Optional</code> angle: <code>Angle</code></p> <p>Additional rotation of the label.</p> <p>Inherited from</p> <p>OrientedLabel.angle</p>"},{"location":"reference/interfaces/vizzu.Styles.AxisLabel/#backgroundcolor","title":"backgroundColor","text":"<p>\u2022 <code>Optional</code> backgroundColor: <code>Color</code></p> <p>The background color of the displayed text.</p> <p>Inherited from</p> <p>OrientedLabel.backgroundColor</p>"},{"location":"reference/interfaces/vizzu.Styles.AxisLabel/#color","title":"color","text":"<p>\u2022 <code>Optional</code> color: <code>Color</code></p> <p>The color of the displayed text.</p> <p>Inherited from</p> <p>OrientedLabel.color</p>"},{"location":"reference/interfaces/vizzu.Styles.AxisLabel/#fontfamily","title":"fontFamily","text":"<p>\u2022 <code>Optional</code> fontFamily: <code>string</code></p> <p>The family of the font. If not set, it inherits the root style font family.</p> <p>Inherited from</p> <p>OrientedLabel.fontFamily</p>"},{"location":"reference/interfaces/vizzu.Styles.AxisLabel/#fontsize","title":"fontSize","text":"<p>\u2022 <code>Optional</code> fontSize: <code>Length</code></p> <p>The size of the font. Percentage values are relative to the root style font size</p> <p>Inherited from</p> <p>OrientedLabel.fontSize</p>"},{"location":"reference/interfaces/vizzu.Styles.AxisLabel/#fontstyle","title":"fontStyle","text":"<p>\u2022 <code>Optional</code> fontStyle: <code>\"normal\"</code> | <code>\"italic\"</code> | <code>\"oblique\"</code></p> <p>The style of the font.</p> <p>Inherited from</p> <p>OrientedLabel.fontStyle</p>"},{"location":"reference/interfaces/vizzu.Styles.AxisLabel/#fontweight","title":"fontWeight","text":"<p>\u2022 <code>Optional</code> fontWeight: <code>number</code> | <code>\"bold\"</code> | <code>\"normal\"</code></p> <p>The weight of the font, numbers use the same scale as CSS.</p> <p>Inherited from</p> <p>OrientedLabel.fontWeight</p>"},{"location":"reference/interfaces/vizzu.Styles.AxisLabel/#maxfractiondigits","title":"maxFractionDigits","text":"<p>\u2022 <code>Optional</code> maxFractionDigits: <code>number</code></p> <p>The maximum number of digits in fraction part if the text contains a number.</p> <p>Inherited from</p> <p>OrientedLabel.maxFractionDigits</p>"},{"location":"reference/interfaces/vizzu.Styles.AxisLabel/#numberformat","title":"numberFormat","text":"<p>\u2022 <code>Optional</code> numberFormat: <code>\"none\"</code> | <code>\"grouped\"</code> | <code>\"prefixed\"</code></p> <p>The format of the number. Only applicable for texts showing numerical data such as marker and axis labels. 'grouped' uses thousand separators, 'prefixed' uses scientific notation.</p> <p>Inherited from</p> <p>OrientedLabel.numberFormat</p>"},{"location":"reference/interfaces/vizzu.Styles.AxisLabel/#numberscale","title":"numberScale","text":"<p>\u2022 <code>Optional</code> numberScale: <code>string</code></p> <p>Number scale used for prefixed number format.</p> <p>Inherited from</p> <p>OrientedLabel.numberScale</p>"},{"location":"reference/interfaces/vizzu.Styles.AxisLabel/#orientation","title":"orientation","text":"<p>\u2022 <code>Optional</code> orientation: <code>\"normal\"</code> | <code>\"horizontal\"</code> | <code>\"vertical\"</code> | <code>\"tangential\"</code></p> <p>Orientation of the label relatively to the axis or marker it is attached to.</p> <p>Inherited from</p> <p>OrientedLabel.orientation</p>"},{"location":"reference/interfaces/vizzu.Styles.AxisLabel/#paddingbottom","title":"paddingBottom","text":"<p>\u2022 <code>Optional</code> paddingBottom: <code>Length</code></p> <p>Bottom padding of the element.</p> <p>Inherited from</p> <p>OrientedLabel.paddingBottom</p>"},{"location":"reference/interfaces/vizzu.Styles.AxisLabel/#paddingleft","title":"paddingLeft","text":"<p>\u2022 <code>Optional</code> paddingLeft: <code>Length</code></p> <p>Left padding of the element.</p> <p>Inherited from</p> <p>OrientedLabel.paddingLeft</p>"},{"location":"reference/interfaces/vizzu.Styles.AxisLabel/#paddingright","title":"paddingRight","text":"<p>\u2022 <code>Optional</code> paddingRight: <code>Length</code></p> <p>Right padding of the element.</p> <p>Inherited from</p> <p>OrientedLabel.paddingRight</p>"},{"location":"reference/interfaces/vizzu.Styles.AxisLabel/#paddingtop","title":"paddingTop","text":"<p>\u2022 <code>Optional</code> paddingTop: <code>Length</code></p> <p>Top padding of the element.</p> <p>Inherited from</p> <p>OrientedLabel.paddingTop</p>"},{"location":"reference/interfaces/vizzu.Styles.AxisLabel/#position","title":"position","text":"<p>\u2022 <code>Optional</code> position: <code>\"axis\"</code> | <code>\"max-edge\"</code> | <code>\"min-edge\"</code></p> <p>Label position relatively to the plot.</p>"},{"location":"reference/interfaces/vizzu.Styles.AxisLabel/#side","title":"side","text":"<p>\u2022 <code>Optional</code> side: <code>\"positive\"</code> | <code>\"negative\"</code></p> <p>Label alignment relatively to the position on the plot.</p>"},{"location":"reference/interfaces/vizzu.Styles.AxisLabel/#textalign","title":"textAlign","text":"<p>\u2022 <code>Optional</code> textAlign: <code>\"center\"</code> | <code>\"left\"</code> | <code>\"right\"</code></p> <p>The alignment of the displayed text.</p> <p>Inherited from</p> <p>OrientedLabel.textAlign</p>"},{"location":"reference/interfaces/vizzu.Styles.AxisTitle/","title":"vizzu.Styles.AxisTitle","text":"<p>Vizzu / Modules / vizzu / Styles / AxisTitle</p>"},{"location":"reference/interfaces/vizzu.Styles.AxisTitle/#interface-axistitle","title":"Interface: AxisTitle","text":"<p>vizzu.Styles.AxisTitle</p> <p>Style settings of the Axis title</p>"},{"location":"reference/interfaces/vizzu.Styles.AxisTitle/#hierarchy","title":"Hierarchy","text":"<ul> <li> <p><code>Label</code></p> <p>\u21b3 <code>AxisTitle</code></p> </li> </ul>"},{"location":"reference/interfaces/vizzu.Styles.AxisTitle/#properties","title":"Properties","text":""},{"location":"reference/interfaces/vizzu.Styles.AxisTitle/#backgroundcolor","title":"backgroundColor","text":"<p>\u2022 <code>Optional</code> backgroundColor: <code>Color</code></p> <p>The background color of the displayed text.</p> <p>Inherited from</p> <p>Label.backgroundColor</p>"},{"location":"reference/interfaces/vizzu.Styles.AxisTitle/#color","title":"color","text":"<p>\u2022 <code>Optional</code> color: <code>Color</code></p> <p>The color of the displayed text.</p> <p>Inherited from</p> <p>Label.color</p>"},{"location":"reference/interfaces/vizzu.Styles.AxisTitle/#fontfamily","title":"fontFamily","text":"<p>\u2022 <code>Optional</code> fontFamily: <code>string</code></p> <p>The family of the font. If not set, it inherits the root style font family.</p> <p>Inherited from</p> <p>Label.fontFamily</p>"},{"location":"reference/interfaces/vizzu.Styles.AxisTitle/#fontsize","title":"fontSize","text":"<p>\u2022 <code>Optional</code> fontSize: <code>Length</code></p> <p>The size of the font. Percentage values are relative to the root style font size</p> <p>Inherited from</p> <p>Label.fontSize</p>"},{"location":"reference/interfaces/vizzu.Styles.AxisTitle/#fontstyle","title":"fontStyle","text":"<p>\u2022 <code>Optional</code> fontStyle: <code>\"normal\"</code> | <code>\"italic\"</code> | <code>\"oblique\"</code></p> <p>The style of the font.</p> <p>Inherited from</p> <p>Label.fontStyle</p>"},{"location":"reference/interfaces/vizzu.Styles.AxisTitle/#fontweight","title":"fontWeight","text":"<p>\u2022 <code>Optional</code> fontWeight: <code>number</code> | <code>\"bold\"</code> | <code>\"normal\"</code></p> <p>The weight of the font, numbers use the same scale as CSS.</p> <p>Inherited from</p> <p>Label.fontWeight</p>"},{"location":"reference/interfaces/vizzu.Styles.AxisTitle/#maxfractiondigits","title":"maxFractionDigits","text":"<p>\u2022 <code>Optional</code> maxFractionDigits: <code>number</code></p> <p>The maximum number of digits in fraction part if the text contains a number.</p> <p>Inherited from</p> <p>Label.maxFractionDigits</p>"},{"location":"reference/interfaces/vizzu.Styles.AxisTitle/#numberformat","title":"numberFormat","text":"<p>\u2022 <code>Optional</code> numberFormat: <code>\"none\"</code> | <code>\"grouped\"</code> | <code>\"prefixed\"</code></p> <p>The format of the number. Only applicable for texts showing numerical data such as marker and axis labels. 'grouped' uses thousand separators, 'prefixed' uses scientific notation.</p> <p>Inherited from</p> <p>Label.numberFormat</p>"},{"location":"reference/interfaces/vizzu.Styles.AxisTitle/#numberscale","title":"numberScale","text":"<p>\u2022 <code>Optional</code> numberScale: <code>string</code></p> <p>Number scale used for prefixed number format.</p> <p>Inherited from</p> <p>Label.numberScale</p>"},{"location":"reference/interfaces/vizzu.Styles.AxisTitle/#orientation","title":"orientation","text":"<p>\u2022 <code>Optional</code> orientation: <code>\"horizontal\"</code> | <code>\"vertical\"</code></p> <p>The orientation of the title.</p>"},{"location":"reference/interfaces/vizzu.Styles.AxisTitle/#paddingbottom","title":"paddingBottom","text":"<p>\u2022 <code>Optional</code> paddingBottom: <code>Length</code></p> <p>Bottom padding of the element.</p> <p>Inherited from</p> <p>Label.paddingBottom</p>"},{"location":"reference/interfaces/vizzu.Styles.AxisTitle/#paddingleft","title":"paddingLeft","text":"<p>\u2022 <code>Optional</code> paddingLeft: <code>Length</code></p> <p>Left padding of the element.</p> <p>Inherited from</p> <p>Label.paddingLeft</p>"},{"location":"reference/interfaces/vizzu.Styles.AxisTitle/#paddingright","title":"paddingRight","text":"<p>\u2022 <code>Optional</code> paddingRight: <code>Length</code></p> <p>Right padding of the element.</p> <p>Inherited from</p> <p>Label.paddingRight</p>"},{"location":"reference/interfaces/vizzu.Styles.AxisTitle/#paddingtop","title":"paddingTop","text":"<p>\u2022 <code>Optional</code> paddingTop: <code>Length</code></p> <p>Top padding of the element.</p> <p>Inherited from</p> <p>Label.paddingTop</p>"},{"location":"reference/interfaces/vizzu.Styles.AxisTitle/#position","title":"position","text":"<p>\u2022 <code>Optional</code> position: <code>\"axis\"</code> | <code>\"max-edge\"</code> | <code>\"min-edge\"</code></p> <p>Title position relatively to the plot.</p>"},{"location":"reference/interfaces/vizzu.Styles.AxisTitle/#side","title":"side","text":"<p>\u2022 <code>Optional</code> side: <code>\"positive\"</code> | <code>\"negative\"</code> | <code>\"upon\"</code></p> <p>Title alignment relatively to the position on the plot.</p>"},{"location":"reference/interfaces/vizzu.Styles.AxisTitle/#textalign","title":"textAlign","text":"<p>\u2022 <code>Optional</code> textAlign: <code>\"center\"</code> | <code>\"left\"</code> | <code>\"right\"</code></p> <p>The alignment of the displayed text.</p> <p>Inherited from</p> <p>Label.textAlign</p>"},{"location":"reference/interfaces/vizzu.Styles.AxisTitle/#vposition","title":"vposition","text":"<p>\u2022 <code>Optional</code> vposition: <code>\"end\"</code> | <code>\"middle\"</code> | <code>\"begin\"</code></p> <p>Title position on the axis or edge.</p>"},{"location":"reference/interfaces/vizzu.Styles.AxisTitle/#vside","title":"vside","text":"<p>\u2022 <code>Optional</code> vside: <code>\"positive\"</code> | <code>\"negative\"</code> | <code>\"upon\"</code></p> <p>Title alignment on the axis or edge.</p>"},{"location":"reference/interfaces/vizzu.Styles.Box/","title":"vizzu.Styles.Box","text":"<p>Vizzu / Modules / vizzu / Styles / Box</p>"},{"location":"reference/interfaces/vizzu.Styles.Box/#interface-box","title":"Interface: Box","text":"<p>vizzu.Styles.Box</p>"},{"location":"reference/interfaces/vizzu.Styles.Box/#hierarchy","title":"Hierarchy","text":"<ul> <li> <p><code>Box</code></p> <p>\u21b3 <code>Tooltip</code></p> <p>\u21b3 <code>Plot</code></p> <p>\u21b3 <code>Legend</code></p> <p>\u21b3 <code>Chart</code></p> </li> </ul>"},{"location":"reference/interfaces/vizzu.Styles.Box/#properties","title":"Properties","text":""},{"location":"reference/interfaces/vizzu.Styles.Box/#backgroundcolor","title":"backgroundColor","text":"<p>\u2022 <code>Optional</code> backgroundColor: <code>Color</code></p> <p>The background color of the element.</p>"},{"location":"reference/interfaces/vizzu.Styles.Box/#bordercolor","title":"borderColor","text":"<p>\u2022 <code>Optional</code> borderColor: <code>Color</code></p> <p>The border color of the element.</p>"},{"location":"reference/interfaces/vizzu.Styles.Box/#borderwidth","title":"borderWidth","text":"<p>\u2022 <code>Optional</code> borderWidth: <code>number</code></p> <p>The border width of the element.</p>"},{"location":"reference/interfaces/vizzu.Styles.Chart/","title":"vizzu.Styles.Chart","text":"<p>Vizzu / Modules / vizzu / Styles / Chart</p>"},{"location":"reference/interfaces/vizzu.Styles.Chart/#interface-chart","title":"Interface: Chart","text":"<p>vizzu.Styles.Chart</p>"},{"location":"reference/interfaces/vizzu.Styles.Chart/#hierarchy","title":"Hierarchy","text":"<ul> <li><code>Padding</code></li> </ul> <ul> <li><code>Box</code></li> </ul> <ul> <li> <p><code>Font</code></p> <p>\u21b3 <code>Chart</code></p> </li> </ul>"},{"location":"reference/interfaces/vizzu.Styles.Chart/#properties","title":"Properties","text":""},{"location":"reference/interfaces/vizzu.Styles.Chart/#backgroundcolor","title":"backgroundColor","text":"<p>\u2022 <code>Optional</code> backgroundColor: <code>Color</code></p> <p>The background color of the element.</p> <p>Inherited from</p> <p>Box.backgroundColor</p>"},{"location":"reference/interfaces/vizzu.Styles.Chart/#bordercolor","title":"borderColor","text":"<p>\u2022 <code>Optional</code> borderColor: <code>Color</code></p> <p>The border color of the element.</p> <p>Inherited from</p> <p>Box.borderColor</p>"},{"location":"reference/interfaces/vizzu.Styles.Chart/#borderwidth","title":"borderWidth","text":"<p>\u2022 <code>Optional</code> borderWidth: <code>number</code></p> <p>The border width of the element.</p> <p>Inherited from</p> <p>Box.borderWidth</p>"},{"location":"reference/interfaces/vizzu.Styles.Chart/#fontfamily","title":"fontFamily","text":"<p>\u2022 <code>Optional</code> fontFamily: <code>string</code></p> <p>The family of the font. If not set, it inherits the root style font family.</p> <p>Inherited from</p> <p>Font.fontFamily</p>"},{"location":"reference/interfaces/vizzu.Styles.Chart/#fontsize","title":"fontSize","text":"<p>\u2022 <code>Optional</code> fontSize: <code>Length</code></p> <p>The size of the font. Percentage values are relative to the root style font size</p> <p>Inherited from</p> <p>Font.fontSize</p>"},{"location":"reference/interfaces/vizzu.Styles.Chart/#fontstyle","title":"fontStyle","text":"<p>\u2022 <code>Optional</code> fontStyle: <code>\"normal\"</code> | <code>\"italic\"</code> | <code>\"oblique\"</code></p> <p>The style of the font.</p> <p>Inherited from</p> <p>Font.fontStyle</p>"},{"location":"reference/interfaces/vizzu.Styles.Chart/#fontweight","title":"fontWeight","text":"<p>\u2022 <code>Optional</code> fontWeight: <code>number</code> | <code>\"bold\"</code> | <code>\"normal\"</code></p> <p>The weight of the font, numbers use the same scale as CSS.</p> <p>Inherited from</p> <p>Font.fontWeight</p>"},{"location":"reference/interfaces/vizzu.Styles.Chart/#legend","title":"legend","text":"<p>\u2022 <code>Optional</code> legend: <code>Legend</code></p> <p>Style settings for the legend.</p>"},{"location":"reference/interfaces/vizzu.Styles.Chart/#logo","title":"logo","text":"<p>\u2022 <code>Optional</code> logo: <code>Logo</code></p> <p>Style settings of the Vizzu logo.</p>"},{"location":"reference/interfaces/vizzu.Styles.Chart/#paddingbottom","title":"paddingBottom","text":"<p>\u2022 <code>Optional</code> paddingBottom: <code>Length</code></p> <p>Bottom padding of the element.</p> <p>Inherited from</p> <p>Padding.paddingBottom</p>"},{"location":"reference/interfaces/vizzu.Styles.Chart/#paddingleft","title":"paddingLeft","text":"<p>\u2022 <code>Optional</code> paddingLeft: <code>Length</code></p> <p>Left padding of the element.</p> <p>Inherited from</p> <p>Padding.paddingLeft</p>"},{"location":"reference/interfaces/vizzu.Styles.Chart/#paddingright","title":"paddingRight","text":"<p>\u2022 <code>Optional</code> paddingRight: <code>Length</code></p> <p>Right padding of the element.</p> <p>Inherited from</p> <p>Padding.paddingRight</p>"},{"location":"reference/interfaces/vizzu.Styles.Chart/#paddingtop","title":"paddingTop","text":"<p>\u2022 <code>Optional</code> paddingTop: <code>Length</code></p> <p>Top padding of the element.</p> <p>Inherited from</p> <p>Padding.paddingTop</p>"},{"location":"reference/interfaces/vizzu.Styles.Chart/#plot","title":"plot","text":"<p>\u2022 <code>Optional</code> plot: <code>Plot</code></p> <p>Style settings for the plot area.</p>"},{"location":"reference/interfaces/vizzu.Styles.Chart/#title","title":"title","text":"<p>\u2022 <code>Optional</code> title: <code>Label</code></p> <p>Style settings for the main chart title.</p>"},{"location":"reference/interfaces/vizzu.Styles.Chart/#tooltip","title":"tooltip","text":"<p>\u2022 <code>Optional</code> tooltip: <code>Tooltip</code></p> <p>Style settings for the tooltip.</p>"},{"location":"reference/interfaces/vizzu.Styles.DataPoint/","title":"vizzu.Styles.DataPoint","text":"<p>Vizzu / Modules / vizzu / Styles / DataPoint</p>"},{"location":"reference/interfaces/vizzu.Styles.DataPoint/#interface-datapoint","title":"Interface: DataPoint","text":"<p>vizzu.Styles.DataPoint</p>"},{"location":"reference/interfaces/vizzu.Styles.DataPoint/#hierarchy","title":"Hierarchy","text":"<ul> <li> <p><code>DataPoint</code></p> <p>\u21b3 <code>Marker</code></p> </li> </ul>"},{"location":"reference/interfaces/vizzu.Styles.DataPoint/#properties","title":"Properties","text":""},{"location":"reference/interfaces/vizzu.Styles.DataPoint/#circlemaxradius","title":"circleMaxRadius","text":"<p>\u2022 <code>Optional</code> circleMaxRadius: <code>number</code></p> <p>Maximum circle radius specified as proportion of plot area size. e.g.: 0.01 means 1% of the width of the plot area.</p>"},{"location":"reference/interfaces/vizzu.Styles.DataPoint/#circleminradius","title":"circleMinRadius","text":"<p>\u2022 <code>Optional</code> circleMinRadius: <code>number</code></p> <p>Minimum circle radius specified as proportion of plot area size. e.g.: 0.01 means 1% of the width of the plot area.</p>"},{"location":"reference/interfaces/vizzu.Styles.DataPoint/#colorgradient","title":"colorGradient","text":"<p>\u2022 <code>Optional</code> colorGradient: <code>string</code></p> <p>Color gradient used for the measure on the color channel.</p>"},{"location":"reference/interfaces/vizzu.Styles.DataPoint/#colorpalette","title":"colorPalette","text":"<p>\u2022 <code>Optional</code> colorPalette: <code>string</code></p> <p>Color palette used for the dimension on the color channel.</p>"},{"location":"reference/interfaces/vizzu.Styles.DataPoint/#linemaxwidth","title":"lineMaxWidth","text":"<p>\u2022 <code>Optional</code> lineMaxWidth: <code>number</code></p> <p>Maximum line width specified as proportion of plot area size. e.g.: 0.01 means 1% of the width of the plot area.</p>"},{"location":"reference/interfaces/vizzu.Styles.DataPoint/#lineminwidth","title":"lineMinWidth","text":"<p>\u2022 <code>Optional</code> lineMinWidth: <code>number</code></p> <p>Minimum of line width specified as proportion of plot area size. e.g.: 0.01 means 1% of the width of the plot area.</p>"},{"location":"reference/interfaces/vizzu.Styles.DataPoint/#maxlightness","title":"maxLightness","text":"<p>\u2022 <code>Optional</code> maxLightness: <code>number</code></p> <p>Lightness value associated with the maximum value of the lightness channel's range.</p>"},{"location":"reference/interfaces/vizzu.Styles.DataPoint/#minlightness","title":"minLightness","text":"<p>\u2022 <code>Optional</code> minLightness: <code>number</code></p> <p>Lightness value associated with the minimum value of the lightness channel's range.</p>"},{"location":"reference/interfaces/vizzu.Styles.DataPoint/#rectanglespacing","title":"rectangleSpacing","text":"<p>\u2022 <code>Optional</code> rectangleSpacing: <code>number</code></p> <p>Spacing between bars/columns. The value specifies the size of the spacing as a factor of the marker size. e.g.: 0.1 means 10% of marker height/width depending on the chart's orientation.</p>"},{"location":"reference/interfaces/vizzu.Styles.Font/","title":"vizzu.Styles.Font","text":"<p>Vizzu / Modules / vizzu / Styles / Font</p>"},{"location":"reference/interfaces/vizzu.Styles.Font/#interface-font","title":"Interface: Font","text":"<p>vizzu.Styles.Font</p>"},{"location":"reference/interfaces/vizzu.Styles.Font/#hierarchy","title":"Hierarchy","text":"<ul> <li> <p><code>Font</code></p> <p>\u21b3 <code>Tooltip</code></p> <p>\u21b3 <code>Chart</code></p> </li> </ul>"},{"location":"reference/interfaces/vizzu.Styles.Font/#properties","title":"Properties","text":""},{"location":"reference/interfaces/vizzu.Styles.Font/#fontfamily","title":"fontFamily","text":"<p>\u2022 <code>Optional</code> fontFamily: <code>string</code></p> <p>The family of the font. If not set, it inherits the root style font family.</p>"},{"location":"reference/interfaces/vizzu.Styles.Font/#fontsize","title":"fontSize","text":"<p>\u2022 <code>Optional</code> fontSize: <code>Length</code></p> <p>The size of the font. Percentage values are relative to the root style font size</p>"},{"location":"reference/interfaces/vizzu.Styles.Font/#fontstyle","title":"fontStyle","text":"<p>\u2022 <code>Optional</code> fontStyle: <code>\"normal\"</code> | <code>\"italic\"</code> | <code>\"oblique\"</code></p> <p>The style of the font.</p>"},{"location":"reference/interfaces/vizzu.Styles.Font/#fontweight","title":"fontWeight","text":"<p>\u2022 <code>Optional</code> fontWeight: <code>number</code> | <code>\"bold\"</code> | <code>\"normal\"</code></p> <p>The weight of the font, numbers use the same scale as CSS.</p>"},{"location":"reference/interfaces/vizzu.Styles.Guides/","title":"vizzu.Styles.Guides","text":"<p>Vizzu / Modules / vizzu / Styles / Guides</p>"},{"location":"reference/interfaces/vizzu.Styles.Guides/#interface-guides","title":"Interface: Guides","text":"<p>vizzu.Styles.Guides</p>"},{"location":"reference/interfaces/vizzu.Styles.Guides/#properties","title":"Properties","text":""},{"location":"reference/interfaces/vizzu.Styles.Guides/#color","title":"color","text":"<p>\u2022 <code>Optional</code> color: <code>Color</code></p> <p>The color of the guides.</p>"},{"location":"reference/interfaces/vizzu.Styles.Guides/#linewidth","title":"lineWidth","text":"<p>\u2022 <code>Optional</code> lineWidth: <code>number</code></p> <p>Line width of the guide in pixel.</p>"},{"location":"reference/interfaces/vizzu.Styles.Interlacing/","title":"vizzu.Styles.Interlacing","text":"<p>Vizzu / Modules / vizzu / Styles / Interlacing</p>"},{"location":"reference/interfaces/vizzu.Styles.Interlacing/#interface-interlacing","title":"Interface: Interlacing","text":"<p>vizzu.Styles.Interlacing</p>"},{"location":"reference/interfaces/vizzu.Styles.Interlacing/#properties","title":"Properties","text":""},{"location":"reference/interfaces/vizzu.Styles.Interlacing/#color","title":"color","text":"<p>\u2022 <code>Optional</code> color: <code>Color</code></p> <p>Color of the interlacing pattern.</p>"},{"location":"reference/interfaces/vizzu.Styles.Legend/","title":"vizzu.Styles.Legend","text":"<p>Vizzu / Modules / vizzu / Styles / Legend</p>"},{"location":"reference/interfaces/vizzu.Styles.Legend/#interface-legend","title":"Interface: Legend","text":"<p>vizzu.Styles.Legend</p>"},{"location":"reference/interfaces/vizzu.Styles.Legend/#hierarchy","title":"Hierarchy","text":"<ul> <li><code>Padding</code></li> </ul> <ul> <li> <p><code>Box</code></p> <p>\u21b3 <code>Legend</code></p> </li> </ul>"},{"location":"reference/interfaces/vizzu.Styles.Legend/#properties","title":"Properties","text":""},{"location":"reference/interfaces/vizzu.Styles.Legend/#backgroundcolor","title":"backgroundColor","text":"<p>\u2022 <code>Optional</code> backgroundColor: <code>Color</code></p> <p>The background color of the element.</p> <p>Inherited from</p> <p>Box.backgroundColor</p>"},{"location":"reference/interfaces/vizzu.Styles.Legend/#bordercolor","title":"borderColor","text":"<p>\u2022 <code>Optional</code> borderColor: <code>Color</code></p> <p>The border color of the element.</p> <p>Inherited from</p> <p>Box.borderColor</p>"},{"location":"reference/interfaces/vizzu.Styles.Legend/#borderwidth","title":"borderWidth","text":"<p>\u2022 <code>Optional</code> borderWidth: <code>number</code></p> <p>The border width of the element.</p> <p>Inherited from</p> <p>Box.borderWidth</p>"},{"location":"reference/interfaces/vizzu.Styles.Legend/#label","title":"label","text":"<p>\u2022 <code>Optional</code> label: <code>Label</code></p> <p>Style settings for the labels on the legend.</p>"},{"location":"reference/interfaces/vizzu.Styles.Legend/#marker","title":"marker","text":"<p>\u2022 <code>Optional</code> marker: <code>LegendMarker</code></p>"},{"location":"reference/interfaces/vizzu.Styles.Legend/#maxwidth","title":"maxWidth","text":"<p>\u2022 <code>Optional</code> maxWidth: <code>Length</code></p> <p>Limit for the width of the boundary box.</p>"},{"location":"reference/interfaces/vizzu.Styles.Legend/#paddingbottom","title":"paddingBottom","text":"<p>\u2022 <code>Optional</code> paddingBottom: <code>Length</code></p> <p>Bottom padding of the element.</p> <p>Inherited from</p> <p>Padding.paddingBottom</p>"},{"location":"reference/interfaces/vizzu.Styles.Legend/#paddingleft","title":"paddingLeft","text":"<p>\u2022 <code>Optional</code> paddingLeft: <code>Length</code></p> <p>Left padding of the element.</p> <p>Inherited from</p> <p>Padding.paddingLeft</p>"},{"location":"reference/interfaces/vizzu.Styles.Legend/#paddingright","title":"paddingRight","text":"<p>\u2022 <code>Optional</code> paddingRight: <code>Length</code></p> <p>Right padding of the element.</p> <p>Inherited from</p> <p>Padding.paddingRight</p>"},{"location":"reference/interfaces/vizzu.Styles.Legend/#paddingtop","title":"paddingTop","text":"<p>\u2022 <code>Optional</code> paddingTop: <code>Length</code></p> <p>Top padding of the element.</p> <p>Inherited from</p> <p>Padding.paddingTop</p>"},{"location":"reference/interfaces/vizzu.Styles.Legend/#title","title":"title","text":"<p>\u2022 <code>Optional</code> title: <code>Label</code></p> <p>Style settings for the legend's title.</p>"},{"location":"reference/interfaces/vizzu.Styles.Legend/#width","title":"width","text":"<p>\u2022 <code>Optional</code> width: <code>Length</code></p> <p>Width of the legend's boundary box.</p>"},{"location":"reference/interfaces/vizzu.Styles.LegendMarker/","title":"vizzu.Styles.LegendMarker","text":"<p>Vizzu / Modules / vizzu / Styles / LegendMarker</p>"},{"location":"reference/interfaces/vizzu.Styles.LegendMarker/#interface-legendmarker","title":"Interface: LegendMarker","text":"<p>vizzu.Styles.LegendMarker</p>"},{"location":"reference/interfaces/vizzu.Styles.LegendMarker/#properties","title":"Properties","text":""},{"location":"reference/interfaces/vizzu.Styles.LegendMarker/#size","title":"size","text":"<p>\u2022 <code>Optional</code> size: <code>Length</code></p> <p>Size of the legend marker (diameter or side length).</p>"},{"location":"reference/interfaces/vizzu.Styles.LegendMarker/#type","title":"type","text":"<p>\u2022 <code>Optional</code> type: <code>\"square\"</code> | <code>\"circle\"</code></p> <p>Shape of the legend marker.</p>"},{"location":"reference/interfaces/vizzu.Styles.Logo/","title":"vizzu.Styles.Logo","text":"<p>Vizzu / Modules / vizzu / Styles / Logo</p>"},{"location":"reference/interfaces/vizzu.Styles.Logo/#interface-logo","title":"Interface: Logo","text":"<p>vizzu.Styles.Logo</p>"},{"location":"reference/interfaces/vizzu.Styles.Logo/#hierarchy","title":"Hierarchy","text":"<ul> <li> <p><code>Padding</code></p> <p>\u21b3 <code>Logo</code></p> </li> </ul>"},{"location":"reference/interfaces/vizzu.Styles.Logo/#properties","title":"Properties","text":""},{"location":"reference/interfaces/vizzu.Styles.Logo/#filter","title":"filter","text":"<p>\u2022 <code>Optional</code> filter: <code>ColorTransform</code></p> <p>Color transformation applied on the colored Vizzu Logo</p>"},{"location":"reference/interfaces/vizzu.Styles.Logo/#paddingbottom","title":"paddingBottom","text":"<p>\u2022 <code>Optional</code> paddingBottom: <code>Length</code></p> <p>Bottom padding of the element.</p> <p>Inherited from</p> <p>Padding.paddingBottom</p>"},{"location":"reference/interfaces/vizzu.Styles.Logo/#paddingleft","title":"paddingLeft","text":"<p>\u2022 <code>Optional</code> paddingLeft: <code>Length</code></p> <p>Left padding of the element.</p> <p>Inherited from</p> <p>Padding.paddingLeft</p>"},{"location":"reference/interfaces/vizzu.Styles.Logo/#paddingright","title":"paddingRight","text":"<p>\u2022 <code>Optional</code> paddingRight: <code>Length</code></p> <p>Right padding of the element.</p> <p>Inherited from</p> <p>Padding.paddingRight</p>"},{"location":"reference/interfaces/vizzu.Styles.Logo/#paddingtop","title":"paddingTop","text":"<p>\u2022 <code>Optional</code> paddingTop: <code>Length</code></p> <p>Top padding of the element.</p> <p>Inherited from</p> <p>Padding.paddingTop</p>"},{"location":"reference/interfaces/vizzu.Styles.Logo/#width","title":"width","text":"<p>\u2022 <code>Optional</code> width: <code>Length</code></p> <p>Width of the Vizzu logo</p>"},{"location":"reference/interfaces/vizzu.Styles.Marker/","title":"vizzu.Styles.Marker","text":"<p>Vizzu / Modules / vizzu / Styles / Marker</p>"},{"location":"reference/interfaces/vizzu.Styles.Marker/#interface-marker","title":"Interface: Marker","text":"<p>vizzu.Styles.Marker</p>"},{"location":"reference/interfaces/vizzu.Styles.Marker/#hierarchy","title":"Hierarchy","text":"<ul> <li> <p><code>DataPoint</code></p> <p>\u21b3 <code>Marker</code></p> </li> </ul>"},{"location":"reference/interfaces/vizzu.Styles.Marker/#properties","title":"Properties","text":""},{"location":"reference/interfaces/vizzu.Styles.Marker/#borderopacity","title":"borderOpacity","text":"<p>\u2022 <code>Optional</code> borderOpacity: <code>number</code></p> <p>Opacity of the marker border.</p>"},{"location":"reference/interfaces/vizzu.Styles.Marker/#borderopacitymode","title":"borderOpacityMode","text":"<p>\u2022 <code>Optional</code> borderOpacityMode: <code>\"straight\"</code> | <code>\"premultiplied\"</code></p>"},{"location":"reference/interfaces/vizzu.Styles.Marker/#borderwidth","title":"borderWidth","text":"<p>\u2022 <code>Optional</code> borderWidth: <code>number</code></p> <p>Width of the marker border in pixels.</p>"},{"location":"reference/interfaces/vizzu.Styles.Marker/#circlemaxradius","title":"circleMaxRadius","text":"<p>\u2022 <code>Optional</code> circleMaxRadius: <code>number</code></p> <p>Maximum circle radius specified as proportion of plot area size. e.g.: 0.01 means 1% of the width of the plot area.</p> <p>Inherited from</p> <p>DataPoint.circleMaxRadius</p>"},{"location":"reference/interfaces/vizzu.Styles.Marker/#circleminradius","title":"circleMinRadius","text":"<p>\u2022 <code>Optional</code> circleMinRadius: <code>number</code></p> <p>Minimum circle radius specified as proportion of plot area size. e.g.: 0.01 means 1% of the width of the plot area.</p> <p>Inherited from</p> <p>DataPoint.circleMinRadius</p>"},{"location":"reference/interfaces/vizzu.Styles.Marker/#colorgradient","title":"colorGradient","text":"<p>\u2022 <code>Optional</code> colorGradient: <code>string</code></p> <p>Color gradient used for the measure on the color channel.</p> <p>Inherited from</p> <p>DataPoint.colorGradient</p>"},{"location":"reference/interfaces/vizzu.Styles.Marker/#colorpalette","title":"colorPalette","text":"<p>\u2022 <code>Optional</code> colorPalette: <code>string</code></p> <p>Color palette used for the dimension on the color channel.</p> <p>Inherited from</p> <p>DataPoint.colorPalette</p>"},{"location":"reference/interfaces/vizzu.Styles.Marker/#fillopacity","title":"fillOpacity","text":"<p>\u2022 <code>Optional</code> fillOpacity: <code>number</code></p> <p>Opacity of the marker fill color.</p>"},{"location":"reference/interfaces/vizzu.Styles.Marker/#guides","title":"guides","text":"<p>\u2022 <code>Optional</code> guides: <code>Guides</code></p> <p>Style settings for guide lines drawn for the markers.</p>"},{"location":"reference/interfaces/vizzu.Styles.Marker/#label","title":"label","text":"<p>\u2022 <code>Optional</code> label: <code>MarkerLabel</code></p> <p>Style settings for the marker labels.</p>"},{"location":"reference/interfaces/vizzu.Styles.Marker/#linemaxwidth","title":"lineMaxWidth","text":"<p>\u2022 <code>Optional</code> lineMaxWidth: <code>number</code></p> <p>Maximum line width specified as proportion of plot area size. e.g.: 0.01 means 1% of the width of the plot area.</p> <p>Inherited from</p> <p>DataPoint.lineMaxWidth</p>"},{"location":"reference/interfaces/vizzu.Styles.Marker/#lineminwidth","title":"lineMinWidth","text":"<p>\u2022 <code>Optional</code> lineMinWidth: <code>number</code></p> <p>Minimum of line width specified as proportion of plot area size. e.g.: 0.01 means 1% of the width of the plot area.</p> <p>Inherited from</p> <p>DataPoint.lineMinWidth</p>"},{"location":"reference/interfaces/vizzu.Styles.Marker/#maxlightness","title":"maxLightness","text":"<p>\u2022 <code>Optional</code> maxLightness: <code>number</code></p> <p>Lightness value associated with the maximum value of the lightness channel's range.</p> <p>Inherited from</p> <p>DataPoint.maxLightness</p>"},{"location":"reference/interfaces/vizzu.Styles.Marker/#minlightness","title":"minLightness","text":"<p>\u2022 <code>Optional</code> minLightness: <code>number</code></p> <p>Lightness value associated with the minimum value of the lightness channel's range.</p> <p>Inherited from</p> <p>DataPoint.minLightness</p>"},{"location":"reference/interfaces/vizzu.Styles.Marker/#rectanglespacing","title":"rectangleSpacing","text":"<p>\u2022 <code>Optional</code> rectangleSpacing: <code>number</code></p> <p>Spacing between bars/columns. The value specifies the size of the spacing as a factor of the marker size. e.g.: 0.1 means 10% of marker height/width depending on the chart's orientation.</p> <p>Inherited from</p> <p>DataPoint.rectangleSpacing</p>"},{"location":"reference/interfaces/vizzu.Styles.MarkerLabel/","title":"vizzu.Styles.MarkerLabel","text":"<p>Vizzu / Modules / vizzu / Styles / MarkerLabel</p>"},{"location":"reference/interfaces/vizzu.Styles.MarkerLabel/#interface-markerlabel","title":"Interface: MarkerLabel","text":"<p>vizzu.Styles.MarkerLabel</p>"},{"location":"reference/interfaces/vizzu.Styles.MarkerLabel/#hierarchy","title":"Hierarchy","text":"<ul> <li> <p><code>OrientedLabel</code></p> <p>\u21b3 <code>MarkerLabel</code></p> </li> </ul>"},{"location":"reference/interfaces/vizzu.Styles.MarkerLabel/#properties","title":"Properties","text":""},{"location":"reference/interfaces/vizzu.Styles.MarkerLabel/#angle","title":"angle","text":"<p>\u2022 <code>Optional</code> angle: <code>Angle</code></p> <p>Additional rotation of the label.</p> <p>Inherited from</p> <p>OrientedLabel.angle</p>"},{"location":"reference/interfaces/vizzu.Styles.MarkerLabel/#backgroundcolor","title":"backgroundColor","text":"<p>\u2022 <code>Optional</code> backgroundColor: <code>Color</code></p> <p>The background color of the displayed text.</p> <p>Inherited from</p> <p>OrientedLabel.backgroundColor</p>"},{"location":"reference/interfaces/vizzu.Styles.MarkerLabel/#color","title":"color","text":"<p>\u2022 <code>Optional</code> color: <code>Color</code></p> <p>The color of the displayed text.</p> <p>Inherited from</p> <p>OrientedLabel.color</p>"},{"location":"reference/interfaces/vizzu.Styles.MarkerLabel/#filter","title":"filter","text":"<p>\u2022 <code>Optional</code> filter: <code>ColorTransform</code></p> <p>Defines the transformation used for calculating the label color from the marker color.</p>"},{"location":"reference/interfaces/vizzu.Styles.MarkerLabel/#fontfamily","title":"fontFamily","text":"<p>\u2022 <code>Optional</code> fontFamily: <code>string</code></p> <p>The family of the font. If not set, it inherits the root style font family.</p> <p>Inherited from</p> <p>OrientedLabel.fontFamily</p>"},{"location":"reference/interfaces/vizzu.Styles.MarkerLabel/#fontsize","title":"fontSize","text":"<p>\u2022 <code>Optional</code> fontSize: <code>Length</code></p> <p>The size of the font. Percentage values are relative to the root style font size</p> <p>Inherited from</p> <p>OrientedLabel.fontSize</p>"},{"location":"reference/interfaces/vizzu.Styles.MarkerLabel/#fontstyle","title":"fontStyle","text":"<p>\u2022 <code>Optional</code> fontStyle: <code>\"normal\"</code> | <code>\"italic\"</code> | <code>\"oblique\"</code></p> <p>The style of the font.</p> <p>Inherited from</p> <p>OrientedLabel.fontStyle</p>"},{"location":"reference/interfaces/vizzu.Styles.MarkerLabel/#fontweight","title":"fontWeight","text":"<p>\u2022 <code>Optional</code> fontWeight: <code>number</code> | <code>\"bold\"</code> | <code>\"normal\"</code></p> <p>The weight of the font, numbers use the same scale as CSS.</p> <p>Inherited from</p> <p>OrientedLabel.fontWeight</p>"},{"location":"reference/interfaces/vizzu.Styles.MarkerLabel/#format","title":"format","text":"<p>\u2022 <code>Optional</code> format: <code>\"measureFirst\"</code> | <code>\"dimensionsFirst\"</code></p> <p>Sets the order of values on the label if both a measure and a dimension are present.</p>"},{"location":"reference/interfaces/vizzu.Styles.MarkerLabel/#maxfractiondigits","title":"maxFractionDigits","text":"<p>\u2022 <code>Optional</code> maxFractionDigits: <code>number</code></p> <p>The maximum number of digits in fraction part if the text contains a number.</p> <p>Inherited from</p> <p>OrientedLabel.maxFractionDigits</p>"},{"location":"reference/interfaces/vizzu.Styles.MarkerLabel/#numberformat","title":"numberFormat","text":"<p>\u2022 <code>Optional</code> numberFormat: <code>\"none\"</code> | <code>\"grouped\"</code> | <code>\"prefixed\"</code></p> <p>The format of the number. Only applicable for texts showing numerical data such as marker and axis labels. 'grouped' uses thousand separators, 'prefixed' uses scientific notation.</p> <p>Inherited from</p> <p>OrientedLabel.numberFormat</p>"},{"location":"reference/interfaces/vizzu.Styles.MarkerLabel/#numberscale","title":"numberScale","text":"<p>\u2022 <code>Optional</code> numberScale: <code>string</code></p> <p>Number scale used for prefixed number format.</p> <p>Inherited from</p> <p>OrientedLabel.numberScale</p>"},{"location":"reference/interfaces/vizzu.Styles.MarkerLabel/#orientation","title":"orientation","text":"<p>\u2022 <code>Optional</code> orientation: <code>\"normal\"</code> | <code>\"horizontal\"</code> | <code>\"vertical\"</code> | <code>\"tangential\"</code></p> <p>Orientation of the label relatively to the axis or marker it is attached to.</p> <p>Inherited from</p> <p>OrientedLabel.orientation</p>"},{"location":"reference/interfaces/vizzu.Styles.MarkerLabel/#paddingbottom","title":"paddingBottom","text":"<p>\u2022 <code>Optional</code> paddingBottom: <code>Length</code></p> <p>Bottom padding of the element.</p> <p>Inherited from</p> <p>OrientedLabel.paddingBottom</p>"},{"location":"reference/interfaces/vizzu.Styles.MarkerLabel/#paddingleft","title":"paddingLeft","text":"<p>\u2022 <code>Optional</code> paddingLeft: <code>Length</code></p> <p>Left padding of the element.</p> <p>Inherited from</p> <p>OrientedLabel.paddingLeft</p>"},{"location":"reference/interfaces/vizzu.Styles.MarkerLabel/#paddingright","title":"paddingRight","text":"<p>\u2022 <code>Optional</code> paddingRight: <code>Length</code></p> <p>Right padding of the element.</p> <p>Inherited from</p> <p>OrientedLabel.paddingRight</p>"},{"location":"reference/interfaces/vizzu.Styles.MarkerLabel/#paddingtop","title":"paddingTop","text":"<p>\u2022 <code>Optional</code> paddingTop: <code>Length</code></p> <p>Top padding of the element.</p> <p>Inherited from</p> <p>OrientedLabel.paddingTop</p>"},{"location":"reference/interfaces/vizzu.Styles.MarkerLabel/#position","title":"position","text":"<p>\u2022 <code>Optional</code> position: <code>\"center\"</code> | <code>\"left\"</code> | <code>\"top\"</code> | <code>\"bottom\"</code> | <code>\"right\"</code></p> <p>The label position relatively to the marker.</p>"},{"location":"reference/interfaces/vizzu.Styles.MarkerLabel/#textalign","title":"textAlign","text":"<p>\u2022 <code>Optional</code> textAlign: <code>\"center\"</code> | <code>\"left\"</code> | <code>\"right\"</code></p> <p>The alignment of the displayed text.</p> <p>Inherited from</p> <p>OrientedLabel.textAlign</p>"},{"location":"reference/interfaces/vizzu.Styles.OrientedLabel/","title":"vizzu.Styles.OrientedLabel","text":"<p>Vizzu / Modules / vizzu / Styles / OrientedLabel</p>"},{"location":"reference/interfaces/vizzu.Styles.OrientedLabel/#interface-orientedlabel","title":"Interface: OrientedLabel","text":"<p>vizzu.Styles.OrientedLabel</p>"},{"location":"reference/interfaces/vizzu.Styles.OrientedLabel/#hierarchy","title":"Hierarchy","text":"<ul> <li> <p><code>Label</code></p> <p>\u21b3 <code>OrientedLabel</code></p> <p>\u21b3\u21b3 <code>MarkerLabel</code></p> <p>\u21b3\u21b3 <code>AxisLabel</code></p> </li> </ul>"},{"location":"reference/interfaces/vizzu.Styles.OrientedLabel/#properties","title":"Properties","text":""},{"location":"reference/interfaces/vizzu.Styles.OrientedLabel/#angle","title":"angle","text":"<p>\u2022 <code>Optional</code> angle: <code>Angle</code></p> <p>Additional rotation of the label.</p>"},{"location":"reference/interfaces/vizzu.Styles.OrientedLabel/#backgroundcolor","title":"backgroundColor","text":"<p>\u2022 <code>Optional</code> backgroundColor: <code>Color</code></p> <p>The background color of the displayed text.</p> <p>Inherited from</p> <p>Label.backgroundColor</p>"},{"location":"reference/interfaces/vizzu.Styles.OrientedLabel/#color","title":"color","text":"<p>\u2022 <code>Optional</code> color: <code>Color</code></p> <p>The color of the displayed text.</p> <p>Inherited from</p> <p>Label.color</p>"},{"location":"reference/interfaces/vizzu.Styles.OrientedLabel/#fontfamily","title":"fontFamily","text":"<p>\u2022 <code>Optional</code> fontFamily: <code>string</code></p> <p>The family of the font. If not set, it inherits the root style font family.</p> <p>Inherited from</p> <p>Label.fontFamily</p>"},{"location":"reference/interfaces/vizzu.Styles.OrientedLabel/#fontsize","title":"fontSize","text":"<p>\u2022 <code>Optional</code> fontSize: <code>Length</code></p> <p>The size of the font. Percentage values are relative to the root style font size</p> <p>Inherited from</p> <p>Label.fontSize</p>"},{"location":"reference/interfaces/vizzu.Styles.OrientedLabel/#fontstyle","title":"fontStyle","text":"<p>\u2022 <code>Optional</code> fontStyle: <code>\"normal\"</code> | <code>\"italic\"</code> | <code>\"oblique\"</code></p> <p>The style of the font.</p> <p>Inherited from</p> <p>Label.fontStyle</p>"},{"location":"reference/interfaces/vizzu.Styles.OrientedLabel/#fontweight","title":"fontWeight","text":"<p>\u2022 <code>Optional</code> fontWeight: <code>number</code> | <code>\"bold\"</code> | <code>\"normal\"</code></p> <p>The weight of the font, numbers use the same scale as CSS.</p> <p>Inherited from</p> <p>Label.fontWeight</p>"},{"location":"reference/interfaces/vizzu.Styles.OrientedLabel/#maxfractiondigits","title":"maxFractionDigits","text":"<p>\u2022 <code>Optional</code> maxFractionDigits: <code>number</code></p> <p>The maximum number of digits in fraction part if the text contains a number.</p> <p>Inherited from</p> <p>Label.maxFractionDigits</p>"},{"location":"reference/interfaces/vizzu.Styles.OrientedLabel/#numberformat","title":"numberFormat","text":"<p>\u2022 <code>Optional</code> numberFormat: <code>\"none\"</code> | <code>\"grouped\"</code> | <code>\"prefixed\"</code></p> <p>The format of the number. Only applicable for texts showing numerical data such as marker and axis labels. 'grouped' uses thousand separators, 'prefixed' uses scientific notation.</p> <p>Inherited from</p> <p>Label.numberFormat</p>"},{"location":"reference/interfaces/vizzu.Styles.OrientedLabel/#numberscale","title":"numberScale","text":"<p>\u2022 <code>Optional</code> numberScale: <code>string</code></p> <p>Number scale used for prefixed number format.</p> <p>Inherited from</p> <p>Label.numberScale</p>"},{"location":"reference/interfaces/vizzu.Styles.OrientedLabel/#orientation","title":"orientation","text":"<p>\u2022 <code>Optional</code> orientation: <code>\"normal\"</code> | <code>\"horizontal\"</code> | <code>\"vertical\"</code> | <code>\"tangential\"</code></p> <p>Orientation of the label relatively to the axis or marker it is attached to.</p>"},{"location":"reference/interfaces/vizzu.Styles.OrientedLabel/#paddingbottom","title":"paddingBottom","text":"<p>\u2022 <code>Optional</code> paddingBottom: <code>Length</code></p> <p>Bottom padding of the element.</p> <p>Inherited from</p> <p>Label.paddingBottom</p>"},{"location":"reference/interfaces/vizzu.Styles.OrientedLabel/#paddingleft","title":"paddingLeft","text":"<p>\u2022 <code>Optional</code> paddingLeft: <code>Length</code></p> <p>Left padding of the element.</p> <p>Inherited from</p> <p>Label.paddingLeft</p>"},{"location":"reference/interfaces/vizzu.Styles.OrientedLabel/#paddingright","title":"paddingRight","text":"<p>\u2022 <code>Optional</code> paddingRight: <code>Length</code></p> <p>Right padding of the element.</p> <p>Inherited from</p> <p>Label.paddingRight</p>"},{"location":"reference/interfaces/vizzu.Styles.OrientedLabel/#paddingtop","title":"paddingTop","text":"<p>\u2022 <code>Optional</code> paddingTop: <code>Length</code></p> <p>Top padding of the element.</p> <p>Inherited from</p> <p>Label.paddingTop</p>"},{"location":"reference/interfaces/vizzu.Styles.OrientedLabel/#textalign","title":"textAlign","text":"<p>\u2022 <code>Optional</code> textAlign: <code>\"center\"</code> | <code>\"left\"</code> | <code>\"right\"</code></p> <p>The alignment of the displayed text.</p> <p>Inherited from</p> <p>Label.textAlign</p>"},{"location":"reference/interfaces/vizzu.Styles.Padding/","title":"vizzu.Styles.Padding","text":"<p>Vizzu / Modules / vizzu / Styles / Padding</p>"},{"location":"reference/interfaces/vizzu.Styles.Padding/#interface-padding","title":"Interface: Padding","text":"<p>vizzu.Styles.Padding</p>"},{"location":"reference/interfaces/vizzu.Styles.Padding/#hierarchy","title":"Hierarchy","text":"<ul> <li> <p><code>Padding</code></p> <p>\u21b3 <code>Logo</code></p> <p>\u21b3 <code>Plot</code></p> <p>\u21b3 <code>Legend</code></p> <p>\u21b3 <code>Chart</code></p> </li> </ul>"},{"location":"reference/interfaces/vizzu.Styles.Padding/#properties","title":"Properties","text":""},{"location":"reference/interfaces/vizzu.Styles.Padding/#paddingbottom","title":"paddingBottom","text":"<p>\u2022 <code>Optional</code> paddingBottom: <code>Length</code></p> <p>Bottom padding of the element.</p>"},{"location":"reference/interfaces/vizzu.Styles.Padding/#paddingleft","title":"paddingLeft","text":"<p>\u2022 <code>Optional</code> paddingLeft: <code>Length</code></p> <p>Left padding of the element.</p>"},{"location":"reference/interfaces/vizzu.Styles.Padding/#paddingright","title":"paddingRight","text":"<p>\u2022 <code>Optional</code> paddingRight: <code>Length</code></p> <p>Right padding of the element.</p>"},{"location":"reference/interfaces/vizzu.Styles.Padding/#paddingtop","title":"paddingTop","text":"<p>\u2022 <code>Optional</code> paddingTop: <code>Length</code></p> <p>Top padding of the element.</p>"},{"location":"reference/interfaces/vizzu.Styles.Plot/","title":"vizzu.Styles.Plot","text":"<p>Vizzu / Modules / vizzu / Styles / Plot</p>"},{"location":"reference/interfaces/vizzu.Styles.Plot/#interface-plot","title":"Interface: Plot","text":"<p>vizzu.Styles.Plot</p>"},{"location":"reference/interfaces/vizzu.Styles.Plot/#hierarchy","title":"Hierarchy","text":"<ul> <li><code>Padding</code></li> </ul> <ul> <li> <p><code>Box</code></p> <p>\u21b3 <code>Plot</code></p> </li> </ul>"},{"location":"reference/interfaces/vizzu.Styles.Plot/#properties","title":"Properties","text":""},{"location":"reference/interfaces/vizzu.Styles.Plot/#backgroundcolor","title":"backgroundColor","text":"<p>\u2022 <code>Optional</code> backgroundColor: <code>Color</code></p> <p>The background color of the element.</p> <p>Inherited from</p> <p>Box.backgroundColor</p>"},{"location":"reference/interfaces/vizzu.Styles.Plot/#bordercolor","title":"borderColor","text":"<p>\u2022 <code>Optional</code> borderColor: <code>Color</code></p> <p>The border color of the element.</p> <p>Inherited from</p> <p>Box.borderColor</p>"},{"location":"reference/interfaces/vizzu.Styles.Plot/#borderwidth","title":"borderWidth","text":"<p>\u2022 <code>Optional</code> borderWidth: <code>number</code></p> <p>The border width of the element.</p> <p>Inherited from</p> <p>Box.borderWidth</p>"},{"location":"reference/interfaces/vizzu.Styles.Plot/#marker","title":"marker","text":"<p>\u2022 <code>Optional</code> marker: <code>Marker</code></p> <p>Style settings for the markers.</p>"},{"location":"reference/interfaces/vizzu.Styles.Plot/#overflow","title":"overflow","text":"<p>\u2022 <code>Optional</code> overflow: <code>\"hidden\"</code> | <code>\"visible\"</code></p> <p>Controls drawing outside of the plot area. If hidden, clipping will be set for the boundary of the coordinate system.</p>"},{"location":"reference/interfaces/vizzu.Styles.Plot/#paddingbottom","title":"paddingBottom","text":"<p>\u2022 <code>Optional</code> paddingBottom: <code>Length</code></p> <p>Bottom padding of the element.</p> <p>Inherited from</p> <p>Padding.paddingBottom</p>"},{"location":"reference/interfaces/vizzu.Styles.Plot/#paddingleft","title":"paddingLeft","text":"<p>\u2022 <code>Optional</code> paddingLeft: <code>Length</code></p> <p>Left padding of the element.</p> <p>Inherited from</p> <p>Padding.paddingLeft</p>"},{"location":"reference/interfaces/vizzu.Styles.Plot/#paddingright","title":"paddingRight","text":"<p>\u2022 <code>Optional</code> paddingRight: <code>Length</code></p> <p>Right padding of the element.</p> <p>Inherited from</p> <p>Padding.paddingRight</p>"},{"location":"reference/interfaces/vizzu.Styles.Plot/#paddingtop","title":"paddingTop","text":"<p>\u2022 <code>Optional</code> paddingTop: <code>Length</code></p> <p>Top padding of the element.</p> <p>Inherited from</p> <p>Padding.paddingTop</p>"},{"location":"reference/interfaces/vizzu.Styles.Plot/#xaxis","title":"xAxis","text":"<p>\u2022 <code>Optional</code> xAxis: <code>Axis</code></p> <p>Style settings for the x-axis - or the angle when using polar coordinates.</p>"},{"location":"reference/interfaces/vizzu.Styles.Plot/#yaxis","title":"yAxis","text":"<p>\u2022 <code>Optional</code> yAxis: <code>Axis</code></p> <p>Style settings for the y-axis - or the radius when using polar coordinates.</p>"},{"location":"reference/interfaces/vizzu.Styles.Text/","title":"vizzu.Styles.Text","text":"<p>Vizzu / Modules / vizzu / Styles / Text</p>"},{"location":"reference/interfaces/vizzu.Styles.Text/#interface-text","title":"Interface: Text","text":"<p>vizzu.Styles.Text</p>"},{"location":"reference/interfaces/vizzu.Styles.Text/#properties","title":"Properties","text":""},{"location":"reference/interfaces/vizzu.Styles.Text/#backgroundcolor","title":"backgroundColor","text":"<p>\u2022 <code>Optional</code> backgroundColor: <code>Color</code></p> <p>The background color of the displayed text.</p>"},{"location":"reference/interfaces/vizzu.Styles.Text/#color","title":"color","text":"<p>\u2022 <code>Optional</code> color: <code>Color</code></p> <p>The color of the displayed text.</p>"},{"location":"reference/interfaces/vizzu.Styles.Text/#maxfractiondigits","title":"maxFractionDigits","text":"<p>\u2022 <code>Optional</code> maxFractionDigits: <code>number</code></p> <p>The maximum number of digits in fraction part if the text contains a number.</p>"},{"location":"reference/interfaces/vizzu.Styles.Text/#numberformat","title":"numberFormat","text":"<p>\u2022 <code>Optional</code> numberFormat: <code>\"none\"</code> | <code>\"grouped\"</code> | <code>\"prefixed\"</code></p> <p>The format of the number. Only applicable for texts showing numerical data such as marker and axis labels. 'grouped' uses thousand separators, 'prefixed' uses scientific notation.</p>"},{"location":"reference/interfaces/vizzu.Styles.Text/#numberscale","title":"numberScale","text":"<p>\u2022 <code>Optional</code> numberScale: <code>string</code></p> <p>Number scale used for prefixed number format.</p>"},{"location":"reference/interfaces/vizzu.Styles.Text/#textalign","title":"textAlign","text":"<p>\u2022 <code>Optional</code> textAlign: <code>\"center\"</code> | <code>\"left\"</code> | <code>\"right\"</code></p> <p>The alignment of the displayed text.</p>"},{"location":"reference/interfaces/vizzu.Styles.Ticks/","title":"vizzu.Styles.Ticks","text":"<p>Vizzu / Modules / vizzu / Styles / Ticks</p>"},{"location":"reference/interfaces/vizzu.Styles.Ticks/#interface-ticks","title":"Interface: Ticks","text":"<p>vizzu.Styles.Ticks</p>"},{"location":"reference/interfaces/vizzu.Styles.Ticks/#properties","title":"Properties","text":""},{"location":"reference/interfaces/vizzu.Styles.Ticks/#color","title":"color","text":"<p>\u2022 <code>Optional</code> color: <code>Color</code></p> <p>Color of the ticks on the axis.</p>"},{"location":"reference/interfaces/vizzu.Styles.Ticks/#length","title":"length","text":"<p>\u2022 <code>Optional</code> length: <code>Length</code></p> <p>Length of the ticks on the axis.</p>"},{"location":"reference/interfaces/vizzu.Styles.Ticks/#linewidth","title":"lineWidth","text":"<p>\u2022 <code>Optional</code> lineWidth: <code>number</code></p> <p>Line width of the ticks on the axis.</p>"},{"location":"reference/interfaces/vizzu.Styles.Ticks/#position","title":"position","text":"<p>\u2022 <code>Optional</code> position: <code>\"center\"</code> | <code>\"outside\"</code> | <code>\"inside\"</code></p> <p>Position of the ticks on the axis relatively to the axis line.</p>"},{"location":"reference/interfaces/vizzu.Styles.Tooltip/","title":"vizzu.Styles.Tooltip","text":"<p>Vizzu / Modules / vizzu / Styles / Tooltip</p>"},{"location":"reference/interfaces/vizzu.Styles.Tooltip/#interface-tooltip","title":"Interface: Tooltip","text":"<p>vizzu.Styles.Tooltip</p>"},{"location":"reference/interfaces/vizzu.Styles.Tooltip/#hierarchy","title":"Hierarchy","text":"<ul> <li><code>Font</code></li> </ul> <ul> <li> <p><code>Box</code></p> <p>\u21b3 <code>Tooltip</code></p> </li> </ul>"},{"location":"reference/interfaces/vizzu.Styles.Tooltip/#properties","title":"Properties","text":""},{"location":"reference/interfaces/vizzu.Styles.Tooltip/#arrowsize","title":"arrowSize","text":"<p>\u2022 <code>Optional</code> arrowSize: <code>number</code></p> <p>Base size of the info bubble arrow</p>"},{"location":"reference/interfaces/vizzu.Styles.Tooltip/#backgroundcolor","title":"backgroundColor","text":"<p>\u2022 <code>Optional</code> backgroundColor: <code>Color</code></p> <p>The background color of the element.</p> <p>Inherited from</p> <p>Box.backgroundColor</p>"},{"location":"reference/interfaces/vizzu.Styles.Tooltip/#bordercolor","title":"borderColor","text":"<p>\u2022 <code>Optional</code> borderColor: <code>Color</code></p> <p>The border color of the element.</p> <p>Inherited from</p> <p>Box.borderColor</p>"},{"location":"reference/interfaces/vizzu.Styles.Tooltip/#borderradius","title":"borderRadius","text":"<p>\u2022 <code>Optional</code> borderRadius: <code>number</code></p> <p>Corner radius for the info bubble</p>"},{"location":"reference/interfaces/vizzu.Styles.Tooltip/#borderwidth","title":"borderWidth","text":"<p>\u2022 <code>Optional</code> borderWidth: <code>number</code></p> <p>The border width of the element.</p> <p>Inherited from</p> <p>Box.borderWidth</p>"},{"location":"reference/interfaces/vizzu.Styles.Tooltip/#color","title":"color","text":"<p>\u2022 <code>Optional</code> color: <code>Color</code></p> <p>The foreground color of the tooltip text</p>"},{"location":"reference/interfaces/vizzu.Styles.Tooltip/#distance","title":"distance","text":"<p>\u2022 <code>Optional</code> distance: <code>number</code></p> <p>Distance between the data point and the info bubble</p>"},{"location":"reference/interfaces/vizzu.Styles.Tooltip/#dropshadow","title":"dropShadow","text":"<p>\u2022 <code>Optional</code> dropShadow: <code>number</code></p> <p>Drop shadow distance from the info bubble</p>"},{"location":"reference/interfaces/vizzu.Styles.Tooltip/#fontfamily","title":"fontFamily","text":"<p>\u2022 <code>Optional</code> fontFamily: <code>string</code></p> <p>The family of the font. If not set, it inherits the root style font family.</p> <p>Inherited from</p> <p>Font.fontFamily</p>"},{"location":"reference/interfaces/vizzu.Styles.Tooltip/#fontsize","title":"fontSize","text":"<p>\u2022 <code>Optional</code> fontSize: <code>Length</code></p> <p>The size of the font. Percentage values are relative to the root style font size</p> <p>Inherited from</p> <p>Font.fontSize</p>"},{"location":"reference/interfaces/vizzu.Styles.Tooltip/#fontstyle","title":"fontStyle","text":"<p>\u2022 <code>Optional</code> fontStyle: <code>\"normal\"</code> | <code>\"italic\"</code> | <code>\"oblique\"</code></p> <p>The style of the font.</p> <p>Inherited from</p> <p>Font.fontStyle</p>"},{"location":"reference/interfaces/vizzu.Styles.Tooltip/#fontweight","title":"fontWeight","text":"<p>\u2022 <code>Optional</code> fontWeight: <code>number</code> | <code>\"bold\"</code> | <code>\"normal\"</code></p> <p>The weight of the font, numbers use the same scale as CSS.</p> <p>Inherited from</p> <p>Font.fontWeight</p>"},{"location":"reference/interfaces/vizzu.Styles.Tooltip/#layout","title":"layout","text":"<p>\u2022 <code>Optional</code> layout: <code>\"singleLine\"</code> | <code>\"multiLine\"</code></p> <p>The layout of the tooltip text</p>"},{"location":"reference/interfaces/vizzu.Styles.Tooltip/#radius","title":"radius","text":"<p>\u2022 <code>Optional</code> radius: <code>number</code></p> <p>Data point marker radius</p>"},{"location":"reference/interfaces/vizzu.Styles.Tooltip/#seriesname","title":"seriesName","text":"<p>\u2022 <code>Optional</code> seriesName: <code>string</code></p> <p>Specifies the name of the data series dispalyed at the first position on the tooltip</p>"},{"location":"reference/interfaces/vizzu.Styles.Tooltip/#shadowcolor","title":"shadowColor","text":"<p>\u2022 <code>Optional</code> shadowColor: <code>Color</code></p> <p>Color of the drop shadow</p>"},{"location":"reference/modules/presets/","title":"Presets","text":"<p>Vizzu / Modules / presets</p>"},{"location":"reference/modules/presets/#module-presets","title":"Module: presets","text":""},{"location":"reference/modules/presets/#classes","title":"Classes","text":"<ul> <li>Presets</li> </ul>"},{"location":"reference/modules/presets/#interfaces","title":"Interfaces","text":"<ul> <li>Area</li> <li>Bar</li> <li>Bubble</li> <li>Bubbleplot</li> <li>Column</li> <li>Donut</li> <li>GroupedBar</li> <li>GroupedColumn</li> <li>Heatmap</li> <li>Line</li> <li>Lollipop</li> <li>Marimekko</li> <li>Mekko</li> <li>NestedDonut</li> <li>PercentageArea</li> <li>PercentageBar</li> <li>PercentageColumn</li> <li>Pie</li> <li>PolarColumn</li> <li>PolarLine</li> <li>PolarScatter</li> <li>PolarStackedColumn</li> <li>Preset</li> <li>RadialBar</li> <li>RadialStackedBar</li> <li>Scatter</li> <li>SplittedArea</li> <li>SplittedBar</li> <li>SplittedColumn</li> <li>StackedArea</li> <li>StackedBar</li> <li>StackedBubble</li> <li>StackedColumn</li> <li>StackedTreemap</li> <li>Stream</li> <li>Treemap</li> <li>VariableRadiusPie</li> <li>VerticalLine</li> <li>VerticalStream</li> <li>VerticalViolin</li> <li>Violin</li> <li>Waterfall</li> </ul>"},{"location":"reference/modules/vizzu.Anim/","title":"vizzu.Anim","text":"<p>Vizzu / Modules / vizzu / Anim</p>"},{"location":"reference/modules/vizzu.Anim/#namespace-anim","title":"Namespace: Anim","text":"<p>vizzu.Anim</p>"},{"location":"reference/modules/vizzu.Anim/#interfaces","title":"Interfaces","text":"<ul> <li>Animation</li> <li>Completing</li> <li>Control</li> <li>ControlOptions</li> <li>GroupOptions</li> <li>Keyframe</li> <li>Options</li> <li>Target</li> </ul>"},{"location":"reference/modules/vizzu.Anim/#type-aliases","title":"Type Aliases","text":""},{"location":"reference/modules/vizzu.Anim/#duration","title":"Duration","text":"<p>\u01ac Duration: `${number}s` | `${number}ms` | <code>number</code></p> <p>Duration can be set in seconds or milliseconds. In case no unit is set, it defaults to seconds.</p>"},{"location":"reference/modules/vizzu.Anim/#easing","title":"Easing","text":"<p>\u01ac Easing: <code>\"none\"</code> | <code>\"linear\"</code> | <code>\"step-start\"</code> | <code>\"step-end\"</code> | <code>\"ease\"</code> | <code>\"ease-in\"</code> | <code>\"ease-out\"</code> | <code>\"ease-in-out\"</code> | `cubic-bezier(${number},${number},${number},${number})`</p>"},{"location":"reference/modules/vizzu.Anim/#keyframes","title":"Keyframes","text":"<p>\u01ac Keyframes: <code>LazyKeyframe</code>[]</p> <p>Sequence of keyframe descriptors</p>"},{"location":"reference/modules/vizzu.Anim/#lazykeyframe","title":"LazyKeyframe","text":"<p>\u01ac LazyKeyframe: <code>Keyframe</code> | <code>LazyTarget</code></p> <p>Types, that can represent a Keyframe.</p>"},{"location":"reference/modules/vizzu.Anim/#lazyoptions","title":"LazyOptions","text":"<p>\u01ac LazyOptions: <code>Options</code> | <code>Duration</code> | <code>null</code></p> <p>All types, which can represent an animation option.</p>"},{"location":"reference/modules/vizzu.Anim/#lazytarget","title":"LazyTarget","text":"<p>\u01ac LazyTarget: <code>Target</code> | <code>Chart</code> | <code>Snapshot</code></p> <p>All types, which can represent a single animation target chart state.</p>"},{"location":"reference/modules/vizzu.Anim/#regroupstrategy","title":"RegroupStrategy","text":"<p>\u01ac RegroupStrategy: <code>\"fade\"</code> | <code>\"drilldown\"</code> | <code>\"aggregate\"</code></p> <p>Type of transition when the categorical series differ on the source and the target chart.</p> <ul> <li>fade: the source chart fades out while the target chart fades in;</li> <li>drilldown: markers are splitted to be able to represent the target chart;</li> <li>aggregate: markers are aggregated then splitted differently to be able to   represent the target chart.</li> </ul>"},{"location":"reference/modules/vizzu.Config/","title":"vizzu.Config","text":"<p>Vizzu / Modules / vizzu / Config</p>"},{"location":"reference/modules/vizzu.Config/#namespace-config","title":"Namespace: Config","text":"<p>vizzu.Config</p>"},{"location":"reference/modules/vizzu.Config/#interfaces","title":"Interfaces","text":"<ul> <li>Channel</li> <li>ChannelRange</li> <li>Channels</li> <li>Chart</li> </ul>"},{"location":"reference/modules/vizzu.Config/#type-aliases","title":"Type Aliases","text":""},{"location":"reference/modules/vizzu.Config/#channelextrema","title":"ChannelExtrema","text":"<p>\u01ac ChannelExtrema: <code>number</code> | `${number}%` | `${number}min` | `${number}max` | <code>\"auto\"</code></p>"},{"location":"reference/modules/vizzu.Data/","title":"vizzu.Data","text":"<p>Vizzu / Modules / vizzu / Data</p>"},{"location":"reference/modules/vizzu.Data/#namespace-data","title":"Namespace: Data","text":"<p>vizzu.Data</p>"},{"location":"reference/modules/vizzu.Data/#interfaces","title":"Interfaces","text":"<ul> <li>AbstractSeriesInfo</li> <li>Cube</li> <li>CubeData</li> <li>DimensionSeriesInfo</li> <li>Filter</li> <li>MeasureSeriesInfo</li> <li>Metainfo</li> <li>Record</li> <li>Series</li> <li>SeriesMetaInfo</li> <li>TableByRecords</li> <li>TableBySeries</li> </ul>"},{"location":"reference/modules/vizzu.Data/#type-aliases","title":"Type Aliases","text":""},{"location":"reference/modules/vizzu.Data/#cuberow","title":"CubeRow","text":"<p>\u01ac CubeRow: <code>Values</code> | <code>CubeRow</code>[]</p>"},{"location":"reference/modules/vizzu.Data/#filtercallback","title":"FilterCallback","text":"<p>\u01ac FilterCallback: (<code>record</code>: <code>Record</code>) =&gt; <code>boolean</code></p> <p>Type declaration</p> <p>\u25b8 (<code>record</code>): <code>boolean</code></p> <p>Parameters</p> Name Type <code>record</code> <code>Record</code> <p>Returns</p> <p><code>boolean</code></p>"},{"location":"reference/modules/vizzu.Data/#seriesinfo","title":"SeriesInfo","text":"<p>\u01ac SeriesInfo: <code>DimensionSeriesInfo</code> | <code>MeasureSeriesInfo</code></p>"},{"location":"reference/modules/vizzu.Data/#serieslist","title":"SeriesList","text":"<p>\u01ac SeriesList: <code>string</code>[] | <code>string</code></p>"},{"location":"reference/modules/vizzu.Data/#set","title":"Set","text":"<p>\u01ac Set: <code>TableBySeries</code> | <code>TableByRecords</code> | <code>Cube</code></p> <p>Data set is a collection of related data series. Each chart works on a single data set.</p>"},{"location":"reference/modules/vizzu.Data/#value","title":"Value","text":"<p>\u01ac Value: <code>string</code> | <code>number</code></p> <p>Represents a categorical or data value</p>"},{"location":"reference/modules/vizzu.Data/#values","title":"Values","text":"<p>\u01ac Values: <code>string</code>[] | <code>number</code>[]</p> <p>List of data values in a series.</p>"},{"location":"reference/modules/vizzu.Event/","title":"vizzu.Event","text":"<p>Vizzu / Modules / vizzu / Event</p>"},{"location":"reference/modules/vizzu.Event/#namespace-event","title":"Namespace: Event","text":"<p>vizzu.Event</p>"},{"location":"reference/modules/vizzu.Event/#interfaces","title":"Interfaces","text":"<ul> <li>Object</li> </ul>"},{"location":"reference/modules/vizzu.Event/#type-aliases","title":"Type Aliases","text":""},{"location":"reference/modules/vizzu.Event/#type","title":"Type","text":"<p>\u01ac Type: <code>\"click\"</code> | <code>\"mouseon\"</code> | <code>\"mousemove\"</code> | <code>\"wheel\"</code> | <code>\"update\"</code> | <code>\"background-draw\"</code> | <code>\"title-draw\"</code> | <code>\"logo-draw\"</code> | <code>\"legend-background-draw\"</code> | <code>\"legend-title-draw\"</code> | <code>\"legend-label-draw\"</code> | <code>\"legend-marker-draw\"</code> | <code>\"legend-bar-draw\"</code> | <code>\"plot-background-draw\"</code> | <code>\"plot-marker-draw\"</code> | <code>\"plot-marker-label-draw\"</code> | <code>\"plot-marker-guide-draw\"</code> | <code>\"plot-axis-draw\"</code> | <code>\"plot-axis-title-draw\"</code> | <code>\"plot-axis-label-draw\"</code> | <code>\"plot-axis-tick-draw\"</code> | <code>\"plot-axis-guide-draw\"</code> | <code>\"plot-axis-interlacing-draw\"</code> | <code>\"animation-begin\"</code> | <code>\"animation-complete\"</code></p>"},{"location":"reference/modules/vizzu.Lib/","title":"vizzu.Lib","text":"<p>Vizzu / Modules / vizzu / Lib</p>"},{"location":"reference/modules/vizzu.Lib/#namespace-lib","title":"Namespace: Lib","text":"<p>vizzu.Lib</p>"},{"location":"reference/modules/vizzu.Lib/#interfaces","title":"Interfaces","text":"<ul> <li>Options</li> </ul>"},{"location":"reference/modules/vizzu.Styles/","title":"vizzu.Styles","text":"<p>Vizzu / Modules / vizzu / Styles</p>"},{"location":"reference/modules/vizzu.Styles/#namespace-styles","title":"Namespace: Styles","text":"<p>vizzu.Styles</p>"},{"location":"reference/modules/vizzu.Styles/#interfaces","title":"Interfaces","text":"<ul> <li>Axis</li> <li>AxisLabel</li> <li>AxisTitle</li> <li>Box</li> <li>Chart</li> <li>DataPoint</li> <li>Font</li> <li>Guides</li> <li>Interlacing</li> <li>Legend</li> <li>LegendMarker</li> <li>Logo</li> <li>Marker</li> <li>MarkerLabel</li> <li>OrientedLabel</li> <li>Padding</li> <li>Plot</li> <li>Text</li> <li>Ticks</li> <li>Tooltip</li> </ul>"},{"location":"reference/modules/vizzu.Styles/#type-aliases","title":"Type Aliases","text":""},{"location":"reference/modules/vizzu.Styles/#angle","title":"Angle","text":"<p>\u01ac Angle: `${number}rad` | `${number}grad` | `${number}deg` | `${number}turn` | <code>number</code></p> <p>Angle can be set in radians, degrees, gradians and turns. Radians is the default unit.</p>"},{"location":"reference/modules/vizzu.Styles/#color","title":"Color","text":"<p>\u01ac Color: `#${string}` | `rgb(${number},${number},${number})` | `rgba(${number},${number},${number},${number})`</p> <p>The following CSS color formats are available: rgb(), rgba(), #RRGGBB,</p>"},{"location":"reference/modules/vizzu.Styles/#rrggbbaa-rgb","title":"RRGGBBAA, #RGB.","text":""},{"location":"reference/modules/vizzu.Styles/#colorgradient","title":"ColorGradient","text":"<p>\u01ac ColorGradient: <code>ColorStop</code> | `${ColorStop},${ColorStop}` | `${ColorStop},${ColorStop},${ColorStop}` | `${ColorStop},${ColorStop},${ColorStop},${ColorStop}` | `${ColorStop},${ColorStop},${ColorStop},${ColorStop},${ColorStop}` | <code>string</code></p> <p>Color gradient is specified by a comma separated list of ColorStops. This is used when a measure is on the color channel.</p>"},{"location":"reference/modules/vizzu.Styles/#colorpalette","title":"ColorPalette","text":"<p>\u01ac ColorPalette: <code>Color</code> | `${Color} ${Color}` | `${Color} ${Color} ${Color}` | `${Color} ${Color} ${Color} ${Color}` | `${Color} ${Color} ${Color} ${Color} ${Color}` | <code>string</code></p> <p>Color palette is a list of colors separated by spaces. This is used when only dimensions are on the color channel</p>"},{"location":"reference/modules/vizzu.Styles/#colorstop","title":"ColorStop","text":"<p>\u01ac ColorStop: `${Color} ${number}`</p> <p>Color and position pairs separated by spaces, where position is a number between 0 and 1.</p>"},{"location":"reference/modules/vizzu.Styles/#colortransform","title":"ColorTransform","text":"<p>\u01ac ColorTransform: `color(${Color})` | `lightness(${number})` | `grayscale(${number})` | `opacity(${number})` | <code>\"none\"</code></p> <p>The following CSS like filters can be used to alter the color:</p> <ul> <li>color: overrides the color.</li> <li>lightness: lightens or darkens the color; 0 means the original color, -1 means   black, 1 means white.</li> <li>grayscale: desaturates the color. 0 means the original color, 1 means fully   desaturated.</li> </ul> <p>none: no change.</p>"},{"location":"reference/modules/vizzu.Styles/#label","title":"Label","text":"<p>\u01ac Label: <code>Padding</code> &amp; <code>Font</code> &amp; <code>Text</code></p>"},{"location":"reference/modules/vizzu.Styles/#length","title":"Length","text":"<p>\u01ac Length: `${number}px` | `${number}%` | `${number}em` | <code>number</code></p> <p>Length can be set in pixels or in percentage of the element or the element's font size. Pixel is the default unit.</p>"},{"location":"reference/modules/vizzu.Styles/#numberscale","title":"NumberScale","text":"<p>\u01ac NumberScale: <code>\"SISymbol\"</code> | <code>\"shortScaleSymbolUS\"</code> | <code>\"shortScaleSymbolUK\"</code> | `${string},${string}` | `${string},${string},${string}` | `${string},${string},${string},${string}` | `${string},${string},${string},${string},${string}` | <code>string</code></p> <p>Number scale for human readable big number formats. There are built in formats:</p> <ul> <li>SI Symbols: k, M, G, ...</li> <li>Short scale with US abbreviations: K, M, B, T</li> <li>Short scale with UK abbreviations: k, m, bn, tn Can be set to custom format   with a comma separated list of strings e.g:   'thousand,million,billion,trillion'</li> </ul>"},{"location":"reference/modules/vizzu/","title":"Vizzu","text":"<p>Vizzu / Modules / vizzu</p>"},{"location":"reference/modules/vizzu/#module-vizzu","title":"Module: vizzu","text":""},{"location":"reference/modules/vizzu/#namespaces","title":"Namespaces","text":"<ul> <li>Anim</li> <li>Config</li> <li>Data</li> <li>Event</li> <li>Lib</li> <li>Styles</li> </ul>"},{"location":"reference/modules/vizzu/#classes","title":"Classes","text":"<ul> <li>Vizzu</li> </ul>"},{"location":"reference/modules/vizzu/#interfaces","title":"Interfaces","text":"<ul> <li>Snapshot</li> </ul>"},{"location":"reference/modules/vizzu/#type-aliases","title":"Type Aliases","text":""},{"location":"reference/modules/vizzu/#feature","title":"Feature","text":"<p>\u01ac Feature: <code>\"tooltip\"</code> | <code>\"logging\"</code> | <code>\"rendering\"</code></p> <p>List of base and additional features:</p> <ul> <li>logging: enables logging of the library to the console (switched off by   default).</li> <li>rendering: enables rendering of the library to the canvas (enabled by   default).</li> <li>tooltip: tooltips on the chart appearing on markers on mouse over. Since the   tooltip uses the animation interface, calling animate() while the tooltip is   enabled can cause unwanted behaviour.</li> </ul>"},{"location":"showcases/","title":"Showcases","text":"<p> src='./bitcoin.mp4' type='video/mp4'&gt;  src='./chernobyl.mp4' type='video/mp4'&gt;  src='./cocoa.mp4' type='video/mp4'&gt;  src='./friends.mp4' type='video/mp4'&gt;  src='./music.mp4' type='video/mp4'&gt;  src='./musicformats.mp4' type='video/mp4'&gt;  src='./nadal.mp4' type='video/mp4'&gt;  src='./sales.mp4' type='video/mp4'&gt;  src='./titanic.mp4' type='video/mp4'&gt;</p>"},{"location":"showcases/bitcoin/","title":"Bitcoin Code Stats Explorer","text":""},{"location":"showcases/chernobyl/","title":"Chernobyl","text":""},{"location":"showcases/cocoa/","title":"Cocoa farmers","text":""},{"location":"showcases/friends/","title":"Friends","text":""},{"location":"showcases/music/","title":"Music formats","text":""},{"location":"showcases/musicformats/","title":"Music formats (Year by Year)","text":""},{"location":"showcases/nadal/","title":"Rafael Nadal's matches","text":""},{"location":"showcases/sales/","title":"Sales","text":""},{"location":"showcases/titanic/","title":"Passengers of the Titanic","text":""},{"location":"tutorial/","title":"Tutorial","text":"<p>This is the tutorial of <code>Vizzu</code> - a free, open-source <code>JavaScript</code> library for building animated charts, data stories, and interactive explorers. It is an excellent place to start using <code>Vizzu</code>, as it walks you through the installation and initialization of the library, introduces the logic it employs and the different settings to control how your charts look and behave.</p>"},{"location":"tutorial/#basic-logic-of-vizzu","title":"Basic logic of Vizzu","text":"<p>The foundation of a <code>Vizzu</code> chart is the animation. The animation contains states describing the chart's configuration, such as the data series, coordinate system, labels, titles, etc. A static chart is the result of a single animation state. When there are more states, <code>Vizzu</code> automatically transitions between these. The animate method initiates the animation into a new state by describing the new chart and how <code>Vizzu</code> should transition to it. The return value of the animate method is a promise that will be resolved after the animation is completed. Using this logic you can create a promise chain of animation from state to state.</p> <p></p> <p>The animate method has two parameters in total. The first parameter sets the chart, and the (optional) second determines how <code>Vizzu</code> should animate to that state.</p> <p>The first parameter has the following three properties:</p> <ul> <li><code>data</code>: this is where you add the data that you want to put on the charts</li> <li><code>config</code>: this is where you can add or remove series on the channels and set   the general settings of the chart like the chart title, the geometry, the   alignment etc.</li> <li><code>style</code>: this is where you can set how your chart looks</li> </ul> <p>The parameters of multiple animate methods can be bundled together and can be passed to the animate method at once, resulting in these animations running one after the other. See <code>Keyframe</code> objects in Animation control &amp; keyframes.</p>"},{"location":"tutorial/#installation","title":"Installation","text":"<p>Install via npm:</p> <pre><code>npm install vizzu</code></pre> <p>Or use it from CDN:</p> <pre><code>&lt;html&gt;\n &lt;head&gt;\n  &lt;script type=\"module\"&gt;\n   import Vizzu from \n  'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js';\n  &lt;/script&gt;\n &lt;/head&gt;\n&lt;/html&gt;\n</code></pre>"},{"location":"tutorial/#usage","title":"Usage","text":"<ul> <li>Initialization</li> <li>Data</li> <li>Axes, title, tooltip</li> <li>Geometry</li> <li>Channels &amp; legend</li> <li>Group/stack</li> <li>Sorting</li> <li>Align &amp; range</li> <li>Changing dimensions</li> <li>Orientation, split &amp; polar</li> <li>Filtering &amp; adding new records</li> <li>Without coordinates &amp; noop channel</li> <li>Color palette &amp; fonts</li> <li>Chart layout</li> <li>Animation options</li> <li>Animation control &amp; keyframes</li> <li>Events</li> <li>Shorthands &amp; Store</li> <li>Chart presets</li> <li>Style</li> </ul>"},{"location":"tutorial/align_range/","title":"Align &amp; range","text":"<p><code>Vizzu</code> offers different options to align your chart elements and to set the range of values shown on the axes. Alignment can be used to create charts like a stream chart where the elements are vertically centered. A good example for using range is when you fix the y-axis so that it would not adapt to the data being shown.</p> <p>Centered alignment. The effect of this parameter depends on the orientation of the chart. For example, on a column chart, elements will be vertically centered, whereas on a bar chart, horizontally.</p> <p>Info</p> <p>In the first example, the y-axis labels are hidden because they don't properly represent the values shown on the column chart anymore, as the chart elements float off the x-axis.</p> Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport data from 'https://lib.vizzuhq.com/0.7/assets/data/music_data.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data: data,\n    config: {\n        channels: {\n            y: {\n                set: ['Popularity', 'Kinds']\n            },\n            x: {\n                set: ['Genres']\n            },\n            label: {\n                attach: ['Popularity']\n            },\n        },\n        color: {\n            attach: ['Kinds']\n        },\n    }\n})</code></pre> <p>Change align and configures the y axis labels to disappear during the animation.</p> <pre><code>chart.animate({\n    config: {\n        align: 'center',\n        channels: {\n            y: {\n                labels: false\n            }\n        }\n    }\n})</code></pre> <p>Stretched alignment. This way the elements will proportionally fill the entire plot area, effectively showing proportions in stacked charts. This is why the scale will also switch from values to percentages when used.</p> <pre><code>chart.animate({\n    config: {\n        align: 'stretch'\n    }\n})</code></pre> <p>Getting back to the default alignment.</p> <pre><code>chart.animate({\n    config: {\n        align: 'none',\n        channels: {\n            y: {\n                labels: true\n            }\n        }\n    }\n})</code></pre> <p>You can set the range of an axis by setting the minimum and maximum values of it. Both parameters are optional so that you can set only one of those, and you either set specific values or a relative value by adding the <code>%</code> sign. In this example, we set the range of the y-axis in a way that the max value is <code>150%</code> of the biggest element\u2019s value.</p> <pre><code>chart.animate({\n    config: {\n        channels: {\n            y: {\n                range: {\n                    max: '150%'\n                }\n            }\n        }\n    }\n})</code></pre> <p>You can also set the range for an axis with a dimension on it. You can even use this feature to filter certain elements, just like in the following example.</p> <pre><code>chart.animate({\n    config: {\n        channels: {\n            x: {\n                range: {\n                    min: -2,\n                    max: 3\n                }\n            }\n        }\n    }\n})</code></pre> <p>Ranges have certain defaults depending on the chart's configuration, based on common data viz guidelines because we wanted to make it easy for you to create sleek charts. For example, in the cartesian coordinate system, the range will be automatically set to the <code>max:110%</code> for an axis with a measure on it. Polar coordinates work differently, as you can see for yourself in the Orientation, split &amp; polar chapter.</p> <p>Whenever you want to set your ranges back to the default value, just set them to <code>'auto'</code>.</p> <pre><code>chart.animate({\n    config: {\n        channels: {\n            x: {\n                range: {\n                    min: 'auto',\n                    max: 'auto'\n                }\n            },\n            y: {\n                range: {\n                    max: 'auto'\n                }\n            }\n        }\n    }\n})</code></pre>"},{"location":"tutorial/animation_control_keyframes/","title":"Animation control &amp; keyframes","text":"<p>Using the result object provided by the chart's animate method you can play, pause, stop, seek or reverse the animations.</p> <p>In this step, we seek forward to <code>50%</code> of progress after the animation starts.</p> Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport data from 'https://lib.vizzuhq.com/0.7/assets/data/music_data.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data: data,\n    config: {\n        channels: {\n            y: {\n                set: ['Popularity', 'Kinds']\n            },\n            x: {\n                set: ['Genres']\n            },\n            label: {\n                attach: ['Popularity']\n            },\n        },\n        color: {\n            attach: ['Kinds']\n        },\n    }\n})</code></pre> <pre><code>chart.animate({\n    config: {\n        channels: {\n            x: {\n                attach: ['Kinds']\n            },\n            y: {\n                detach: ['Kinds']\n            }\n        },\n    }\n}).activated.then(control =&gt; control.seek('50%'));</code></pre> <p>You can also control the initial position and play state of the animation through the animation options argument of the animate method.</p> <pre><code>chart.animate({\n    config: {\n        channels: {\n            x: {\n                detach: ['Kinds']\n            },\n            y: {\n                attach: ['Kinds']\n            }\n        },\n    }\n}, {\n    playState: 'paused',\n    position: 0.5\n}).activated.then(control =&gt; control.play());</code></pre> <p>You may want to control multiple animations as a single one. For example you might want to go back to the original state if any of the animations get canceled, or want to seamlessly seek through all of them.</p> <p>You can do this by boundling them together and passing them to a single <code>animate</code> call. To do this, you need to create a <code>Keyframe</code> object from the arguments of every single <code>animate</code> call and then puting them into an array of keyframes.</p> <pre><code>chart.animate([{\n    target: {\n        config: {\n            channels: {\n                x: {\n                    attach: ['Kinds']\n                },\n                y: {\n                    detach: ['Kinds']\n                }\n            },\n        }\n    },\n    options: {\n        duration: 0.5\n    }\n}, {\n    target: {\n        config: {\n            channels: {\n                x: {\n                    detach: ['Kinds']\n                },\n                y: {\n                    attach: ['Kinds']\n                }\n            }\n        }\n    },\n    options: {\n        duration: 1\n    }\n}]);</code></pre> <p>The initial state of the animation can be set, too, by using the second argument of the <code>animate</code> method.</p>"},{"location":"tutorial/animation_options/","title":"Animation options","text":"<p>In <code>Vizzu</code> you can set the timing and duration of the animation. You can do this either for the whole animation, or for animation groups such as the elements moving along the x-axis or the y-axis, appearing or disappearing or when the coordinate system is changed.</p> <p>Let\u2019s see first a simple example when a stacked column chart is grouped using the default animation options.</p> Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport data from 'https://lib.vizzuhq.com/0.7/assets/data/music_data.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data: data,\n    config: {\n        channels: {\n            y: {\n                set: ['Popularity', 'Kinds']\n            },\n            x: {\n                set: ['Genres']\n            },\n            label: {\n                attach: ['Popularity']\n            },\n        },\n        color: {\n            attach: ['Kinds']\n        },\n    }\n})</code></pre> <pre><code>chart.animate({\n    config: {\n        channels: {\n            y: {\n                detach: ['Kinds']\n            },\n            x: {\n                attach: ['Kinds']\n            }\n        }\n    }\n})</code></pre> <p>We stack the columns, still with the default options.</p> <pre><code>chart.animate({\n    config: {\n        channels: {\n            x: {\n                detach: ['Kinds']\n            },\n            y: {\n                attach: ['Kinds']\n            }\n        }\n    }\n})</code></pre> <p>Now we change the animation settings for the elements moving along the y-axis and also the change in styles, more specifically when the labels on the markers move from the center of the chart elements to the top of them.</p> <pre><code>chart.animate({\n    config: {\n        channels: {\n            y: {\n                detach: ['Kinds']\n            },\n            x: {\n                attach: ['Kinds']\n            }\n        }\n    }\n}, {\n    y: {\n        duration: 2,\n        delay: 2\n    },\n    style: {\n        duration: 2,\n        delay: 4\n    }\n})</code></pre> <p>This is an example of changing the settings for the whole animation at once.</p> <pre><code>chart.animate({\n    config: {\n        channels: {\n            x: {\n                detach: ['Kinds']\n            },\n            y: {\n                attach: ['Kinds']\n            }\n        }\n    }\n}, {\n    duration: 1,\n    easing: 'linear'\n})</code></pre> <p>When the two settings are combined, <code>Vizzu</code> will use the general animation options and spread the unique settings for specific groups proportionally. This is why you can see the same animation as two steps before but happening much quicker since the duration of the whole animation is set to 1 second.</p> <pre><code>chart.animate({\n    config: {\n        channels: {\n            x: {\n                attach: ['Kinds']\n            },\n            y: {\n                detach: ['Kinds']\n            }\n        }\n    }\n}, {\n    duration: 1,\n    easing: 'linear',\n    y: {\n        duration: 2,\n        delay: 2\n    },\n    style: {\n        duration: 2,\n        delay: 4\n    }\n})</code></pre> <p>The default unit for animation is seconds, but you can set other units. Besides if you only want to change the duration of the animation, you can use the following, simplified format to do that.</p> <pre><code>chart.animate({\n    config: {\n        channels: {\n            x: {\n                detach: ['Kinds']\n            },\n            y: {\n                attach: ['Kinds']\n            }\n        }\n    }\n}, '500ms')</code></pre>"},{"location":"tutorial/axes_title_tooltip/","title":"Axes, title, tooltip","text":"<p>To build a chart with <code>Vizzu</code>, you have to add data series to the channels. Channels will be explained more in-depth later, but for now, think of channels as different elements of the chart we can bind data to. The simplest and most often used channels are the x and y-axes.</p> <p>The first step is to create a simple column chart, adding one of the dimensions from the data set we added in the previous chapter (<code>Genres</code>) to the x-axis and the measure (<code>Popularity</code>) to the y-axis using the set property.</p> Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport data from 'https://lib.vizzuhq.com/0.7/assets/data/music_data.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data\n})</code></pre> <pre><code>chart.animate({\n    config: {\n        channels: {\n            y: {\n                set: ['Popularity']\n            },\n            x: {\n                set: ['Genres']\n            }\n        }\n    }\n})</code></pre> <p>In the next step, the chart is rearranged by putting both series on the y-axis using once again the set property, resulting in a single column chart. <code>Vizzu</code> automatically animates between the initial state and this one.</p> <pre><code>chart.animate({\n    config: {\n        channels: {\n            x: {\n                set: null\n            },\n            y: {\n                set: ['Genres', 'Popularity']\n            }\n        }\n    }\n})</code></pre> <p>Instead of set, you can use attach and detach to add or remove series to/from the channels.</p> <pre><code>chart.animate({\n    config: {\n        channels: {\n            y: {\n                detach: ['Popularity']\n            },\n            x: {\n                attach: ['Popularity']\n            }\n        }\n    }\n})</code></pre> <p>Using attach &amp; detach makes it easier to build your animated charts step-by-step, however you either have to keep in mind what you had on which channel in the previous step or add the following code to access the actual configuration of the chart.</p> <pre><code>console.log(chart.config);</code></pre> <p>Setting the chart title with the title command.</p> <pre><code>chart.animate({\n    title: 'My first chart'\n})</code></pre> <p>Switching on the tooltips that appear on the chart elements when the user hovers over them with their mouse by adding the (<code>'tooltip'</code>, <code>true</code>) parameters to the <code>chart.feature</code> method.</p> <pre><code>chart.feature('tooltip', true)</code></pre> <p>Note</p> <p>Calls to this method before the library initialization completed will fail.</p>"},{"location":"tutorial/changing_dimensions/","title":"Changing dimensions","text":"<p>The simplest of dimension-changing operations are aggregate and drill-down. These features basically mean that you either add or remove an additional dimension to/from an axis or another channel.</p> <p>Let\u2019s aggregate together the elements by getting the <code>Genres</code> dimension off the x-axis. By taking it off the chart, only one chart element remains for every color, and <code>Vizzu</code> automatically calculates and shows the aggregate value of the elements.</p> Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport data from 'https://lib.vizzuhq.com/0.7/assets/data/music_data.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data: data,\n    config: {\n        channels: {\n            y: {\n                set: ['Popularity', 'Kinds']\n            },\n            x: {\n                set: ['Genres']\n            },\n            label: {\n                attach: ['Popularity']\n            },\n        },\n        color: {\n            attach: ['Kinds']\n        },\n    }\n})</code></pre> <pre><code>chart.animate({\n    config: {\n        channels: {\n            x: {\n                set: null\n            }\n        }\n    }\n})</code></pre> <p>When you simultaneously add and remove dimensions, the partitioning of the underlying data to markers on the chart changes. There are multiple ways to transition through these kinds of operations using.</p> <p>By default, the markers are aggregated to the common base of the two states, then drilled down to the target state, as shown below.</p> <pre><code>chart.animate({\n    config: {\n        channels: {\n            y: {\n                detach: ['Kinds']\n            },\n            x: {\n                set: ['Genres']\n            },\n            color: {\n                set: null\n            },\n        }\n    }\n})</code></pre> <p>You can change this setting and drill down to the union of the two states instead, and then aggregate to the target state:</p> <pre><code>chart.animate({\n    config: {\n        channels: {\n            x: {\n                detach: ['Genres'],\n                attach: ['Kinds']\n            }\n        }\n    }\n}, {\n    regroupStrategy: 'drilldown'\n})</code></pre> <p>There is also the option to fade the chart between the states:</p> <pre><code>chart.animate({\n    config: {\n        channels: {\n            x: {\n                detach: ['Kinds'],\n                attach: ['Genres']\n            }\n        }\n    }\n}, {\n    regroupStrategy: 'fade'\n})</code></pre> <p>To simply drill down, the same dimension is put back on the y-axis.</p> <pre><code>chart.animate({\n    config: {\n        channels: {\n            y: {\n                attach: ['Kinds']\n            },\n            color: {\n                set: ['Kinds']\n            }\n        }\n    }\n})</code></pre>"},{"location":"tutorial/channels_legend/","title":"Channels &amp; legend","text":"<p>Besides the x-axis and the y-axis, there are five more channels in <code>Vizzu</code> you can use to visualize your data. Similarly to the axes you can put any number of dimensions and/or one measure to a channel. In the following example the four most commonly used channels are shown. The fifth, <code>noop</code> channel is introduced later in the Without coordinates &amp; noop channel chapter.</p> <p>Data on the label channel will be written on the markers on the chart. <code>Vizzu</code> automatically determines the best way to position these labels, but you can set them differently with the <code>style</code> object introduced in the Color palette &amp; fonts chapter.</p> Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport data from 'https://lib.vizzuhq.com/0.7/assets/data/music_data.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data: data,\n    config: {\n        channels: {\n            y: {\n                set: ['Popularity']\n            },\n            x: {\n                set: ['Genres']\n            },\n        },\n    }\n})</code></pre> <pre><code>chart.animate({\n    config: {\n        channels: {\n            label: {\n                attach: ['Popularity']\n            }\n        }\n    }\n})</code></pre> <p>The <code>lightness</code> channel sets the lightness of the markers. In this case the same measure (<code>Popularity</code>) is added to it that is on the y-axis, meaning that columns\u2019 height and lightness represent the same values. The legend for the <code>lightness</code> channel is turned on using the <code>legend</code> property.</p> <p>Info</p> <p>This is an example when we explicitly instruct <code>Vizzu</code> to show the legend. By default <code>Vizzu</code> automatically shows/hides the legend when it's necessary. You can also turn it off with the <code>legend</code>: <code>null</code> command or set back to automatic mode with <code>legend</code>: <code>'auto'</code>.</p> <pre><code>chart.animate({\n    config: {\n        channels: {\n            lightness: {\n                attach: ['Popularity']\n            }\n        },\n        legend: 'lightness'\n    }\n})</code></pre> <p>The <code>color</code> channel sets the color of the markers. The same dimension (<code>Genres</code>) is put on it that is on the x-axis resulting in each bar having a different color. If a measure is put on the <code>color</code> channel, a color range will be used.</p> <p>Info</p> <p>The value on the <code>lightness</code> channel is removed in this step as it doesn\u2019t make sense to use it together with the <code>color</code> channel in this case.</p> <pre><code>chart.animate({\n    config: {\n        channels: {\n            lightness: {\n                set: null\n            },\n            color: {\n                attach: ['Genres']\n            }\n        },\n        legend: 'color',\n    }\n})</code></pre> <p>The <code>size</code> channel sets the size of the markers if the geometry is circle - where size sets the radius of the circles - or line - where size determines line width. It is ignored when using rectangle or area geometry. This is why we change the geometry to circle in the example.</p> <pre><code>chart.animate({\n    config: {\n        channels: {\n            size: {\n                set: ['Popularity']\n            }\n        },\n        geometry: 'circle'\n    }\n})</code></pre>"},{"location":"tutorial/chart_layout/","title":"Chart layout","text":"<p><code>Vizzu</code> has three separate parts of the chart layout: the plot area that contains the chart, the title containing the chart title on the top, and the legend on the left. <code>Vizzu</code> automatically hides the legend when it\u2019s unnecessary to show it. When the title is not in use, <code>Vizzu</code> hides that part automatically as well. Each of these parts have their own paddings on all four sides that adjust to the chart size by default, but can also be set with the appropriate settings in the <code>style</code> object. All size parameters can be set in pixel, percentage and em.</p> <p>We add different background colors to the parts of the layout to show how they are aligned.</p> Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport data from 'https://lib.vizzuhq.com/0.7/assets/data/music_data.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data: data,\n    config: {\n        channels: {\n            y: {\n                set: ['Popularity', 'Kinds']\n            },\n            x: {\n                set: ['Genres']\n            },\n            label: {\n                attach: ['Popularity']\n            },\n        },\n        color: {\n            attach: ['Kinds']\n        },\n    }\n})</code></pre> <pre><code>chart.animate({\n    style: {\n        title: {\n            backgroundColor: '#A0A0A0'\n        },\n        plot: {\n            backgroundColor: '#D2D2D2'\n        },\n        legend: {\n            backgroundColor: '#808080'\n        },\n    }\n})</code></pre> <p>Setting the width of the legend.</p> <pre><code>chart.animate({\n    style: {\n        legend: {\n            width: 50\n        }\n    }\n})</code></pre> <p>Setting the legend width back to its default value.</p> <pre><code>chart.animate({\n    style: {\n        legend: {\n            width: null\n        }\n    }\n})</code></pre> <p>Changing the title paddings. By default, the title is horizontally centered above the chart. In this example, we set the title\u2019s left padding, resulting in the text moving to the right.</p> <pre><code>chart.animate({\n    style: {\n        title: {\n            paddingTop: 20,\n            paddingBottom: 20,\n            paddingLeft: 200\n        }\n    }\n})</code></pre> <p>Setting the title paddings back to their default values.</p> <pre><code>chart.animate({\n    style: {\n        title: {\n            paddingTop: null,\n            paddingBottom: null,\n            paddingLeft: null\n        }\n    }\n})</code></pre> <p>Changing the paddings of the plot area to position the plot. The texts on the axes are drawn on the padding of the plot and not the plot itself.</p> <pre><code>chart.animate({\n    style: {\n        plot: {\n            paddingLeft: 100,\n            paddingRight: 100\n        }\n    }\n})</code></pre> <p>Setting the plot paddings back to their default values.</p> <pre><code>chart.animate({\n    style: {\n        plot: {\n            paddingLeft: null,\n            paddingRight: null\n        }\n    }\n})</code></pre>"},{"location":"tutorial/chart_presets/","title":"Chart presets","text":"<p>Throughout this tutorial, we have shown you how to create charts with <code>Vizzu</code> using a chart type-agnostic, uniform way without being limited to a predefined set of available charts. But sometimes, when you know the chart type you want to use, it is easier to start with that and skip configuring it from scratch. For this reason, <code>Vizzu</code> provides preset chart configurations for many known chart types. See the preset gallery for all available presets.</p> <p>Use the methods of the <code>presets</code> static property of the <code>Vizzu</code> class to build a chart based on a preset. These methods return chart configuration objects that can be passed to the <code>animate</code> method. For example, this is how to create a stacked bubble chart using its preset.</p> Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport data from 'https://lib.vizzuhq.com/0.7/assets/data/music_data.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data\n})</code></pre> <pre><code>chart.animate(Vizzu.presets.stackedBubble({\n    size: 'Popularity',\n    color: 'Kinds',\n    stackedBy: 'Genres',\n    title: 'Using a preset',\n}))</code></pre> <p>Presets will override all channels, removing all previously set series from the chart. Using a preset will also explicitly set most chart configuration parameters. Exceptions to this are the <code>legend</code>, <code>title</code>, <code>reverse</code>, and <code>sort</code> properties that can be set while using a preset. Here's an example of a preset where chart elements are sorted by value.</p> <pre><code>chart.animate(Vizzu.presets.radialStackedBar({\n    angle: 'Popularity',\n    radius: 'Genres',\n    stackedBy: 'Kinds',\n    sort: 'byValue',\n    title: 'Set sorting for a chart preset'\n}))</code></pre> <p>As you will see, the preset doesn't override the previously configured sorting and wouldn't affect the rest of the chart config parameters mentioned above either.</p> <p>Presets will affect chart configuration, but you might also want to set the style or the underlying data. In this case, you can use the more verbose syntax below, explicitly passing the preset to the 'config' property of the animate method's parameter.</p> <pre><code>chart.animate({\n    config: Vizzu.presets.radialBar({\n        angle: 'Popularity',\n        radius: 'Genres',\n        title: 'Setting style for a preset'\n    }),\n    style: {\n        'plot.xAxis.interlacing.color': '#ffffff00'\n    }\n})</code></pre> <p>Info</p> <p>You can also access presets via a <code>chart</code> promise, for example <code>Vizzu.presets.radialBar</code> is equivalent to <code>chart.constructor.presets.radialBar</code>.</p>"},{"location":"tutorial/color_palette_fonts/","title":"Color palette &amp; fonts","text":"<p>This and the next chapter provide a quick intro to the styling of the charts. You can either use the <code>style</code> property like in the following examples or use <code>CSS</code>. By using <code>CSS</code>, it's easier to set the same style for multiple charts on one page or re-use style settings.</p> <p>If you use <code>CSS</code>, don't change the set parameters later on via the <code>style</code> property.</p> <p>The font sizes automatically adjust to the chart size to help readability, and can also be set separately or for specific groups.</p> <p>The color palette is changed to the colors we add here. The order of the dimension\u2019s items in the data set determine which color belongs to which item as the colors are added one-by-one. If you want to use the same setting via <code>CSS</code>, you should add <code>--vizzu-plot-marker-colorPalette: #9355e8FF #123456FF #BDAF10FF;</code>.</p> Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport data from 'https://lib.vizzuhq.com/0.7/assets/data/music_data.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data: data,\n    config: {\n        channels: {\n            y: {\n                set: ['Popularity', 'Kinds']\n            },\n            x: {\n                set: ['Genres']\n            },\n            label: {\n                attach: ['Popularity']\n            },\n        },\n        color: {\n            attach: ['Kinds']\n        },\n    }\n})</code></pre> <pre><code>chart.animate({\n    style: {\n        plot: {\n            marker: {\n                colorPalette: '#9355e8FF #123456FF #BDAF10FF'\n            }\n        }\n    }\n})</code></pre> <p>The actual style settings of the chart can be accessed via the <code>style</code> property.</p> <pre><code>console.log(chart.style);</code></pre> <p>Changing the title font size will only affect the title; all other font sizes remain the same. <code>CSS</code> version: <code>--vizzu-title-fontSize: 50;</code>.</p> <pre><code>chart.animate({\n    style: {\n        title: {\n            fontSize: 50\n        }\n    }\n})</code></pre> <p>This is how to set the font size back to its default value.</p> <pre><code>chart.animate({\n    style: {\n        title: {\n            fontSize: null\n        }\n    }\n})</code></pre> <p>In case you change the font size of the whole chart with the top-level <code>fontSize</code> parameter then every font on the chart will grow/shrink proportionally. The size refers to the font size of the axis labels by default.</p> <pre><code>chart.animate({\n    style: {\n        fontSize: 20\n    }\n})</code></pre> <p>You can reset styles to default on any levels by setting them to <code>null</code>.</p> <pre><code>chart.animate({\n    style: null\n})</code></pre> <p>For information on all available style parameters see the Style chapter or the Code reference.</p>"},{"location":"tutorial/data/","title":"Data","text":""},{"location":"tutorial/data/#data-types","title":"Data types","text":"<p><code>Vizzu</code> currently supports two types of data series: dimensions and measures. Dimensions slice the data cube <code>Vizzu</code> uses, whereas measures are values within the cube.</p> <p>Dimensions are categorical series that can contain strings and numbers, but both will be treated as strings. Temporal data such as dates or timestamps should also be added as dimensions. By default, <code>Vizzu</code> will draw the elements on the chart in the order they are provided in the data set. Thus we suggest adding temporal data in a sorted format from oldest to newest.</p> <p>Measures at the moment can only be numerical.</p>"},{"location":"tutorial/data/#adding-data","title":"Adding data","text":"<p>There are multiple ways you can add data to <code>Vizzu</code>:</p> <ul> <li>Specify data by series - column after column if you think of a spreadsheet</li> <li>Specify data by records - row after row</li> <li>Using data cube form</li> </ul> <p>Elements with a missing value should contain the number zero. <code>null</code>, <code>undefined</code> and empty cells will result in an error. In case of dimensions, add <code>''</code> as a value to have a category without a name.</p> <p>In the first two cases, data has to be in first normal form. Here is an example of that:</p> Genres Kinds Popularity Pop Hard 114 Rock Hard 96 Jazz Hard 78 Metal Hard 52 Pop Smooth 56 Rock Smooth 36 Jazz Smooth 174 Metal Smooth 121 Pop Experimental 127 Rock Experimental 83 Jazz Experimental 94 Metal Experimental 58 <p>In the <code>type</code> parameter, you can set if a series is a dimension or a measure. Adding the <code>type</code> parameter is optional. If omitted, <code>Vizzu</code> will automatically select the type depending on the first element of the values array using the <code>typeof</code> operator. If the value is a number, it will be declared as a measure, in any other case, a dimension.</p> <p>Specify data by series:</p> <pre><code>let data = {\n    series: [{\n        name: 'Genres',\n        type: 'dimension',\n        values: [\n            'Pop', 'Rock', 'Jazz', 'Metal',\n            'Pop', 'Rock', 'Jazz', 'Metal',\n            'Pop', 'Rock', 'Jazz', 'Metal'\n        ]\n    }, {\n        name: 'Kinds',\n        type: 'dimension',\n        values: [\n            'Hard', 'Hard', 'Hard', 'Hard',\n            'Smooth', 'Smooth', 'Smooth', 'Smooth',\n            'Experimental', 'Experimental', 'Experimental', 'Experimental'\n        ]\n    }, {\n        name: 'Popularity',\n        type: 'measure',\n        values: [114, 96, 78, 52, 56, 36, 174, 121, 127, 83, 94, 58]\n    }]\n};</code></pre> <p>Specify data by records:</p> <pre><code>let data = {\n    series: [{\n        name: 'Genres',\n        type: 'dimension'\n    }, {\n        name: 'Kinds',\n        type: 'dimension'\n    }, {\n        name: 'Popularity',\n        type: 'measure'\n    }],\n    records: [\n        ['Pop', 'Hard', 114],\n        ['Rock', 'Hard', 96],\n        ['Jazz', 'Hard', 78],\n        ['Metal', 'Hard', 52],\n        ['Pop', 'Smooth', 56],\n        ['Rock', 'Smooth', 36],\n        ['Jazz', 'Smooth', 174],\n        ['Metal', 'Smooth', 121],\n        ['Pop', 'Experimental', 127],\n        ['Rock', 'Experimental', 83],\n        ['Jazz', 'Experimental', 94],\n        ['Metal', 'Experimental', 58],\n    ]\n};</code></pre> <p>Using data cube form:</p> Genres PopRockJazzMetal Kinds Hard 114967852 Smooth 563674121 Experimental 127839458 Popularity <pre><code>let data = {\n    dimensions: [{\n        name: 'Genres',\n        values: ['Pop', 'Rock', 'Jazz', 'Metal']\n    }, {\n        name: 'Kinds',\n        values: ['Hard', 'Smooth', 'Experimental']\n    }],\n    measures: [{\n        name: 'Popularity',\n        values: [\n            [114, 96, 78, 52],\n            [56, 36, 174, 121],\n            [127, 83, 94, 58]\n        ]\n    }]\n};</code></pre> <p>You should set the data in the first animate call:</p> <pre><code>chart.animate({\n    data\n});</code></pre>"},{"location":"tutorial/events/","title":"Events","text":"<p>You can register handlers for various events. There are mouse events (<code>click</code>, <code>mouseon</code>), animation events (<code>begin</code>, <code>update</code>, <code>complete</code>), and rendering events that are called before rendering the chart elements. Handlers can be registered/unregistered with the <code>on</code>, <code>off</code> method pair.</p> <p>We are registering a handler for the <code>click</code> event which will show an alert block with information about the clicked marker.</p> Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport data from 'https://lib.vizzuhq.com/0.7/assets/data/music_data.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data: data,\n    config: {\n        channels: {\n            y: {\n                set: ['Popularity', 'Kinds']\n            },\n            x: {\n                set: ['Genres']\n            },\n            label: {\n                attach: ['Popularity']\n            },\n        },\n        color: {\n            attach: ['Kinds']\n        },\n    }\n})</code></pre> <pre><code>function clickHandler(event) {\n    alert(JSON.stringify(event.data));\n}\n\nchart.on('click', clickHandler);</code></pre> <p>Unregistering the previously registered handler.</p> <pre><code>chart.off('click', clickHandler);</code></pre> <p>Here we override the axis label color for <code>Jazz</code> to red and all others to gray.</p> <pre><code>function labelDrawHandler(event) {\n    event.renderingContext.fillStyle =\n        (event.data.text === 'Jazz') ? 'red' : 'gray';\n}\n\nchart.on('plot-axis-label-draw', labelDrawHandler);</code></pre> <p>Unregistering the previously registered handler.</p> <pre><code>chart.off('plot-axis-label-draw', labelDrawHandler);</code></pre> <p>The default behaviour of all events can be blocked by calling the event's <code>preventDefault</code> method. Here we block the drawing of the <code>Vizzu</code> logo in the bottom right corner of the chart.</p> <pre><code>function logoDrawHandler(event) {\n    event.preventDefault();\n}\n\nchart.on('logo-draw', logoDrawHandler);</code></pre> <p>Unregistering the previously registered handler.</p> <pre><code>chart.off('logo-draw', logoDrawHandler);</code></pre>"},{"location":"tutorial/filter_add_new_records/","title":"Filtering &amp; adding new records","text":"<p>Filtering enables you to zoom in or out within a chart, allowing the viewer to focus on certain selected elements, or get more context. You can also add new records to the data on the chart which makes it easy to work with real-time sources.</p> <p>We add two items from the <code>Genres</code> dimension - using the <code>||</code> operator - to the filter, so the chart elements that belong to the other two items will vanish from the chart.</p> Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport data from 'https://lib.vizzuhq.com/0.7/assets/data/music_data.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data: data,\n    config: {\n        channels: {\n            y: {\n                set: ['Popularity', 'Kinds']\n            },\n            x: {\n                set: ['Genres']\n            },\n            label: {\n                attach: ['Popularity']\n            },\n        },\n        color: {\n            attach: ['Kinds']\n        },\n    }\n})</code></pre> <pre><code>chart.animate({\n    data: {\n        filter: record =&gt;\n            record[\"Genres\"] == 'Pop' ||\n            record[\"Genres\"] == 'Metal',\n    }\n})</code></pre> <p>Now we add a cross-filter that includes items from both the <code>Genres</code> and the <code>Kinds</code> dimensions. This way we override the filter from the previous state. If we weren't update the filter, <code>Vizzu</code> would use it in subsequent states.</p> <pre><code>chart.animate({\n    data: {\n        filter: record =&gt;\n            (record[\"Genres\"] == 'Pop' || record[\"Genres\"] == 'Metal') &amp;&amp;\n            record[\"Kinds\"] == 'Smooth'\n    }\n})</code></pre> <p>Switching the filter off to get back to the original view.</p> <pre><code>chart.animate({\n    data: {\n        filter: null,\n    }\n})</code></pre> <p>Here we add another record to the data set and update the chart accordingly.</p> <pre><code>chart.animate({\n    data: {\n        records: [\n            ['Soul', 'Hard', 91],\n            ['Soul', 'Smooth', 57],\n            ['Soul', 'Experimental', 115],\n        ]\n    }\n})</code></pre> <p>Info</p> <p>Combining this option with the store function makes it easy to update previously configured states with fresh data since this function saves the config and style parameters of the chart into a variable but not the data.</p>"},{"location":"tutorial/geometry/","title":"Geometry","text":"<p>In <code>Vizzu</code> you can set the geometric elements used to represent your data by the geometry property within the config object. This is where the library shines - beautifully animating between the geometries!</p> <p>Switching the geometry to area.</p> Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport data from 'https://lib.vizzuhq.com/0.7/assets/data/music_data.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data: data,\n    config: {\n        channels: {\n            y: {\n                set: ['Popularity']\n            },\n            x: {\n                set: ['Genres']\n            },\n        },\n    }\n})</code></pre> <pre><code>chart.animate({\n    config: {\n        geometry: 'area',\n    }\n})</code></pre> <p>Drawing a line chart.</p> <pre><code>chart.animate({\n    config: {\n        geometry: 'line',\n    }\n})</code></pre> <p>Switching the geometry to circle. This setting is the most useful when used together with the size channel, as shown in the next chapter of the tutorial.</p> <pre><code>chart.animate({\n    config: {\n        geometry: 'circle',\n    }\n})</code></pre> <p>Rectangle geometry is the default setting in <code>Vizzu</code>, used for most common charts like bar and column charts.</p> <pre><code>chart.animate({\n    config: {\n        geometry: 'rectangle',\n    }\n})</code></pre>"},{"location":"tutorial/group_stack/","title":"Group/stack","text":"<p>The following example shows how to group, regroup and stack elements of a bar chart.</p> <p>To get a stacked chart, you need to add a new dimension to the same channel where the measure is: the y-axis. However, since doing only this would result in multiple column chart elements with the same color stacked on top of each other, we also add the same dimension to the color channel.</p> Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport data from 'https://lib.vizzuhq.com/0.7/assets/data/music_data.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data: data,\n    config: {\n        channels: {\n            y: {\n                set: ['Popularity']\n            },\n            x: {\n                set: ['Genres']\n            },\n        },\n    }\n})</code></pre> <pre><code>chart.animate({\n    config: {\n        channels: {\n            y: {\n                attach: ['Kinds']\n            },\n            color: {\n                attach: ['Kinds']\n            }\n        }\n    }\n})</code></pre> <p>By detaching this newly added dimension from the y-axis and attaching it to the x-axis, you get a grouped bar chart in a way that is easy to follow for the viewer.</p> <pre><code>chart.animate({\n    config: {\n        channels: {\n            y: {\n                detach: ['Kinds']\n            },\n            x: {\n                attach: ['Kinds']\n            }\n        }\n    }\n})</code></pre> <p>In order to change the category via which the elements are grouped, just change the order of the dimension with another one on the same axis.</p> <pre><code>chart.animate({\n    config: {\n        channels: {\n            x: {\n                set: ['Kinds', 'Genres']\n            }\n        }\n    }\n})</code></pre> <p>To stack a grouped chart, you just have to do the same thing the other way around: detach the dimension from the x-axis and attach it to the y-axis.</p> <pre><code>chart.animate({\n    config: {\n        channels: {\n            x: {\n                detach: ['Kinds']\n            },\n            y: {\n                attach: ['Kinds']\n            }\n        }\n    }\n})</code></pre>"},{"location":"tutorial/initialization/","title":"Initialization","text":"<p>To show a <code>Vizzu</code> chart create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\" style=\"width:800px; height:480px;\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>Create a new object instance of the <code>Vizzu</code> class, add it to a variable, initialize the library, and then you can start setting up the first chart by calling the animate method.</p> <pre><code>let chart = new Vizzu('myVizzu')\n\nchart.initializing.then(\n    chart =&gt; chart.animate({\n        /* ... */\n    })\n)</code></pre>"},{"location":"tutorial/initialization/#working-with-bundlers-frameworks","title":"Working with bundlers &amp; frameworks","text":"<p>The published <code>Vizzu</code> package contains a <code>JavaScript</code> (<code>vizzu.min.js</code>) and a <code>WebAssembly</code> (<code>cvizzu.wasm</code>) module. By default, the <code>JavaScript</code> module tries to load the wasm module from the same path it was imported from.</p> <p>This behavior won't work with bundlers if they move the wasm file to a different folder. To handle this issue, you can manually set the wasm module's location.</p> <pre><code>Vizzu.options({\n    wasmUrl: \"/path/to/cvizzu.wasm\"\n})</code></pre> <p>Note</p> <p>You should set this path before the <code>Vizzu</code> constructor is called because it loads the wasm module.</p> <p>Different bundlers will need additional, specific settings to recognize the wasm file as a dependency and handle it correctly. For setting up <code>Vizzu</code> with a specific bundler or framework, check the corresponding how-to/example below:</p> <ul> <li>Webpack</li> <li>React</li> <li>Vite</li> </ul>"},{"location":"tutorial/orientation_split_polar/","title":"Orientation, split &amp; polar","text":"<p>Now that you are familiar with the basic logic and operation of <code>Vizzu</code>, let's dive in with some more advanced features that you can use to create animated data stories and show the data from different perspectives.</p> <p>Switching orientation means that you put a measure from one axis to the other to see the data from a different perspective. This is once again a state you should only use temporarily.</p> Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport data from 'https://lib.vizzuhq.com/0.7/assets/data/music_data.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data: data,\n    config: {\n        channels: {\n            y: {\n                set: ['Popularity', 'Kinds']\n            },\n            x: {\n                set: ['Genres']\n            },\n            label: {\n                attach: ['Popularity']\n            },\n        },\n        color: {\n            attach: ['Kinds']\n        },\n    }\n})</code></pre> <pre><code>chart.animate({\n    config: {\n        channels: {\n            y: {\n                detach: ['Popularity']\n            },\n            x: {\n                attach: ['Popularity']\n            }\n        }\n    }\n})</code></pre> <p>By turning the split parameter on, you can see stacked elements side-by-side, which enables the comparison of the components.</p> <pre><code>chart.animate({\n    config: {\n        split: true\n    }\n})</code></pre> <p>Merging the components by turning the split parameter off.</p> <pre><code>chart.animate({\n    config: {\n        split: false\n    }\n})</code></pre> <p>We aggregate the data by removing the <code>Genres</code> dimension from the x-axis.</p> <pre><code>chart.animate({\n    config: {\n        channels: {\n            x: {\n                detach: ['Genres']\n            }\n        }\n    }\n})</code></pre> <p>Switching from cartesian coordinates to polar. When doing so, it is worth setting the axis range on the axis with the dimension so that the viewers can easily compare the values shown. If you want to return to the default cartesian coordinates, just set the <code>coordSystem</code> parameter to <code>'cartesian'</code>.</p> <p>Info</p> <p>The range of the x-axis is automatically set to <code>max:133%</code> as this is the standard way to show radial charts.</p> <pre><code>chart.animate({\n    config: {\n        channels: {\n            y: {\n                range: {\n                    min: '-30%'\n                }\n            }\n        },\n        coordSystem: 'polar'\n    }\n})</code></pre>"},{"location":"tutorial/shorthands_store/","title":"Shorthands &amp; Store","text":"<p>To assist you with the development we added various shorthands that will make your code more compact.</p> <p>We also added store functions, which enable you to save either a chart state or a whole animation into a variable that you can reuse later instead of setting up that state or animation once again.</p> <p>If you don't use the <code>data</code> and <code>style</code> properties in the first parameter of the animate method, you can simplify your code by using only the object of the <code>config</code> property.</p> Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport data from 'https://lib.vizzuhq.com/0.7/assets/data/music_data.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data: data,\n    config: {\n        channels: {\n            y: {\n                set: ['Popularity', 'Kinds']\n            },\n            x: {\n                set: ['Genres']\n            },\n            label: {\n                attach: ['Popularity']\n            },\n        },\n        color: {\n            attach: ['Kinds']\n        },\n    }\n})</code></pre> <pre><code>chart.animate({\n    // config: {\n    align: 'stretch'\n    // }\n})</code></pre> <p>Let's save this state by calling the <code>store</code> function.</p> <pre><code>var snapshot;\n\nsnapshot = chart.store();</code></pre> <p>If you set/attach/detach just one series on a channel, you don't have to put that series into an array. Also, let's save this animation by calling the <code>store</code> method of the animation <code>control</code> object.</p> <pre><code>var animation;\n\nchart.animate({\n    channels: {\n        // x: { attach: [ 'Kinds' ] },\n        x: {\n            attach: 'Kinds'\n        },\n        // y: { detach: [ 'Kinds' ] },\n        y: {\n            detach: 'Kinds'\n        }\n    },\n    align: 'none'\n}).activated.then(control =&gt; {\n    animation = control.store();\n});</code></pre> <p>If you use set on a channel and no other options like range, you don't have to express that channel as an object. If you only set one series on a channel you can simply write the series' name after the channel name.</p> <pre><code>chart.animate({\n    channels: {\n        // y: { set: [ 'Kinds', 'Popularity' ] },\n        y: ['Kinds', 'Popularity'],\n        // x: { set: [ 'Genres' ] },\n        x: 'Genres'\n    }\n})</code></pre> <p>In any case, you can simply omit the <code>channel</code> object, <code>Vizzu</code> will automatically recognize the channels by their names.</p> <pre><code>chart.animate({\n    // channels: {\n    y: 'Kinds',\n    x: ['Genres', 'Popularity']\n    // }\n})</code></pre> <p>If you have multiple keyframes, but with no animation options, you can omit the <code>keyframe</code> object.</p> <pre><code>chart.animate([{\n    // target: {\n    y: ['Genres', 'Popularity']\n    x: 'Kinds',\n    // }\n}, {\n    // target: {\n    y: 'Kinds',\n    x: ['Genres', 'Popularity']\n    // }\n}])</code></pre> <p>Instead of creating nested objects, you can set the styles like this.</p> <pre><code>chart.animate({\n    style: {\n        // plot: { xAxis: { label: { fontSize: '150%' } } }\n        'plot.xAxis.label.fontSize': '150%',\n        'title.backgroundColor': '#A0A0A0'\n    }\n})</code></pre> <p>This is how you can reuse a previously stored animation.</p> <pre><code>chart.animate(animation)</code></pre> <p>You can also get back to a state that you previously stored.</p> <pre><code>chart.animate(snapshot)</code></pre>"},{"location":"tutorial/sorting/","title":"Sorting","text":"<p><code>Vizzu</code> provides multiple options to sort data. By default, the data is sorted by the order it is added to <code>Vizzu</code>. This is why we suggest to add temporal data such as dates in chronological order - from oldest to newest.</p> <p>You can also sort the elements by value, which will provide you with an ascending order.</p> Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport data from 'https://lib.vizzuhq.com/0.7/assets/data/music_data.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data: data,\n    config: {\n        channels: {\n            y: {\n                set: ['Popularity', 'Kinds']\n            },\n            x: {\n                set: ['Genres']\n            },\n            label: {\n                attach: ['Popularity']\n            },\n        },\n        color: {\n            attach: ['Kinds']\n        },\n    }\n})</code></pre> <pre><code>chart.animate({\n    config: {\n        sort: 'byValue'\n    }\n})</code></pre> <p>If you want descending order instead, you have to set the <code>reverse</code> parameter to <code>true</code>. When used without setting the sorting to <code>byValue</code>, the elements will be in the opposite order than they are in the data set added to <code>Vizzu</code>.</p> <pre><code>chart.animate({\n    config: {\n        reverse: true\n    }\n})</code></pre> <p>This is how to switch back to the default sorting.</p> <pre><code>chart.animate({\n    config: {\n        sort: 'none',\n        reverse: false\n    }\n})</code></pre> <p>When you have more than one dimension on a channel, their order determines how the elements are grouped. For example, below - each set of bars is first organized by <code>Genres</code>, and then we have one bar for each of <code>Kinds</code>.</p> <pre><code>chart.animate({\n    config: {\n        channels: {\n            y: {\n                detach: ['Kinds']\n            },\n            x: {\n                set: ['Genres', 'Kinds']\n            }\n        }\n    }\n})</code></pre> <p>When switching the order of dimensions on the x-axis <code>Vizzu</code> will rearrange the elements according to this new logic.</p> <p>Note</p> <p>The legend is automatically removed during the animation.</p> <pre><code>chart.animate({\n    config: {\n        channels: {\n            x: {\n                set: ['Kinds', 'Genres']\n            },\n        }\n    }\n})</code></pre>"},{"location":"tutorial/style/","title":"Style","text":"<p><code>Vizzu</code> offers a wide variety of styling options when you want to personalize the look and feel of your animated charts. The styling properties are organized into a hierarchical structure. Font styles, when set on a higher level of this hierarchy, will be inherited on all lower levels. You can use absolute sizing (<code>px</code>, <code>pt</code>) and relative (<code>%</code>, <code>em</code>, <code>vw</code>).</p> <p>Similarly to all other parameters of the animate method, <code>Vizzu</code> will animate the changes in the styling of the charts. This provides an excellent opportunity to check and control the effect of these changes.</p> <p>You can find below the complete list of the available styling properties and their default values.</p> <p>+\u00a0expand all</p> <p>backgroundColor: <code>#FFFFFFFF</code></p> <p>borderColor: <code>#FFFFFFFF</code></p> <p>borderWidth: <code>0.000000</code></p> <p>fontFamily: <code>Roboto, sans-serif</code></p> <p>fontSize: <code>1.000000em</code></p> <p>fontStyle: <code>normal</code></p> <p>fontWeight: <code>normal</code></p> <p>+\u00a0legend</p> <p>\u2003backgroundColor: <code>#00000000</code></p><p>\u2003borderColor: <code>#00000000</code></p><p>\u2003borderWidth: <code>0.000000</code></p><p>\u2003+\u00a0label</p><p>\u2003\u2003backgroundColor: <code>#00000000</code></p><p>\u2003\u2003color: <code>#999999FF</code></p><p>\u2003\u2003fontFamily: <code></code></p><p>\u2003\u2003fontSize: <code>1.000000em</code></p><p>\u2003\u2003fontStyle: <code>normal</code></p><p>\u2003\u2003fontWeight: <code>normal</code></p><p>\u2003\u2003maxFractionDigits: <code>3.000000</code></p><p>\u2003\u2003numberFormat: <code>prefixed</code></p><p>\u2003\u2003numberScale: <code>k,M,G,T,P,E,Z,Y</code></p><p>\u2003\u2003paddingBottom: <code>0.416667em</code></p><p>\u2003\u2003paddingLeft: <code>0.416667em</code></p><p>\u2003\u2003paddingRight: <code>0.416667em</code></p><p>\u2003\u2003paddingTop: <code>0.416667em</code></p><p>\u2003\u2003textAlign: <code>left</code></p><p>\u2003+\u00a0marker</p><p>\u2003\u2003size: <code>1.285714em</code></p><p>\u2003\u2003type: <code>circle</code></p><p>\u2003maxWidth: <code>30.000000%</code></p><p>\u2003paddingBottom: <code>5.000000em</code></p><p>\u2003paddingLeft: <code>1.666667em</code></p><p>\u2003paddingRight: <code>0.416667em</code></p><p>\u2003paddingTop: <code>0.833333em</code></p><p>\u2003+\u00a0title</p><p>\u2003\u2003backgroundColor: <code>#00000000</code></p><p>\u2003\u2003color: <code>#999999FF</code></p><p>\u2003\u2003fontFamily: <code></code></p><p>\u2003\u2003fontSize: <code>1.166667em</code></p><p>\u2003\u2003fontStyle: <code>normal</code></p><p>\u2003\u2003fontWeight: <code>normal</code></p><p>\u2003\u2003maxFractionDigits: <code>3.000000</code></p><p>\u2003\u2003numberFormat: <code>prefixed</code></p><p>\u2003\u2003numberScale: <code>k,M,G,T,P,E,Z,Y</code></p><p>\u2003\u2003paddingBottom: <code>0.357143em</code></p><p>\u2003\u2003paddingLeft: <code>0.357143em</code></p><p>\u2003\u2003paddingRight: <code>0.357143em</code></p><p>\u2003\u2003paddingTop: <code>0.857143em</code></p><p>\u2003\u2003textAlign: <code>left</code></p><p>\u2003width: <code>8.333333em</code></p> <p>+\u00a0logo</p> <p>\u2003filter: <code>color(#D8D8D8FF)</code></p><p>\u2003paddingBottom: <code>47.500000%</code></p><p>\u2003paddingLeft: <code>40.000000%</code></p><p>\u2003paddingRight: <code>40.000000%</code></p><p>\u2003paddingTop: <code>47.500000%</code></p><p>\u2003width: <code>3.186307em</code></p> <p>paddingBottom: <code>0.833333em</code></p> <p>paddingLeft: <code>0.416667em</code></p> <p>paddingRight: <code>0.416667em</code></p> <p>paddingTop: <code>0.416667em</code></p> <p>+\u00a0plot</p> <p>\u2003backgroundColor: <code>#00000000</code></p><p>\u2003borderColor: <code>#00000000</code></p><p>\u2003borderWidth: <code>0.000000</code></p><p>\u2003+\u00a0marker</p><p>\u2003\u2003borderOpacity: <code>1.000000</code></p><p>\u2003\u2003borderOpacityMode: <code>premultiplied</code></p><p>\u2003\u2003borderWidth: <code>1.000000</code></p><p>\u2003\u2003circleMaxRadius: <code>0.050000</code></p><p>\u2003\u2003circleMinRadius: <code>0.005000</code></p><p>\u2003\u2003colorGradient: <code>#4171CDFF 0.000000, #8536C7FF 0.250000, #C33E7FFF 0.500000, #E9974EFF 0.750000, #F3F239FF 1.000000</code></p><p>\u2003\u2003colorPalette: <code>#4171CDFF #03AE71FF #F4941BFF #F4C204FF #D49664FF #F25456FF #9E67ABFF #BCA604FF #846E1CFF #FC763CFF #B462ACFF #F492FCFF #BC4A94FF #9C7EF4FF #9C52B4FF #6CA2FCFF #5C6EBCFF #7C868CFF #AC968CFF #4C7450FF #AC7A4CFF #7CAE54FF #4C7450FF #9C1A6CFF #AC3E94FF #B41204FF</code></p><p>\u2003\u2003fillOpacity: <code>1.000000</code></p><p>\u2003\u2003+\u00a0guides</p><p>\u2003\u2003\u2003color: <code>#E8E8E8FF</code></p><p>\u2003\u2003\u2003lineWidth: <code>0.500000</code></p><p>\u2003\u2003+\u00a0label</p><p>\u2003\u2003\u2003angle: <code>0.000000rad</code></p><p>\u2003\u2003\u2003backgroundColor: <code>#00000000</code></p><p>\u2003\u2003\u2003color: <code>#00000000</code></p><p>\u2003\u2003\u2003filter: <code>lightness(0.000000)</code></p><p>\u2003\u2003\u2003fontFamily: <code></code></p><p>\u2003\u2003\u2003fontSize: <code>0.916667em</code></p><p>\u2003\u2003\u2003fontStyle: <code>normal</code></p><p>\u2003\u2003\u2003fontWeight: <code>bold</code></p><p>\u2003\u2003\u2003format: <code>measureFirst</code></p><p>\u2003\u2003\u2003maxFractionDigits: <code>3.000000</code></p><p>\u2003\u2003\u2003numberFormat: <code>grouped</code></p><p>\u2003\u2003\u2003numberScale: <code>k,M,G,T,P,E,Z,Y</code></p><p>\u2003\u2003\u2003orientation: <code>horizontal</code></p><p>\u2003\u2003\u2003paddingBottom: <code>0.454545em</code></p><p>\u2003\u2003\u2003paddingLeft: <code>0.454545em</code></p><p>\u2003\u2003\u2003paddingRight: <code>0.454545em</code></p><p>\u2003\u2003\u2003paddingTop: <code>0.454545em</code></p><p>\u2003\u2003\u2003position: <code>center</code></p><p>\u2003\u2003\u2003textAlign: <code>center</code></p><p>\u2003\u2003lineMaxWidth: <code>0.010000</code></p><p>\u2003\u2003lineMinWidth: <code>0.001000</code></p><p>\u2003\u2003maxLightness: <code>0.400000</code></p><p>\u2003\u2003minLightness: <code>-0.400000</code></p><p>\u2003\u2003rectangleSpacing: <code>null</code></p><p>\u2003overflow: <code>hidden</code></p><p>\u2003paddingBottom: <code>5.000000em</code></p><p>\u2003paddingLeft: <code>6.666667em</code></p><p>\u2003paddingRight: <code>3.750000em</code></p><p>\u2003paddingTop: <code>4.166667em</code></p><p>\u2003+\u00a0xAxis</p><p>\u2003\u2003color: <code>#CCCCCCFF</code></p><p>\u2003\u2003+\u00a0guides</p><p>\u2003\u2003\u2003color: <code>#EDEDEDFF</code></p><p>\u2003\u2003\u2003lineWidth: <code>1.000000</code></p><p>\u2003\u2003+\u00a0interlacing</p><p>\u2003\u2003\u2003color: <code>#F7F7F7FF</code></p><p>\u2003\u2003+\u00a0label</p><p>\u2003\u2003\u2003angle: <code>0.000000rad</code></p><p>\u2003\u2003\u2003backgroundColor: <code>#00000000</code></p><p>\u2003\u2003\u2003color: <code>#999999FF</code></p><p>\u2003\u2003\u2003fontFamily: <code></code></p><p>\u2003\u2003\u2003fontSize: <code>1.000000em</code></p><p>\u2003\u2003\u2003fontStyle: <code>normal</code></p><p>\u2003\u2003\u2003fontWeight: <code>normal</code></p><p>\u2003\u2003\u2003maxFractionDigits: <code>3.000000</code></p><p>\u2003\u2003\u2003numberFormat: <code>prefixed</code></p><p>\u2003\u2003\u2003numberScale: <code>k,M,G,T,P,E,Z,Y</code></p><p>\u2003\u2003\u2003orientation: <code>horizontal</code></p><p>\u2003\u2003\u2003paddingBottom: <code>0.666667em</code></p><p>\u2003\u2003\u2003paddingLeft: <code>0.666667em</code></p><p>\u2003\u2003\u2003paddingRight: <code>0.666667em</code></p><p>\u2003\u2003\u2003paddingTop: <code>0.666667em</code></p><p>\u2003\u2003\u2003position: <code>min-edge</code></p><p>\u2003\u2003\u2003side: <code>negative</code></p><p>\u2003\u2003\u2003textAlign: <code>left</code></p><p>\u2003\u2003+\u00a0ticks</p><p>\u2003\u2003\u2003color: <code>#CCCCCCFF</code></p><p>\u2003\u2003\u2003length: <code>0.416667em</code></p><p>\u2003\u2003\u2003lineWidth: <code>1.000000</code></p><p>\u2003\u2003\u2003position: <code>outside</code></p><p>\u2003\u2003+\u00a0title</p><p>\u2003\u2003\u2003backgroundColor: <code>#00000000</code></p><p>\u2003\u2003\u2003color: <code>#999999FF</code></p><p>\u2003\u2003\u2003fontFamily: <code></code></p><p>\u2003\u2003\u2003fontSize: <code>1.166667em</code></p><p>\u2003\u2003\u2003fontStyle: <code>normal</code></p><p>\u2003\u2003\u2003fontWeight: <code>normal</code></p><p>\u2003\u2003\u2003maxFractionDigits: <code>3.000000</code></p><p>\u2003\u2003\u2003numberFormat: <code>prefixed</code></p><p>\u2003\u2003\u2003numberScale: <code>k,M,G,T,P,E,Z,Y</code></p><p>\u2003\u2003\u2003orientation: <code>horizontal</code></p><p>\u2003\u2003\u2003paddingBottom: <code>0.357143em</code></p><p>\u2003\u2003\u2003paddingLeft: <code>0.357143em</code></p><p>\u2003\u2003\u2003paddingRight: <code>0.357143em</code></p><p>\u2003\u2003\u2003paddingTop: <code>1.714286em</code></p><p>\u2003\u2003\u2003position: <code>min-edge</code></p><p>\u2003\u2003\u2003side: <code>negative</code></p><p>\u2003\u2003\u2003textAlign: <code>left</code></p><p>\u2003\u2003\u2003vposition: <code>middle</code></p><p>\u2003\u2003\u2003vside: <code>upon</code></p><p>\u2003+\u00a0yAxis</p><p>\u2003\u2003color: <code>#CCCCCCFF</code></p><p>\u2003\u2003+\u00a0guides</p><p>\u2003\u2003\u2003color: <code>#EDEDEDFF</code></p><p>\u2003\u2003\u2003lineWidth: <code>1.000000</code></p><p>\u2003\u2003+\u00a0interlacing</p><p>\u2003\u2003\u2003color: <code>#F7F7F7FF</code></p><p>\u2003\u2003+\u00a0label</p><p>\u2003\u2003\u2003angle: <code>0.000000rad</code></p><p>\u2003\u2003\u2003backgroundColor: <code>#00000000</code></p><p>\u2003\u2003\u2003color: <code>#999999FF</code></p><p>\u2003\u2003\u2003fontFamily: <code></code></p><p>\u2003\u2003\u2003fontSize: <code>1.000000em</code></p><p>\u2003\u2003\u2003fontStyle: <code>normal</code></p><p>\u2003\u2003\u2003fontWeight: <code>normal</code></p><p>\u2003\u2003\u2003maxFractionDigits: <code>3.000000</code></p><p>\u2003\u2003\u2003numberFormat: <code>prefixed</code></p><p>\u2003\u2003\u2003numberScale: <code>k,M,G,T,P,E,Z,Y</code></p><p>\u2003\u2003\u2003orientation: <code>horizontal</code></p><p>\u2003\u2003\u2003paddingBottom: <code>0.666667em</code></p><p>\u2003\u2003\u2003paddingLeft: <code>0.666667em</code></p><p>\u2003\u2003\u2003paddingRight: <code>0.666667em</code></p><p>\u2003\u2003\u2003paddingTop: <code>0.666667em</code></p><p>\u2003\u2003\u2003position: <code>min-edge</code></p><p>\u2003\u2003\u2003side: <code>negative</code></p><p>\u2003\u2003\u2003textAlign: <code>left</code></p><p>\u2003\u2003+\u00a0ticks</p><p>\u2003\u2003\u2003color: <code>#CCCCCCFF</code></p><p>\u2003\u2003\u2003length: <code>0.416667em</code></p><p>\u2003\u2003\u2003lineWidth: <code>1.000000</code></p><p>\u2003\u2003\u2003position: <code>outside</code></p><p>\u2003\u2003+\u00a0title</p><p>\u2003\u2003\u2003backgroundColor: <code>#00000000</code></p><p>\u2003\u2003\u2003color: <code>#999999FF</code></p><p>\u2003\u2003\u2003fontFamily: <code></code></p><p>\u2003\u2003\u2003fontSize: <code>1.166667em</code></p><p>\u2003\u2003\u2003fontStyle: <code>normal</code></p><p>\u2003\u2003\u2003fontWeight: <code>normal</code></p><p>\u2003\u2003\u2003maxFractionDigits: <code>3.000000</code></p><p>\u2003\u2003\u2003numberFormat: <code>prefixed</code></p><p>\u2003\u2003\u2003numberScale: <code>k,M,G,T,P,E,Z,Y</code></p><p>\u2003\u2003\u2003orientation: <code>horizontal</code></p><p>\u2003\u2003\u2003paddingBottom: <code>1.071429em</code></p><p>\u2003\u2003\u2003paddingLeft: <code>0.357143em</code></p><p>\u2003\u2003\u2003paddingRight: <code>0.357143em</code></p><p>\u2003\u2003\u2003paddingTop: <code>0.357143em</code></p><p>\u2003\u2003\u2003position: <code>min-edge</code></p><p>\u2003\u2003\u2003side: <code>upon</code></p><p>\u2003\u2003\u2003textAlign: <code>left</code></p><p>\u2003\u2003\u2003vposition: <code>end</code></p><p>\u2003\u2003\u2003vside: <code>positive</code></p> <p>+\u00a0title</p> <p>\u2003backgroundColor: <code>#00000000</code></p><p>\u2003color: <code>#494949FF</code></p><p>\u2003fontFamily: <code></code></p><p>\u2003fontSize: <code>2.166667em</code></p><p>\u2003fontStyle: <code>normal</code></p><p>\u2003fontWeight: <code>normal</code></p><p>\u2003maxFractionDigits: <code>3.000000</code></p><p>\u2003numberFormat: <code>prefixed</code></p><p>\u2003numberScale: <code>k,M,G,T,P,E,Z,Y</code></p><p>\u2003paddingBottom: <code>0.000000px</code></p><p>\u2003paddingLeft: <code>0.384615em</code></p><p>\u2003paddingRight: <code>0.384615em</code></p><p>\u2003paddingTop: <code>0.576923em</code></p><p>\u2003textAlign: <code>center</code></p> <p>+\u00a0tooltip</p> <p>\u2003arrowSize: <code>8.000000</code></p><p>\u2003backgroundColor: <code>#FFFFFFFF</code></p><p>\u2003borderColor: <code>#D8D8D8FF</code></p><p>\u2003borderRadius: <code>3.000000</code></p><p>\u2003borderWidth: <code>1.000000</code></p><p>\u2003color: <code>#191919FF</code></p><p>\u2003distance: <code>2.000000</code></p><p>\u2003dropShadow: <code>3.000000</code></p><p>\u2003fontFamily: <code>Roboto, sans-serif</code></p><p>\u2003fontSize: <code>12.000000px</code></p><p>\u2003fontStyle: <code>normal</code></p><p>\u2003fontWeight: <code>normal</code></p><p>\u2003layout: <code>multiLine</code></p><p>\u2003seriesName: <code></code></p><p>\u2003shadowColor: <code>#0000000A</code></p>"},{"location":"tutorial/without_coordinates_noop_channel/","title":"Without coordinates &amp; noop channel","text":"<p>Certain chart types have neither measures nor dimensions on the axes such as treemaps and bubble charts. This is a case when the <code>noop</code> channel comes in handy for grouping and stacking elements in these kinds of charts.</p> <p>To get to a treemap, we have to detach all dimensions and the measure from the axes and put two of them on the <code>size</code> channel, whereas the other dimension is still on the <code>color</code> channel.</p> Info - How to setup Vizzu <p>In <code>HTML</code>, create a placeholder element that will contain the rendered chart.</p> <pre><code>&lt;html&gt;\n &lt;body&gt;\n  &lt;div id=\"myVizzu\"&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>In <code>JavaScript</code>, initialize and configure the chart:</p> <pre><code>import Vizzu from 'https://cdn.jsdelivr.net/npm/vizzu@0.7/dist/vizzu.min.js'\nimport data from 'https://lib.vizzuhq.com/0.7/assets/data/music_data.js'\n\nlet chart = new Vizzu('myVizzu')\n\nchart.initializing\n\nchart.animate({\n    data: data,\n    config: {\n        channels: {\n            y: {\n                set: ['Popularity', 'Kinds']\n            },\n            x: {\n                set: ['Genres']\n            },\n            label: {\n                attach: ['Popularity']\n            },\n        },\n        color: {\n            attach: ['Kinds']\n        },\n    }\n})</code></pre> <pre><code>chart.animate({\n    config: {\n        channels: {\n            y: {\n                set: null\n            },\n            x: {\n                set: null\n            },\n            size: {\n                attach: ['Genres', 'Popularity']\n            }\n        }\n    }\n})</code></pre> <p>Getting from a treemap to a bubble chart is simply by changing the geometry to circle. This bubble chart is stacked by the <code>Kinds</code> dimension that is on the <code>size</code> channel - this is why the bubbles are in separate, small groups.</p> <pre><code>chart.animate({\n    config: {\n        geometry: 'circle'\n    }\n})</code></pre> <p>In order to show all bubbles as one group, we use the <code>noop</code> (no operations) channel for the <code>Genres</code> dimension. The <code>noop</code> channel enables us to have a dimension on the chart, that doesn\u2019t affect any parameter of the elements, only their count.</p> <pre><code>chart.animate({\n    config: {\n        channels: {\n            size: {\n                detach: ['Genres']\n            },\n            noop: {\n                set: ['Genres']\n            }\n        }\n    }\n})</code></pre>"}]}